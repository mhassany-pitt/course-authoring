{
    "ae_adl_hello": {
        "lines": [
            "print(\"Hello world!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Hello world!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_variables": {
        "lines": [
            "a = 2",
            "a = a + 3",
            "print(\"The result is now\", a)",
            "",
            "a = 1 + a",
            "print(\"The result is now\", a)",
            "",
            "a = 9",
            "print(\"The result is now\", a)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The result is now",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "a",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The result is now",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValue",
                "9",
                "0",
                "int"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The result is now",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_simple_arithmetics": {
        "lines": [
            "a = 5 + 2",
            "b = a * 3",
            "print(\"The result is:\", b)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The result is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_arithmetics2": {
        "lines": [
            "a = 2 + 3 * 9",
            "b = a * (50 - a) / 2.5",
            "print(\"The end result is\", b)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValue",
                "9",
                "4",
                "int"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "50",
                "2",
                "int"
            ],
            [
                "addOperator",
                "-",
                "3"
            ],
            [
                "addValueFromVariable",
                "a",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValue",
                "2.5",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The end result is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_swap": {
        "lines": [
            "first = 3",
            "second = 8",
            "temp = second",
            "second = first",
            "first = temp",
            "print(\"The first is now\", first, \"and the second is\", second)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "8",
                "0",
                "int"
            ],
            [
                "assign",
                "second"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "second",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "first",
                "0"
            ],
            [
                "assign",
                "second"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "4"
            ],
            [
                "addValue",
                "The first is now",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "first",
                "0/1/0"
            ],
            [
                "addValue",
                "and the second is",
                "0/2/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "second",
                "0/3/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_comparison": {
        "lines": [
            "number1 = 45",
            "number2 = 30",
            "",
            "print(\"Number 1 is bigger than number 2:\", number1 > number2)",
            "print(\"Number 1 is smaller than number 2:\", number1 < number2)",
            "print(\"Number 1 is the same as number 2:\", number1 == number2)",
            "print(\"Number 1 is not the same as number 2:\", number1 != number2)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "45",
                "0",
                "int"
            ],
            [
                "assign",
                "number1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "30",
                "0",
                "int"
            ],
            [
                "assign",
                "number2"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number 1 is bigger than number 2:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number1",
                "0/1/0"
            ],
            [
                "addOperator",
                ">",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "number2",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number 1 is smaller than number 2:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number1",
                "0/1/0"
            ],
            [
                "addOperator",
                "<",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "number2",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number 1 is the same as number 2:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number1",
                "0/1/0"
            ],
            [
                "addOperator",
                "==",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "number2",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number 1 is not the same as number 2:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number1",
                "0/1/0"
            ],
            [
                "addOperator",
                "!=",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "number2",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_logic": {
        "explanations": {
            "line5": "Notice how the logic operator behaves. If the left-hand side gives the result, the right-hand side is not evaluated.",
            "line6": "Notice how the logic operator behaves. If the left-hand side gives the result, the right-hand side is not evaluated.",
            "line10": "Notice how the logic operator behaves. If the left-hand side gives the result, the right-hand side is not evaluated.",
            "line11": "Notice how the logic operator behaves. If the left-hand side gives the result, the right-hand side is not evaluated."
        },
        "lines": [
            "account1 = 2540",
            "account2 = 13250",
            "price = 3400",
            "",
            "can_afford = account1 >= price or account2 >= price",
            "can_afford = account2 >= price or account1 >= price",
            "",
            "account2 = account2 - price",
            "",
            "money_left = account1 > 0 and account2 > 0",
            "limit_exceeded = account1 < 0 and account2 < 0"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">=",
                "lr"
            ],
            [
                "createOperator",
                "or",
                "n"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "and",
                "n"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "2540",
                "0",
                "int"
            ],
            [
                "assign",
                "account1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "13250",
                "0",
                "int"
            ],
            [
                "assign",
                "account2"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValue",
                "3400",
                "0",
                "int"
            ],
            [
                "assign",
                "price"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "account1",
                "0"
            ],
            [
                "addOperator",
                ">=",
                "1"
            ],
            [
                "addValueFromVariable",
                "price",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "or",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l2",
                "@l1"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "account2",
                "0"
            ],
            [
                "addOperator",
                ">=",
                "1"
            ],
            [
                "addValueFromVariable",
                "price",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "assign",
                "can_afford"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "account2",
                "0"
            ],
            [
                "addOperator",
                ">=",
                "1"
            ],
            [
                "addValueFromVariable",
                "price",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "or",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l4",
                "@l3"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "account1",
                "0"
            ],
            [
                "addOperator",
                ">=",
                "1"
            ],
            [
                "addValueFromVariable",
                "price",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "assign",
                "can_afford"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "account2",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "price",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "account2"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "account1",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "and",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "account2",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "assign",
                "money_left"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "account1",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "and",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "account2",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "assign",
                "limit_exceeded"
            ]
        ]
    },
    "ae_adl_hiscore1": {
        "lines": [
            "score = 678",
            "hi_score = 732",
            "",
            "if score > hi_score:",
            "    hi_score = score",
            "    print(\"New High Score!\")",
            "",
            "print(\"Game over!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "678",
                "0",
                "int"
            ],
            [
                "assign",
                "score"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "732",
                "0",
                "int"
            ],
            [
                "assign",
                "hi_score"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "score",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "hi_score",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "score",
                "0"
            ],
            [
                "assign",
                "hi_score"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "New High Score!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Game over!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_hiscore2": {
        "lines": [
            "score = 834",
            "hi_score = 732",
            "",
            "if score > hi_score:",
            "    hi_score = score",
            "    print(\"New High Score!\")",
            "",
            "print(\"Game over!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "834",
                "0",
                "int"
            ],
            [
                "assign",
                "score"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "732",
                "0",
                "int"
            ],
            [
                "assign",
                "hi_score"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "score",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "hi_score",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "score",
                "0"
            ],
            [
                "assign",
                "hi_score"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "New High Score!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Game over!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_ifelse": {
        "lines": [
            "number = 53",
            "",
            "if number % 2 == 0:",
            "    print(\"It is an even number.\")",
            "else:",
            "    print(\"It is an odd number.\")",
            "",
            "print(\"That's it!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "53",
                "0",
                "int"
            ],
            [
                "assign",
                "number"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "number",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It is an even number.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It is an odd number.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "That's it!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_ifelifelse": {
        "lines": [
            "points = 63",
            "",
            "if points > 70:",
            "    grade = \"A\"",
            "elif points > 65:",
            "    grade = \"B\"",
            "elif points > 60:",
            "    grade = \"C\"",
            "elif points > 55:",
            "    grade = \"D\"",
            "elif points > 50:",
            "    grade = \"E\"",
            "else:",
            "    grade = \"F\"",
            "",
            "print(\"Your grade is:\", grade)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "63",
                "0",
                "int"
            ],
            [
                "assign",
                "points"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "70",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValue",
                "A",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_goto",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "65",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValue",
                "B",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "60",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValue",
                "C",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "55",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValue",
                "D",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_goto",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "50",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l13",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValue",
                "E",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_goto",
                "@l15"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addValue",
                "F",
                "0",
                "str"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Your grade is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "grade",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_nested_if": {
        "lines": [
            "age = 17",
            "hour = 14",
            "",
            "if age >= 15:",
            "",
            "    if hour < 13:",
            "        print(\"The ticket costs $2\")",
            "     else:",
            "        print(\"The ticket costs $4\")",
            "    ",
            "",
            "else:",
            "    print(\"Free entrance!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">=",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "17",
                "0",
                "int"
            ],
            [
                "assign",
                "age"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "14",
                "0",
                "int"
            ],
            [
                "assign",
                "hour"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "age",
                "0"
            ],
            [
                "addOperator",
                ">=",
                "1"
            ],
            [
                "addValue",
                "15",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "hour",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "13",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "The ticket costs $2",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "The ticket costs $4",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_goto",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Free entrance!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l3"
            ]
        ]
    },
    "ae_adl_while": {
        "lines": [
            "number = 2",
            "",
            "while number < 15:",
            "    print(\"Number is now\", number)",
            "    number = number * 2",
            "",
            "print(\"Now it's too big. Time to end!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "number"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "number",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "15",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number is now",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "number",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "number"
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Now it's too big. Time to end!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_for": {
        "lines": [
            "for i in range(1, 6):",
            "    print(\"2 *\", i, \"=\", 2 * i)",
            "",
            "print(\"Iteration ready!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "_createIterator",
                "i1",
                "",
                "1",
                "5",
                "Int"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "4"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "addValue",
                "2 *",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValue",
                "=",
                "0/2/0",
                "str"
            ],
            [
                "addValue",
                "2",
                "0/3/0",
                "int"
            ],
            [
                "addOperator",
                "*",
                "0/3/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/3/2"
            ],
            [
                "evaluateOperator",
                "0/3/1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Iteration ready!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_strings": {
        "lines": [
            "start = \"This is \"",
            "end = \"my first sentence!\"",
            "",
            "sentence = start + end",
            "print(sentence)",
            "",
            "length = len(sentence)",
            "print(\"It has\", length, \"characters.\")"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "This is ",
                "0",
                "str"
            ],
            [
                "assign",
                "start"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "my first sentence!",
                "0",
                "str"
            ],
            [
                "assign",
                "end"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "start",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "end",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sentence"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "sentence",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "sentence",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "length"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "3"
            ],
            [
                "addValue",
                "It has",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "length",
                "0/1/0"
            ],
            [
                "addValue",
                "characters.",
                "0/2/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_lists1": {
        "lines": [
            "my_list = [1, 5, 9]",
            "my_list.append(6)",
            "",
            "length = len(my_list)",
            "first = my_list[0]",
            "last = my_list[-1]",
            "",
            "print(\"My list has\", length, \"items\")",
            "print(\"The first item is\", first)",
            "print(\"The last item is\", last)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "append",
                "append(element)",
                "1",
                "-1",
                "list"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "3"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "6",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "length"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "-1",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "last"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "3"
            ],
            [
                "addValue",
                "My list has",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "length",
                "0/1/0"
            ],
            [
                "addValue",
                "items",
                "0/2/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The first item is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "first",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The last item is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "last",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_lists2": {
        "lines": [
            "my_list = [1, 4, 7]",
            "",
            "for element in my_list:",
            "    print(element)",
            "",
            "print(\"These were the items in my list.\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "3"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "_createIterator",
                "i1",
                "@my_list"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "element"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "element",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "These were the items in my list.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_lists3": {
        "lines": [
            "my_list = [7, 2, 3]",
            "",
            "for i in range(len(my_list)):",
            "    my_list[i] = my_list[i] * 2",
            "",
            "",
            "print(my_list)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "3"
            ],
            [
                "addValue",
                "7",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "_createIterator",
                "i1",
                "",
                "0",
                "2",
                "Int"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "addOperator",
                "*",
                "0/2/1"
            ],
            [
                "addValue",
                "2",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_findmax": {
        "lines": [
            "my_list = [2, 6, 14, 9]",
            "",
            "biggest = my_list[0]",
            "for value in my_list:",
            "    if value > biggest:",
            "        biggest = value",
            "",
            "print(\"The biggest value is\", biggest)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "4"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "14",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/4/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "biggest"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "_createIterator",
                "i1",
                "@my_list"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "biggest",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "assign",
                "biggest"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The biggest value is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "biggest",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_functions1": {
        "lines": [
            "def greet(name):",
            "",
            "    print(\"Hello,\", name)",
            "    print(\"Nice to meet you!\")",
            "",
            "",
            "greet(\"John\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 260,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "greet",
                "greet(name)",
                "1",
                "@l1"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "name"
                ]
            ],
            [
                "assignParameters",
                [
                    "name"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Hello,",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "name",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Nice to meet you!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "greet",
                "0",
                "1"
            ],
            [
                "addValue",
                "John",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_functions2": {
        "lines": [
            "def average(first, second):",
            "    sum = first + second",
            "    return sum / 2",
            "",
            "",
            "result = average(2, 6)",
            "print(\"The average is\", result)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 260,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "average",
                "average(first, second)",
                "2",
                "@l1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "first",
                    "second"
                ]
            ],
            [
                "assignParameters",
                [
                    "first",
                    "second"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "first",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "second",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "average",
                "0",
                "2"
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The average is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_functions3": {
        "lines": [
            "def add_discount(sum, percentage):",
            "    return sum * (1 - percentage)",
            "",
            "def add_taxes(sum, percentage):",
            "    return sum * (1 + percentage)",
            "",
            "",
            "products = 23.5 + 12.2 + 4.75",
            "total = add_taxes(add_discount(products, 0.05), 0.13)",
            "print(\"The total sum is\", total)"
        ],
        "settings": {
            "code": "aboveHeapAndPanels",
            "codeWidth": 380,
            "literalsLeft": "true",
            "heapHeight": 0,
            "stackHeight": 270,
            "width": 800,
            "rightPanelsWidth": 350
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "add_discount",
                "add_discount(sum, percentage)",
                "2",
                "@l1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "add_taxes",
                "add_taxes(sum, percentage)",
                "2",
                "@l2"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "sum",
                    "percentage"
                ]
            ],
            [
                "assignParameters",
                [
                    "sum",
                    "percentage"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "addOperator",
                "-",
                "3"
            ],
            [
                "addValueFromVariable",
                "percentage",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "4"
            ],
            [
                "createParameterVariables",
                [
                    "sum",
                    "percentage"
                ]
            ],
            [
                "assignParameters",
                [
                    "sum",
                    "percentage"
                ]
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "addOperator",
                "+",
                "3"
            ],
            [
                "addValueFromVariable",
                "percentage",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "23.5",
                "0",
                "float"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "12.2",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "4.75",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "products"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "add_taxes",
                "0",
                "2"
            ],
            [
                "addFunction",
                "add_discount",
                "0/0/0",
                "2"
            ],
            [
                "addValueFromVariable",
                "products",
                "0/0/0/0/0"
            ],
            [
                "addValue",
                "0.05",
                "0/0/0/1/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addValue",
                "0.13",
                "0/1/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "total"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The total sum is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "total",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_recursion": {
        "lines": [
            "def factorial(n):",
            "    if n < 3:",
            "        return n",
            "    else:",
            "        return factorial(n - 1) * n",
            "",
            "",
            "print(\"Factorial of 4 is:\", factorial(4))"
        ],
        "settings": {
            "code": "aboveHeapAndPanels",
            "literalsLeft": "true",
            "heapHeight": 0,
            "stackHeight": 550,
            "width": 800,
            "codeWidth": 310,
            "rightPanelsWidth": 250
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "factorial",
                "factorial(n)",
                "1",
                "@l1"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "factorial",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "n",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Factorial of 4 is:",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "factorial",
                "0/1/0",
                "1"
            ],
            [
                "addValue",
                "4",
                "0/1/0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_dict1": {
        "lines": [
            "def add_numbers(phonebook):",
            "  phonebook[\"George\"] = \"555-4523\"",
            "  phonebook[\"Mike\"] = \"555-7412\"",
            "  phonebook[\"Lisa\"] = \"555-6398\"",
            "",
            "def main():",
            "  numbers = {}",
            "  add_numbers(numbers)",
            "",
            "  count = len(numbers)",
            "  print(\"Number count:\", count)",
            "",
            "  if \"Mike\" in numbers:",
            "    print(numbers[\"Mike\"])",
            "  else:",
            "    print(\"There is no number for Mike.\")",
            "",
            "  numbers[\"Mike\"] = \"555-6852\"",
            "  mike = numbers[\"Mike\"]",
            "",
            "  if \"Marissa\" in numbers:",
            "    print(numbers[\"Marissa\"])",
            "  else:",
            "    print(\"There is no number for Marissa.\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 380,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "add_numbers",
                "add_numbers(phonebook)",
                "1",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "createOperator",
                "in",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(collection)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "phonebook"
                ]
            ],
            [
                "assignParameters",
                [
                    "phonebook"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "George",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-4523",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Mike",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-7412",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Lisa",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-6398",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "numbers"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "add_numbers",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number count:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValue",
                "Mike",
                "0",
                "str"
            ],
            [
                "addOperator",
                "in",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "Mike",
                "0/0/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "There is no number for Mike.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Mike",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-6825",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "Mike",
                "0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "assign",
                "mike"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValue",
                "Marissa",
                "0",
                "str"
            ],
            [
                "addOperator",
                "in",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "22"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "Marissa",
                "0/0/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "There is no number for Marissa.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_objects1": {
        "lines": [
            "car = Car(30)",
            "car.fuel(20)",
            "gallons = car.fuel(60)",
            "print(gallons)",
            "car.drive(10)",
            "print(car.get_fuel())",
            "",
            "another_car = Car(40)",
            "another_car.fuel(10)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createClass",
                "Car"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(tank_size)",
                "1",
                "-1",
                "Car"
            ],
            [
                "createFunction",
                "drive",
                "drive(consumption)",
                "1",
                "-1",
                "Car"
            ],
            [
                "createFunction",
                "get_fuel",
                "get_fuel()",
                "1",
                "-1",
                "Car"
            ],
            [
                "createFunction",
                "fuel",
                "fuel(gallons)",
                "1",
                "-1",
                "Car"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "Car"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "30",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "car"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "car",
                "0"
            ],
            [
                "addFunction",
                "fuel",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "20",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "car",
                "0"
            ],
            [
                "addFunction",
                "fuel",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "60",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "gallons"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "gallons",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "car",
                "0"
            ],
            [
                "addFunction",
                "drive",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "car",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_fuel",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createInstance",
                "Car"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "40",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "another_car"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "another_car",
                "0"
            ],
            [
                "addFunction",
                "fuel",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_objects2": {
        "lines": [
            "class Car:",
            "  def __init__(self, tank_size):",
            "    self.tank_size = tank_size",
            "    self.gas = 0",
            "",
            "  def fuel(self, gallons):",
            "    added = min(gallons, self.tank_size - self.gas)",
            "    self.gas = self.gas + added",
            "    return added",
            "",
            "  def drive(self, consumption):",
            "    if self.gas < consumption:",
            "      return False",
            "    self.gas = self.gas - consumption",
            "    return True",
            "",
            "  def get_fuel(self):",
            "    return self.gas",
            "",
            "  def has_more_fuel(self, another):",
            "    return self.gas > another.gas",
            "",
            "car = Car(30)",
            "gallons = car.fuel(60)",
            "print(gallons)",
            "car.drive(10)",
            "print(car.get_fuel())",
            "",
            "another_car = Car(30)",
            "print(car.has_more_fuel(another_car))"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 280,
            "width": 1000
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Car"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(tank_size)",
                "1",
                "@l1",
                "Car"
            ],
            [
                "createFunction",
                "fuel",
                "fuel(gallons)",
                "1",
                "@l2",
                "Car"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "drive",
                "drive(consumption)",
                "1",
                "@l3",
                "Car"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createFunction",
                "get_fuel",
                "get_fuel()",
                "1",
                "@l7",
                "Car"
            ],
            [
                "createFunction",
                "has_more_gas",
                "has_more_gas(another)",
                "1",
                "@l8",
                "Car"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "createFunction",
                "min",
                "min(first, second)",
                "2",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "tank_size"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "tank_size"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "tank_size",
                "0"
            ],
            [
                "assignField",
                "tank_size",
                "@self"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "gas",
                "@self"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "gallons"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "gallons"
                ]
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "min",
                "0",
                "2"
            ],
            [
                "addValueFromVariable",
                "gallons",
                "0/0/0"
            ],
            [
                "addValueFromField",
                "tank_size",
                "@self",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "added"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "added",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "gas",
                "@self"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "added",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "11"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "consumption"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "consumption"
                ]
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "consumption",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "consumption",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "gas",
                "@self"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine_",
                "17"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine_",
                "20"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValueFromField",
                "gas",
                "@self",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromField",
                "gas",
                "@another",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "Car"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "30",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "car"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValueFromVariable",
                "car",
                "0"
            ],
            [
                "addFunction",
                "fuel",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "60",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "gallons"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "gallons",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "addValueFromVariable",
                "car",
                "0"
            ],
            [
                "addFunction",
                "drive",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "27"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "car",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_fuel",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "29"
            ],
            [
                "createInstance",
                "Car"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "30",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "another_car"
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "car",
                "0/0/0"
            ],
            [
                "addFunction",
                "has_more_gas",
                "0/0/1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "another_car",
                "0/0/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_objects3": {
        "lines": [
            "class Account:",
            "  def __init__(self):",
            "    self.balance = 0",
            "",
            "  def deposit(self, sum):",
            "    self.balance += sum",
            "",
            "  def withdraw(self, sum):",
            "    self.balance -= sum",
            "",
            "  def get_balance(self):",
            "    return self.balance",
            "",
            "",
            "",
            "",
            "def main():",
            "",
            "  accounts = {}",
            "  accounts[259] = Account()",
            "  accounts[632] = Account()",
            "",
            "  accounts[259].deposit(500)",
            "  accounts[632].deposit(800)",
            "  account[259].withdraw(25)",
            "",
            "  print(accounts[259].get_balance())",
            "  print(accounts[632].get_balance())",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 370,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Account"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                "1",
                "@l1",
                "Account"
            ],
            [
                "createFunction",
                "deposit",
                "deposit(self, sum)",
                "1",
                "@l2",
                "Account"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "withdraw",
                "withdraw(self, sum)",
                "1",
                "@l3",
                "Account"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "get_balance",
                "get_balance(self)",
                "1",
                "@l4",
                "Account"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l5"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "setLine",
                "31"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l999"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "balance",
                "@self"
            ],
            [
                "addValueFromVariable",
                "self"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "5"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "sum"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "sum"
                ]
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromField",
                "balance",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "balance",
                "@self"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "sum"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "sum"
                ]
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromField",
                "balance",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "balance",
                "@self"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine_",
                "11"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromField",
                "balance",
                "@self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine_",
                "17"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "accounts"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "259",
                "0/1/0",
                "int"
            ],
            [
                "createInstance",
                "Account"
            ],
            [
                "addReference",
                "-1",
                "0/2/0"
            ],
            [
                "addFunction",
                "__init__",
                "0/2/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/2/0"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "632",
                "0/1/0",
                "int"
            ],
            [
                "createInstance",
                "Account"
            ],
            [
                "addReference",
                "-1",
                "0/2/0"
            ],
            [
                "addFunction",
                "__init__",
                "0/2/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/2/0"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "259",
                "0/1/0",
                "int"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "addFunction",
                "deposit",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "500",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "632",
                "0/1/0",
                "int"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "addFunction",
                "deposit",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "800",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "259",
                "0/1/0",
                "int"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "addFunction",
                "withdraw",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "25",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "27"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "259",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_balance",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "28"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "accounts",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "632",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_balance",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l999"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_greet": {
        "lines": [
            "name = input(\"What is your name?\\n\")",
            "print(\"Hello,\", name)",
            "print(\"Nice to meet you!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "name"
            ],
            [
                "addFunction",
                "input",
                "0",
                "1"
            ],
            [
                "addValue",
                "What is your name?",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "name"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Hello,",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "name",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Nice to meet you!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_input1": {
        "lines": [
            "first = int(input(\"Give an integer:\\n\"))",
            "second = int(input(\"Give another integer:\\n\"))",
            "print(\"Sum is:\", first + second)",
            "print(\"Product is:\", first * second)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "first"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give an integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createVariable",
                "second"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give another integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "second"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Sum is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "first",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "second",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Product is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "first",
                "0/1/0"
            ],
            [
                "addOperator",
                "*",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "second",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_input2": {
        "lines": [
            "radius = float(input(\"Give the radius:\\n\"))",
            "area = 3.14 * radius * radius",
            "print(\"Area of the circle is:\", area)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "float",
                "float(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "radius"
            ],
            [
                "addFunction",
                "float",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give the radius:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "radius"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createVariable",
                "area"
            ],
            [
                "addValue",
                "3.14",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "radius",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "radius",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "area"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Area of the circle is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "area",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_format1": {
        "lines": [
            "first = 4",
            "second = 5",
            "print(\"The values are {:d} and {:d}\".format(first, second))"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "format",
                "format(params)",
                "-1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "first"
            ],
            [
                "addValue",
                "4",
                "0",
                "int"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createVariable",
                "second"
            ],
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "assign",
                "second"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "The values are {:d} and {:d}",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "format",
                "0/0/1",
                "2",
                "?"
            ],
            [
                "addValueFromVariable",
                "first",
                "0/0/0/1/0"
            ],
            [
                "addValueFromVariable",
                "second",
                "0/0/0/2/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_format2": {
        "lines": [
            "pi = 3.141592653589793238",
            "print(\"Pi is ca. {:.3f}\".format(pi))"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "format",
                "format(params)",
                "1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "pi"
            ],
            [
                "addValue",
                "3.141592653589793238",
                "0",
                "float"
            ],
            [
                "assign",
                "pi"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Pi is ca. {:.3f}",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "format",
                "0/0/1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "pi",
                "0/0/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_format3": {
        "lines": [
            "value1 = 24.5",
            "value2 = 35.5",
            "value3=value1+value2",
            "print(f\"The sum of {first} and {second} is {value3}\")"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "format",
                "fstring(params)",
                "-1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "value1"
            ],
            [
                "addValue",
                "24.5",
                "0",
                "float"
            ],
            [
                "assign",
                "value1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createVariable",
                "value2"
            ],
            [
                "addValue",
                "35.5",
                "0",
                "float"
            ],
            [
                "assign",
                "value2"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "value1",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "value2",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "value3"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "The sum of {value1} and {value2} is {value3}",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "format",
                "0/0/1",
                "3",
                "?"
            ],
            [
                "addValueFromVariable",
                "value1",
                "0/0/0/1/0"
            ],
            [
                "addValueFromVariable",
                "value2",
                "0/0/0/2/0"
            ],
            [
                "addValueFromVariable",
                "value3",
                "0/0/0/3/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_format4": {
        "lines": [
            "pi = 3.141592653589793238",
            "print(f\"Pi is {pi:.3f}\")"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "format",
                "fstring(params)",
                "1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "pi"
            ],
            [
                "addValue",
                "3.141592653589793238",
                "0",
                "float"
            ],
            [
                "assign",
                "pi"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Pi is ca. {pi:.3f}",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "format",
                "0/0/1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "pi",
                "0/0/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_returnvalue": {
        "lines": [
            "def convert_to_euros(dollars):",
            "  ratio = 0.8669",
            "  return dollars * ratio",
            "",
            "amount = float(input(\"Give the sum in dollars:\\n\"))",
            "euros = convert_to_euros(amount)",
            "print(\"It is {:.2f} euros.\".format(euros))"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 260,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "convert_to_euros",
                "convert_to_euros(dollars)",
                "1",
                "@l1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createFunction",
                "float",
                "float(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "format",
                "format(params)",
                "1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "dollars"
                ]
            ],
            [
                "assignParameters",
                [
                    "dollars"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createVariable",
                "ratio"
            ],
            [
                "addValue",
                "0.8669",
                "0",
                "float"
            ],
            [
                "assign",
                "ratio"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "dollars",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "ratio",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "float",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give the sum in dollars:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "amount"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "convert_to_euros",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "euros"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It is {:.2f} euros.",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "format",
                "0/0/1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "euros",
                "0/0/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_vals_refs1": {
        "lines": [
            "def change(number):",
            "  number = 9",
            "  print(\"Number is now:\", number)",
            "",
            "",
            "def main():",
            "  number = 5",
            "  change(number)",
            "  print(\"In main, number is now:\", number)",
            "  print(\"It did not change!\")",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 385,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "change",
                "change(number)",
                "1",
                "@l1"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "number"
                ]
            ],
            [
                "assignParameters",
                [
                    "number"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "9",
                "0",
                "int"
            ],
            [
                "assign",
                "number"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Number is now:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "assign",
                "number"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "change",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "number",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "In main, number is now:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "number",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It did not change!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_vals_refs2": {
        "lines": [
            "def change(numbers):",
            "  numbers[0] = 5",
            "  print(numbers)",
            "",
            "",
            "def main():",
            "  numbers = [2, 8, 14]",
            "  change(numbers)",
            "  print(numbers)",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 50,
            "stackHeight": 385,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "change",
                "change(numbers)",
                "1",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "numbers"
                ]
            ],
            [
                "assignParameters",
                [
                    "numbers"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "3"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "8",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "14",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "numbers"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "change",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_vals_refs3": {
        "lines": [
            "def main():",
            "  numbers = [1, 7, 18]",
            "  original = numbers",
            "  numbers[2] = 11",
            "  print(original)",
            "  print(numbers)",
            "  print(\"They both changed!\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 50,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "3"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "18",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "numbers"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0"
            ],
            [
                "assign",
                "original"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "11",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "original",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numbers",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "They both changed!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_intro": {
        "lines": [
            "dollars = 200 + 250",
            "euros = dollars * 1.122"
        ],
        "description": "<div style=\"font-family: sans-serif;\"><p>This animated example is an intro for this kind of animations. In this first animation, we will see how basic arithmetic operations work and how variables are used to store data.</p></div>",
        "explanations": {
            "line1": "We will add two values and assign the result to variable dollars. Variables are shown as green boxes in these animations.",
            "line2": "We will now use the previous result in this line and assign the result to another variable."
        },
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 0,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "200",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "250",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "dollars"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "dollars",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "1.122",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "euros"
            ]
        ]
    },
    "ae_python_assignment": {
        "description": "<div style=\"font-family: sans-serif;\"> <p>In this example, we will see how an assignment statement works. First, the right-hand side is evaluated and after that the value is assigned to the specified variable. If there is already a value, it will be replaced. Can you figure out what will be the final value in the variable before you start?</p></div>",
        "explanations": {
            "line2": "In this line, we will assign a new value to the same variable. The new value depends on the original value. After the assignment, the old value will be replaced with the new value.",
            "line4": "We can use the same variable multiple times. Only after the right-hand side is evaluated, the original value of the variable will be replaced with the new value."
        },
        "lines": [
            "my_var = 3",
            "my_var = my_var + 1",
            "my_var = 1 + my_var",
            "my_var = my_var + my_var"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "my_var"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "my_var",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "my_var"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_var",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "my_var"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "my_var",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_var",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "my_var"
            ]
        ]
    },
    "ae_python_input": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example, we will use two important built-in functions. The function input is used to read data from the user and print is used to print out the given values.</p></div>",
        "lines": [
            "name = input(\"What is your name?\")",
            "print(\"What a lovely name\", name)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "input",
                "0",
                "1"
            ],
            [
                "addValue",
                "What is your name?",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "name"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "What a lovely name",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "name",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_float": {
        "description": "<div style=\"font-family: sans-serif;\"><p>This example shows how a type conversion works. Input returns the user's answer always as a string. Before we can use the given value for any calculations we must convert the string into a number. Here we use the built-in function float to convert the string into a decimal number.</p></div>",
        "lines": [
            "celsius = input(\"Give temperature in Celsius:\")",
            "fahrenheit = 1.8 * float(celsius) + 32",
            "print(fahrenheit)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "float",
                "float(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "input",
                "0",
                "1"
            ],
            [
                "addValue",
                "Give temperature in Celsius:",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "celsius"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "1.8",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addFunction",
                "float",
                "2",
                "1"
            ],
            [
                "addValueFromVariable",
                "celsius",
                "2/0/0"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "32",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "fahrenheit"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "fahrenheit",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_if": {
        "description": "<div style=\"font-family: sans-serif;\"><p>This example shows how Boolean values <code>True</code> and <code>False</code> can be used together with the <code>if</code> statement. Based on the Boolean value, the <code>if</code> statement selects the next line to be executed. You can start this example over and try with another value.</div>",
        "lines": [
            "line = input(\"Give a number:\")",
            "value = float(line)",
            "if value > 5000:",
            "    print(\"Quite a big number!\")",
            "else:",
            "    print(\"It was not that big...\")",
            "print(\"It's over now!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "float",
                "float(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "input",
                "0",
                "1"
            ],
            [
                "addValue",
                "Give a number:",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "float",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "line",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "5000",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "jumpTrue",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Quite a big number!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "jumpFalse",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It was not that big...",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "It's over now!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_while": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this animated example, we will see how the <code>while</code> loop works. The code lines inside the loop will be executed as long as the condition is true. The condition will be checked at the beginning of the each iteration. After you are ready with example, give zero and the program will end.</p></div>",
        "lines": [
            "positive = 0",
            "value = int(input(\"Give an integer:\"))",
            "while value != 0:",
            "  if value > 0:",
            "    positive = positive + 1",
            "  value = int(input(\"Give an integer:\"))",
            "print(\"Positive numbers:\", positive)"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "positive"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give an integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                "!=",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "jumpTrue",
                "4"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "jumpTrue",
                "5"
            ],
            [
                "addValueFromVariable",
                "positive",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "positive"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                "1"
            ],
            [
                "addValue",
                "Give an integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "jumpFalse",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Positive numbers:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "positive",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_for": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this animated example, we will see how the <code>for</code> loop works. Instead of having a condition how long the iteration continues, with for loop there must always be a certain number of iterations that is specified when the loop starts. In this example we will just use the loop to iterate a number sequence but there will be more use cases as we will later see.</p></div>",
        "lines": [
            "print(\"The two times table starts with:\")",
            "for i in range(3):",
            "  print(i, \"* 2 =\", i * 2)",
            "print(\"That's it!\")"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "The two times table starts with:",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "_createIterator",
                "i1",
                "",
                "0",
                "2",
                "Int"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "print",
                "0",
                "3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/0"
            ],
            [
                "addValue",
                "* 2 =",
                "0/1/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/0"
            ],
            [
                "addOperator",
                "*",
                "0/2/1"
            ],
            [
                "addValue",
                "2",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "jumpIterationReady",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "That's it!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_function": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example, we will see how functions work. In this case we will see how the parameter passing and the return value work. Please pay attention because functions are very important but sometimes hard to understand. Can you understand the difference between printing and returning a value after this example?</p></div>",
        "lines": [
            "def calculate_area(width, height):",
            "  print(\"Dimensions are:\", width, height)",
            "  result = width * height",
            "  return height",
            "",
            "def main():",
            "  side1 = 12",
            "  side2 = 10",
            "  area = calculate_area(side1, side2)",
            "  print(\"Area is:\", area)",
            "  print(\"Area is:\", calculate_area(2+3, 7+2))",
            "",
            "main()"
        ],
        "settings": {
            "code": "aboveHeapAndPanels",
            "rightPanelsWidth": 280,
            "codeWidth": 320,
            "heapHeight": 0,
            "stackHeight": 380,
            "width": 800,
            "literalsLeft": true
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "calculate_area",
                "calculate_area(width, height)",
                "2",
                "@l1"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "width",
                    "height"
                ]
            ],
            [
                "assignParameters",
                [
                    "width",
                    "height"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "print",
                "0",
                "3"
            ],
            [
                "addValue",
                "Dimensions are:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "height",
                "0/2/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "width",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "height",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValue",
                "12",
                "0",
                "int"
            ],
            [
                "assign",
                "side1"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValue",
                "10",
                "0",
                "int"
            ],
            [
                "assign",
                "side2"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "calculate_area",
                "0",
                "2"
            ],
            [
                "addValueFromVariable",
                "side1",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "side2",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "area"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Area is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "area",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Area is:",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "calculate_area",
                "0/1/0",
                "2"
            ],
            [
                "addValue",
                "2",
                "0/1/0/0/0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "0/1/0/0/1"
            ],
            [
                "addValue",
                "3",
                "0/1/0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/0/0/1"
            ],
            [
                "addValue",
                "7",
                "0/1/0/1/0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "0/1/0/1/1"
            ],
            [
                "addValue",
                "2",
                "0/1/0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/0/1/1"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_list": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example, we will continue using functions. The new concept in this animation is a list. We can use lists to create a collection with multiple items. In this example, we have a function that finds those values in the list that are bigger than the given limit. The functions shows another very useful use case with <code>for</code> loops to iterate a list.</p></div>",
        "lines": [
            "def find(values, limit):",
            "  bigger = []",
            "  for value in values:",
            "    if value > limit:",
            "      bigger.append(value)",
            "  return bigger",
            "",
            "def main():",
            "  my_list = [2, 5, 4, 9]",
            "  my_list.append(16)",
            "  my_list[1] = 6",
            "  first = my_list[0]",
            "",
            "  found = find(my_list, 8)",
            "",
            "  if len(found) > 0:",
            "    print(found)",
            "  else:",
            "    print(\"No values.\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 380,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "find",
                "find(values, limit)",
                "2",
                "@l1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l9"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "append",
                "append(element)",
                "1",
                "-1",
                "list"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "len",
                "len(collection)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "values",
                    "limit"
                ]
            ],
            [
                "assignParameters",
                [
                    "values",
                    "limit"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "bigger"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "_createIterator",
                "i1",
                "@values"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "limit",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "bigger",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "value",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "bigger",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                "4"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/4/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "16",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "first"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "find",
                "0",
                "2"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "addValue",
                "8",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "found"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "found",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "found",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "No values.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_split": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example we will continue working with lists. We will see that strings can converted into a list by using the <code>split</code> method that splits a string with the given separator and returns a corresponding list. Please note that the values in the returned list are always strings.</p></div>",
        "lines": [
            "def main():",
            "  values = \"45,23,67\"",
            "  my_list = values.split(\",\")",
            "  if len(my_list) > 0:",
            "    biggest = int(my_list[0])",
            "    sum = 0",
            "    for value in my_list:",
            "      value = int(value)",
            "      sum = sum + value",
            "      if value > biggest:",
            "        biggest = value",
            "      print(\"Sum is:\", sum)",
            "    print(\"The biggest is:\", biggest)",
            "  else:",
            "    print(\"You did not give any numbers.\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(collection)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(prompt)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "split",
                "split(separator)",
                "1",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValue",
                "45,23,67",
                "0",
                "str"
            ],
            [
                "assign",
                "values"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addFunction",
                "split",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                ",",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "biggest"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "_createIterator",
                "i1",
                "@my_list"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_iterate",
                "i1",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "value",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "value",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "biggest",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "assign",
                "biggest"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Sum is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The biggest is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "biggest",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "You did not give any numbers.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_dict": {
        "description": "<div style=\"font-family: sans-serif;\"><p>This animated example shows how dictionaries work. In a dictionary, there are pairs called key and value. With each key, there is always a value attached to it. By using the key, we can easily get the value. In addition to that getting the value is easy, it is also very fast and efficient because of the internal data structure that dictionaries use.</div>",
        "lines": [
            "def add_numbers(phonebook):",
            "  phonebook[\"John\"] = \"555-1234\"",
            "  phonebook[\"Matt\"] = \"555-1478\"",
            "  phonebook[\"Lisa\"] = \"555-9632\"",
            "",
            "def main():",
            "  phonebook = {}",
            "  add_numbers(phonebook)",
            "",
            "  count = len(phonebook)",
            "  print(\"Count:\", phonebook)",
            "",
            "  if \"Matt\" in phonebook:",
            "    print(phonebook[\"Matt\"])",
            "  else:",
            "    print(\"His number is not available.\")",
            "",
            "  phonebook[\"Matt\"] = \"555-2580\"",
            "  matt = phonebook[\"matt\"]",
            "",
            "  if \"Susan\" in phonebook:",
            "    print(phonebook[\"Susan\"])",
            "  else:",
            "    print(\"Her number is not available.\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 380,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "add_numbers",
                "add_numbers(phonebook)",
                "1",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "createOperator",
                "in",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(collection)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "phonebook"
                ]
            ],
            [
                "assignParameters",
                [
                    "phonebook"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "John",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-1234",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Matt",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-1748",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Lisa",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-9632",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "phonebook"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "add_numbers",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "len",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Count:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValue",
                "Matt",
                "0",
                "str"
            ],
            [
                "addOperator",
                "in",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "Matt",
                "0/0/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "His number is not available.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Matt",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "555-2580",
                "0/2/0",
                "str"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "Matt",
                "0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "assign",
                "mat"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValue",
                "Susan",
                "0",
                "str"
            ],
            [
                "addOperator",
                "in",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "22"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "phonebook",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "Susan",
                "0/0/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Her number is not available.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_file": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example, we will see how we can read the contents of a file. It is quite similar to iterating a list, the file just needs to be opened and after reading closed. Please note that the lines of a file will always be returned as strings that end with a newline character.</p></div>",
        "lines": [
            "def main():",
            "",
            "  my_file = open(\"items.txt\", \"r\")",
            "",
            "  for line in my_file:",
            "    line = line.rstrip()",
            "    parts = line.split(\";\")",
            "    count = int(parts[0])",
            "    if count < 10:",
            "       print(parts[1])",
            "",
            "  my_file.close()",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 40,
            "stackHeight": 280,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "createClass",
                "file"
            ],
            [
                "createFunction",
                "close",
                "close()",
                "1",
                "-1",
                "file"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "split",
                "split(separator)",
                "1",
                "-1",
                "str"
            ],
            [
                "createFunction",
                "rstrip",
                "rstrip()",
                "1",
                "-1",
                "str"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "open",
                "open(file, mode)",
                "2",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "open",
                "0",
                "2"
            ],
            [
                "addValue",
                "items.txt",
                "0/0/0",
                "str"
            ],
            [
                "addValue",
                "r",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "my_file"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "_createIterator",
                "i1",
                "@my_file"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "line",
                "0"
            ],
            [
                "addFunction",
                "rstrip",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "line",
                "0"
            ],
            [
                "addFunction",
                "split",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                ";",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "parts"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "6",
                "Converting the string into a number"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "parts",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "count",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "10",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "parts",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromVariable",
                "my_file",
                "0"
            ],
            [
                "addFunction",
                "close",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "None"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_class1": {
        "description": "<div style=\"font-family: sans-serif;\"><p>In this example, we will create two Bus instances and call methods to change and query the state of the object. The internal parts of the <code>Bus</code> class is not shown yet.</p></div>",
        "lines": [
            "bus1 = Bus(50)",
            "bus1.take_passengers(40)",
            "taken = bus1.take_passengers(60)",
            "print(taken)",
            "bus1.leave_passengers(10)",
            "print(bus1.get_passenger_count())",
            "",
            "bus2 = Bus(60)",
            "bus2.take_passengers(10)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "1"
            ],
            [
                "createClass",
                "Bus"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(capacity)",
                "1",
                "-1",
                "Bus"
            ],
            [
                "createFunction",
                "leave_passengers",
                "leave_passengers(count)",
                "1",
                "-1",
                "Bus"
            ],
            [
                "createFunction",
                "get_passenger_count",
                "get_passenger_count()",
                "1",
                "-1",
                "Bus"
            ],
            [
                "createFunction",
                "take_passengers",
                "take_passengers(count)",
                "1",
                "-1",
                "Bus"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "Bus"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "50",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "bus1"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0"
            ],
            [
                "addFunction",
                "take_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "40",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0"
            ],
            [
                "addFunction",
                "take_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "60",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "taken"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "taken",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0"
            ],
            [
                "addFunction",
                "leave_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_passenger_count",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createInstance",
                "Bus"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "60",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "bus2"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "bus2",
                "0"
            ],
            [
                "addFunction",
                "take_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_python_class2": {
        "description": "<div style=\"font-family: sans-serif;\"><p>This example continues with the <code>Bus</code> class. Now we will see how the class is implemented and how the methods work.</p></div>",
        "lines": [
            "class Bus:",
            "  def __init__(self, capacity):",
            "    self.capacity = capacity",
            "    self.passengers = 0",
            "",
            "  def take_passengers(self, count):",
            "    added = min(count, self.capacity - self.passengers)",
            "    self.passengers = self.passengers + added",
            "    return added",
            "",
            "  def leave_passengers(self, count):",
            "    if self.passengers < count:",
            "      return False",
            "    self.passengers = self.passengers - count",
            "    return True",
            "",
            "  def get_passenger_count(self):",
            "    return self.passengers",
            "",
            "  def is_bigger_than(self, other):",
            "    return self.capacity > other.capacity",
            "",
            "bus1 = Bus(50)",
            "count = bus.take_passengers(60)",
            "print(count)",
            "bus1.leave_passengers(10)",
            "print(bus1.get_passenger_count())",
            "",
            "bus2 = Bus(30)",
            "print(bus1.has_more_passengers(bus2))"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 280,
            "width": 1000
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Bus"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(capacity)",
                "1",
                "@l1",
                "Bus"
            ],
            [
                "createFunction",
                "take_passengers",
                "take_passengers(count)",
                "1",
                "@l2",
                "Bus"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "leave_passengers",
                "leave_passengers(count)",
                "1",
                "@l3",
                "Bus"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createFunction",
                "get_passenger_count",
                "get_passenger_count()",
                "1",
                "@l7",
                "Bus"
            ],
            [
                "createFunction",
                "has_more_passengers",
                "has_more_passengers(other)",
                "1",
                "@l8",
                "Bus"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "createFunction",
                "min",
                "min(first, second)",
                "2",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "capacity"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "capacity"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValueFromVariable",
                "capacity",
                "0"
            ],
            [
                "assignField",
                "capacity",
                "@self"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "passengers",
                "@self"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "count"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "count"
                ]
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "min",
                "0",
                "2"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/0/0"
            ],
            [
                "addValueFromField",
                "capacity",
                "@self",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromField",
                "passengers",
                "@self",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "added"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromField",
                "passengers",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "added",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "passengers",
                "@self"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "added",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "11"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "count"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "count"
                ]
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromField",
                "passengers",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "count",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addValueFromField",
                "passengers",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "count",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "passengers",
                "@self"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine_",
                "17"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addValueFromField",
                "passengers",
                "@self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine_",
                "20"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "other"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "other"
                ]
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValueFromField",
                "capacity",
                "@self",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromField",
                "capacity",
                "@other",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createInstance",
                "Bus"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "50",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "bus1"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0"
            ],
            [
                "addFunction",
                "take_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "60",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0"
            ],
            [
                "addFunction",
                "leave_passengers",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "27"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0/0/0"
            ],
            [
                "addFunction",
                "get_passenger_count",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "29"
            ],
            [
                "createInstance",
                "Bus"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "30",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "bus2"
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "bus1",
                "0/0/0"
            ],
            [
                "addFunction",
                "is_bigger_than",
                "0/0/1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "bus2",
                "0/0/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_adl_dict2": {
        "lines": [
            "def main():",
            "",
            "  points = {}",
            "",
            "  points[\"Mary\"] = 5",
            "  points[\"John\"] = 10",
            "",
            "  points[\"Mary\"] = points[\"Mary\"] + 15",
            "",
            "  print(\"Mary's points:\", points[\"Mary\"])",
            "  print(\"John's points:\", points[\"John\"])",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-11",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "points"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Mary",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "5",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "John",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "10",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "points",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Mary",
                "0/1/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "points",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValue",
                "Mary",
                "0/2/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/2/0"
            ],
            [
                "addOperator",
                "+",
                "0/2/1"
            ],
            [
                "addValue",
                "15",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Mary's points:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "points",
                "0/1/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/1/1"
            ],
            [
                "addValue",
                "Mary",
                "0/1/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "John's points:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "points",
                "0/1/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/1/1"
            ],
            [
                "addValue",
                "John",
                "0/1/0/1/0",
                "str"
            ],
            [
                "getValueByKey",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_dict3": {
        "lines": [
            "def main():",
            "",
            "  ages = {}",
            "  ages[\"Mark\"] = 7",
            "  ages[\"Susan\"] = 16",
            "  ages[\"Bill\"] = 36",
            "  ages[\"Lisa\"] = 22",
            "",
            "  oldest = None",
            "  max_age = None",
            "",
            "  for person in ages:",
            "    if oldest == None or ages[person] > max_age:",
            "      oldest = person",
            "      max_age = ages[person]",
            "",
            "",
            "",
            "  print(\"The oldest is:\", oldest)",
            "  print(\"Years:\", max_age)",
            "",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "-1",
                "@l1"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "or",
                "n"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "ages"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Mark",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "7",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Susan",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "16",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Bill",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "36",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "Lisa",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "22",
                "0/2/0",
                "int"
            ],
            [
                "setValueByKey",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assign",
                "oldest"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assign",
                "max_age"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "_createIterator",
                "i1",
                "@ages"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "person"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromVariable",
                "oldest",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "None",
                "2",
                "NoneType"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "or",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l10",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "person",
                "0/1/0"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "max_age",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addValueFromVariable",
                "person",
                "0"
            ],
            [
                "assign",
                "oldest"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValueFromVariable",
                "ages",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "person",
                "0/1/0"
            ],
            [
                "getValueByKey",
                "0"
            ],
            [
                "assign",
                "max_age"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "The oldest is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "oldest",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addFunction",
                "print",
                "0",
                "2"
            ],
            [
                "addValue",
                "Years:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "max_age",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_tryexcept1": {
        "lines": [
            "try:",
            "  a = \"1\"",
            "  b = \"two\"",
            "  c = int(a) + int(b)",
            "  print(\"Sum is:\", c)",
            "except ValueError:",
            "  print(\"Conversion failed!\")",
            "",
            "print(\"All done!\")"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "setLine",
                "2"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addValue",
                "1",
                "0",
                "str"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addValue",
                "two",
                "0",
                "str"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addFunction",
                "int",
                "2",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "2/0/0"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Conversion failed!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "All done!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_tryexcept2": {
        "lines": [
            "def average(a, b):",
            "  sum = int(a) + int(b)",
            "  return sum / 2",
            "",
            "",
            "def main():",
            "  try:",
            "    avg = average(\"1\", \"two\")",
            "    print(\"Avg is:\", avg)",
            "  except ValueError:",
            "    print(\"Error occurred!\")",
            "",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 380,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "average",
                "average(a, b)",
                "2",
                "@l1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l2"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "-1",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "createParameterVariables",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "assignParameters",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "setLine",
                "2"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addFunction",
                "int",
                "2",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "2/0/0"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "6"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "average",
                "0",
                "2"
            ],
            [
                "addValue",
                "1",
                "0/0/0",
                "str"
            ],
            [
                "addValue",
                "two",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Error occurred!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_file1": {
        "lines": [
            "def main():",
            "",
            "  my_file = open(\"visitors.txt\", \"r\")",
            "",
            "  sum = 0",
            "  count = 0",
            "",
            "  for line in my_file:",
            "    visitors = int(line)",
            "    sum = sum + visitors",
            "    count = count + 1",
            "",
            "  my_file.close()",
            "",
            "  print(\"On average\", sum / count, \"visitors.\")",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "createFunction",
                "open",
                "open(file, mode)",
                "2",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createClass",
                "file"
            ],
            [
                "createFunction",
                "close",
                "close()",
                "1",
                "-1",
                "file"
            ],
            [
                "createFunction",
                "int",
                "int(value)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "open",
                "0",
                "2"
            ],
            [
                "addValue",
                "visitors.txt",
                "0/0/0",
                "str"
            ],
            [
                "addValue",
                "r",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "my_file"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "count"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "_createIterator",
                "i1",
                "@my_file"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "int",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "line",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "visitors"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "visitors",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "count",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromVariable",
                "my_file",
                "0"
            ],
            [
                "addFunction",
                "close",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "print",
                "0",
                "3"
            ],
            [
                "addValue",
                "On average",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/1/0"
            ],
            [
                "addOperator",
                "/",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "addValue",
                "visitors.",
                "0/2/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_adl_file2": {
        "lines": [
            "def main():",
            "",
            "  my_file = open(\"courses.txt\", \"r\")",
            "  category = \"math\"",
            "  print(\"Courses in this category:\")",
            "",
            "  for line in my_file:",
            "    line = line.rstrip()",
            "    parts = line.split(\";\")",
            "    if parts[0] == category:",
            "      print(parts[1])",
            "",
            "  my_file.close()",
            "",
            "main()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 100,
            "stackHeight": 250,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "main",
                "main()",
                "0",
                "@l1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "createFunction",
                "open",
                "open(file, mode)",
                "2",
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(value)",
                "-1",
                "-1"
            ],
            [
                "createClass",
                "file"
            ],
            [
                "createFunction",
                "close",
                "close()",
                "1",
                "-1",
                "file"
            ],
            [
                "createClass",
                "str"
            ],
            [
                "createFunction",
                "split",
                "split(separator)",
                "1",
                "-1",
                "str"
            ],
            [
                "createFunction",
                "rstrip",
                "rstrip()",
                "0",
                "-1",
                "str"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "1"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "open",
                "0",
                "2"
            ],
            [
                "addValue",
                "courses.txt",
                "0/0/0",
                "str"
            ],
            [
                "addValue",
                "r",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "my_file"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addValue",
                "math",
                "0",
                "str"
            ],
            [
                "assign",
                "category"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValue",
                "Courses in this category:",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "_createIterator",
                "i1",
                "@my_file"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "line",
                "0"
            ],
            [
                "addFunction",
                "rstrip",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "line"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "line",
                "0"
            ],
            [
                "addFunction",
                "split",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                ";",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "parts"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "parts",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValueFromVariable",
                "category",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "print",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "parts",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromVariable",
                "my_file",
                "0"
            ],
            [
                "addFunction",
                "close",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "main",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "age_checking": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1200"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "append",
                "append(item)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                4
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0/1/0",
                2
            ],
            [
                "addValue",
                "Anna",
                "0/1/0/1/0",
                "str"
            ],
            [
                "addValue",
                "23",
                "0/1/0/2/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/1/0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0/2/0",
                2
            ],
            [
                "addValue",
                "Jasmin",
                "0/2/0/1/0",
                "str"
            ],
            [
                "addValue",
                "30",
                "0/2/0/2/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/2/0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0/3/0",
                2
            ],
            [
                "addValue",
                "Tommi",
                "0/3/0/1/0",
                "str"
            ],
            [
                "addValue",
                "43",
                "0/3/0/2/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/3/0"
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0/4/0",
                2
            ],
            [
                "addValue",
                "Wes",
                "0/4/0/1/0",
                "str"
            ],
            [
                "addValue",
                "17",
                "0/4/0/2/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/4/0"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "lst"
            ],
            [
                "setLine",
                4
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "young_people"
            ],
            [
                "setLine",
                6
            ],
            [
                "_createIterator",
                "i1",
                "@lst"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "person"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "person",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "30",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "young_people",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "person",
                "0/1/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/1/1"
            ],
            [
                "addValue",
                "0",
                "0/1/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "Sorry ",
                "0/0/0",
                "str"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "person",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "0",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                " you are too old!",
                "0/0/2",
                "str"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                6
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                3
            ],
            [
                "addValue",
                "There are",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "young_people",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "addValue",
                "young people on the list",
                "0/2/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def main():",
            "    lst = [[\"Anna\", 23], [\"Jasmin\", 30], [\"Tommi\", 43], [\"Wes\", 17]]",
            "",
            "    young_people = []",
            "",
            "    for person in lst:",
            "        if person[1] < 30:",
            "            young_people.append(person[0])",
            "        else:",
            "            print(\"Sorry \" + person[0] + \" you are too old!\")",
            "",
            "    print(\"There are\", len(young_people), \"young people on the list\")",
            "",
            "main()",
            ""
        ]
    },
    "age_checking2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "300",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "2021",
                "0",
                "int"
            ],
            [
                "assign",
                "CURRENT_YEAR"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the year you were born:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "year"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "CURRENT_YEAR",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the year you were born:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "year"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "CURRENT_YEAR",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "year",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "age"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "age",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "30",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "age",
                "0/0/0"
            ],
            [
                "addValue",
                "You are still young",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "age",
                "0/0/0"
            ],
            [
                "addValue",
                "You are too old!",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    CURRENT_YEAR = 2021",
            "    year = int(input(\"Enter the year you were born:\"))",
            "    while year > CURRENT_YEAR:",
            "        year = int(input(\"Enter the year you were born:\"))",
            "",
            "    age = CURRENT_YEAR - year",
            "    if age < 30:",
            "       print(age, \"You are still young\")",
            "    else:",
            "        print(age, \"You are too old!\")",
            "",
            "main()",
            ""
        ]
    },
    "circle_class": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "300",
            "width": "1000"
        },
        "init": [
            [
                "createClass",
                "Circle"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, r)",
                1,
                "@l1",
                "Circle"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "area",
                "area(self)",
                0,
                "@l3",
                "Circle"
            ],
            [
                "createOperator",
                "**",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "perimeter",
                "perimeter(self)",
                0,
                "@l5",
                "Circle"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "r",
                "0"
            ],
            [
                "assignField",
                "__radius",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                2
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "**",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                2
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                14
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "8",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle1"
            ],
            [
                "setLine",
                15
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "3",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle2"
            ],
            [
                "setLine",
                16
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                18
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "class Circle():",
            "",
            "    def __init__(self, r):",
            "        self.__radius = r",
            "",
            "    def area(self):",
            "        return self.__radius ** 2 * 3.14",
            "",
            "    def perimeter(self):",
            "        return 2 * self.__radius * 3.14",
            "",
            "",
            "circle1 = Circle(8)",
            "circle2 = Circle(3)",
            "print(circle1.area())",
            "print(circle2.area())",
            "print(circle1.perimeter())",
            "print(circle2.perimeter())",
            ""
        ]
    },
    "circle_class2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "300",
            "width": "1000"
        },
        "init": [
            [
                "createClass",
                "Circle"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, r)",
                1,
                "@l1",
                "Circle"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "area",
                "area(self)",
                0,
                "@l3",
                "Circle"
            ],
            [
                "createOperator",
                "**",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "perimeter",
                "perimeter(self)",
                0,
                "@l5",
                "Circle"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "r",
                "0"
            ],
            [
                "assignField",
                "__radius",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "**",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                10
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                13
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "8",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle1"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the radius of a new circle:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_radius"
            ],
            [
                "setLine",
                18
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "new_radius",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle2"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                20
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "class Circle():",
            "",
            "    def __init__(self, r):",
            "        self.__radius = r",
            "",
            "    def area(self):",
            "        return self.__radius ** 2 * 3.14",
            "",
            "    def perimeter(self):",
            "        return 2 * self.__radius * 3.14",
            "",
            "",
            "circle1 = Circle(8)",
            "print(circle1.area())",
            "print(circle1.perimeter())",
            "",
            "new_radius = int(input(\"Enter the radius of a new circle:\"))",
            "circle2 = Circle(new_radius)",
            "print(circle2.area())",
            "print(circle2.perimeter())",
            "",
            ""
        ]
    },
    "circle_class3": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "300",
            "width": "1000"
        },
        "init": [
            [
                "createClass",
                "Circle"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, r)",
                1,
                "@l1",
                "Circle"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "area",
                "area(self)",
                0,
                "@l3",
                "Circle"
            ],
            [
                "createOperator",
                "**",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "perimeter",
                "perimeter(self)",
                0,
                "@l5",
                "Circle"
            ],
            [
                "createFunction",
                "is_larger",
                "is_larger(self, another)",
                1,
                "@l7",
                "Circle"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "r"
                ]
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "r",
                "0"
            ],
            [
                "assignField",
                "__radius",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "**",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                10
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "3.14",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromField",
                "__radius",
                "@self",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromField",
                "__radius",
                "@another",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                16
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the radius of a new circle:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_radius"
            ],
            [
                "setLine",
                20
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "new_radius",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle1"
            ],
            [
                "setLine",
                21
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                22
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                24
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the radius of a new circle:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_radius2"
            ],
            [
                "setLine",
                25
            ],
            [
                "createInstance",
                "Circle"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "new_radius2",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "circle2"
            ],
            [
                "setLine",
                26
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "area",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                27
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/0/0"
            ],
            [
                "addFunction",
                "perimeter",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                29
            ],
            [
                "addValueFromVariable",
                "circle1",
                "0"
            ],
            [
                "addFunction",
                "is_larger",
                "1",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "circle2",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_conditionalJump",
                "@l12",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                30
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "The first circle is larger!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                32
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "The second circle is larger!",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l14"
            ]
        ],
        "lines": [
            "class Circle():",
            "",
            "    def __init__(self, r):",
            "        self.__radius = r",
            "",
            "    def area(self):",
            "        return self.__radius ** 2 * 3.14",
            "",
            "    def perimeter(self):",
            "        return 2 * self.__radius * 3.14",
            "",
            "    def is_larger(self, another):",
            "        if self.__radius > another.__radius:",
            "            return True",
            "        else:",
            "            return False",
            "",
            "",
            "new_radius = int(input(\"Enter the radius of a new circle:\"))",
            "circle1 = Circle(new_radius)",
            "print(circle1.area())",
            "print(circle1.perimeter())",
            "",
            "new_radius2 = int(input(\"Enter the radius of a new circle:\"))",
            "circle2 = Circle(new_radius2)",
            "print(circle2.area())",
            "print(circle2.perimeter())",
            "",
            "if circle1.is_larger(circle2):",
            "    print(\"The first circle is larger!\")",
            "else:",
            "    print(\"The second circle is larger!\")",
            "",
            "",
            ""
        ]
    },
    "discount_calculator": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "calculate_discount",
                "calculate_discount(amount)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l15"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "amount"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "15",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "0.05",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "25",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "0.12",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "50",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l12",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "0.2",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValue",
                "0.4",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "disc",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l16"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "setLine",
                13
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the original price: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "price"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "calculate_discount",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "price",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "discount"
            ],
            [
                "setLine",
                16
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "Discount:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The new price:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "price",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l16"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def calculate_discount(amount):",
            "    if(amount > 0):",
            "        if amount <= 15:",
            "            disc = amount * 0.05",
            "        elif amount <= 25:",
            "            disc = amount * 0.12",
            "        elif amount <= 50:",
            "            disc = 0.2 * amount",
            "        else:",
            "            disc = 0.4 * amount",
            "    return disc",
            "",
            "def main():",
            "    price = int(input(\"Enter the original price: \"))",
            "    discount = calculate_discount(price)",
            "    print(\"Discount:\", discount)",
            "    print(\"The new price:\", price - discount)",
            "",
            "main()",
            ""
        ]
    },
    "discount_calculator2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "calculate_discount",
                "calculate_discount(amount)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l12"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "amount"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "15",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "0.05",
                "2",
                "float"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "50",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValue",
                "0.2",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "0.4",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "disc",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                11
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the original price: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "price"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "calculate_discount",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "price",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "discount"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "Discount:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The new price:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "price",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def calculate_discount(amount):",
            "    if(amount > 0):",
            "        if amount <= 15:",
            "            disc = amount * 0.05",
            "        elif amount <= 50:",
            "            disc = 0.2 * amount",
            "        else:",
            "            disc = 0.4 * amount",
            "    return disc",
            "",
            "def main():",
            "    price = int(input(\"Enter the original price: \"))",
            "    discount = calculate_discount(price)",
            "    print(\"Discount:\", discount)",
            "    print(\"The new price:\", price - discount)",
            "",
            "main()",
            ""
        ]
    },
    "discount_calculator3": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "calculate_discount",
                "calculate_discount(amount, per)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l3"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "amount",
                    "per"
                ]
            ],
            [
                "assignParameters",
                [
                    "amount",
                    "per"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "amount",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "per",
                "2"
            ],
            [
                "addOperator",
                "/",
                "3"
            ],
            [
                "addValue",
                "100",
                "4",
                "int"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "disc"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "disc",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                5
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the original price: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "price"
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the percentage discount (%): ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "percent"
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "calculate_discount",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "price",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "percent",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "discount"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "Discount:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The new price:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "price",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "discount",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def calculate_discount(amount, per):",
            "    disc = amount * (per / 100)",
            "    return disc",
            "",
            "def main():",
            "    price = int(input(\"Enter the original price: \"))",
            "    percent = int(input(\"Enter the percentage discount (%): \"))",
            "    discount = calculate_discount(price, percent)",
            "    print(\"Discount:\", discount)",
            "    print(\"The new price:\", price - discount)",
            "",
            "main()",
            "",
            ""
        ]
    },
    "employee_class": {
        "settings": {
            "code": "left",
            "heapHeight": "30",
            "stackHeight": "400",
            "width": "1000"
        },
        "init": [
            [
                "createClass",
                "Employee"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, name, wages)",
                2,
                "@l1",
                "Employee"
            ],
            [
                "setLine",
                3
            ],
            [
                "createFunction",
                "add_hours",
                "add_hours(self, new_hours)",
                1,
                "@l3",
                "Employee"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "calculate_salary",
                "calculate_salary(self)",
                0,
                "@l5",
                "Employee"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "has_bigger_salary",
                "has_bigger_salary(self, another)",
                1,
                "@l7",
                "Employee"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "name",
                    "wages"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "name",
                    "wages"
                ]
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "name",
                "0"
            ],
            [
                "assignField",
                "__name",
                "@self"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "wages",
                "0"
            ],
            [
                "assignField",
                "__hourly_wages",
                "@self"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "__hours",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "new_hours"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "new_hours"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromField",
                "__hours",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "new_hours",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "__hours",
                "@self"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                3
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromField",
                "__hours",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromField",
                "__hourly_wages",
                "@self",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                3
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "another"
                ]
            ],
            [
                "setLine",
                17
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "addFunction",
                "calculate_salary",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "another",
                "2"
            ],
            [
                "addFunction",
                "calculate_salary",
                "3",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                20
            ],
            [
                "createInstance",
                "Employee"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Sam",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "11.5",
                "0/2/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "emp1"
            ],
            [
                "setLine",
                21
            ],
            [
                "addValueFromVariable",
                "emp1",
                "0"
            ],
            [
                "addFunction",
                "add_hours",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                22
            ],
            [
                "createInstance",
                "Employee"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Jenna",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "13.5",
                "0/2/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "emp2"
            ],
            [
                "setLine",
                23
            ],
            [
                "addValueFromVariable",
                "emp2",
                "0"
            ],
            [
                "addFunction",
                "add_hours",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "11",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                24
            ],
            [
                "addValueFromVariable",
                "emp1",
                "0"
            ],
            [
                "addFunction",
                "add_hours",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "9",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                25
            ],
            [
                "addValueFromVariable",
                "emp1",
                "0"
            ],
            [
                "addFunction",
                "has_bigger_salary",
                "1",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "emp2",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                26
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "Sam's salary is bigger than Jenna's one.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                28
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "Jenna's salary is bigger than or equal to Sam's one.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ]
        ],
        "lines": [
            "",
            "",
            "class Employee:",
            "",
            "    def __init__(self, name, wages):",
            "        self.__name = name",
            "        self.__hourly_wages = wages",
            "        self.__hours = 0",
            "",
            "    def add_hours(self, new_hours):",
            "        self.__hours = self.__hours + new_hours",
            "",
            "    def calculate_salary(self):",
            "        return self.__hours * self.__hourly_wages",
            "",
            "    def has_bigger_salary(self, another):",
            "        return self.calculate_salary() > another.calculate_salary()",
            "",
            "",
            "emp1 = Employee(\"Sam\", 11.50)",
            "emp1.add_hours(5)",
            "emp2 = Employee(\"Jenna\", 13.50)",
            "emp2.add_hours(11)",
            "emp1.add_hours(9)",
            "if emp1.has_bigger_salary(emp2):",
            "    print(\"Sam's salary is bigger than Jenna's one.\")",
            "else:",
            "    print(\"Jenna's salary is bigger than or equal to Sam's one.\")",
            ""
        ]
    },
    "greatest_divisor_brute_force": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "greatest_divisor_brute_force",
                "greatest_divisor_brute_force(a, b)",
                2,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "and",
                "l"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "assignParameters",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "b",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValue",
                "1",
                "0/0/0",
                "int"
            ],
            [
                "addValueFromVariable",
                "low",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_iterate",
                "i1",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "and",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l13",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "removeElement_",
                "0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "assign",
                "gcd"
            ],
            [
                "goto",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l12"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                7
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "gcd",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "greatest_divisor_brute_force",
                "0/0/0",
                2
            ],
            [
                "addValue",
                "25",
                "0/0/0/0/0",
                "int"
            ],
            [
                "addValue",
                "15",
                "0/0/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def greatest_divisor_brute_force(a, b):",
            "    if a > b:",
            "        low = b",
            "    else:",
            "        low = a",
            "    for i in range(1, low + 1):",
            "        if((a % i == 0) and (b % i == 0)):",
            "            gcd = i",
            "    return gcd",
            "",
            "",
            "print(greatest_divisor_brute_force(25, 15))",
            ""
        ]
    },
    "greatest_divisor_brute_force2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "and",
                "l"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter a number:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter another number:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "b",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValue",
                "1",
                "0/0/0",
                "int"
            ],
            [
                "addValueFromVariable",
                "low",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_iterate",
                "i1",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "and",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l13",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "removeElement_",
                "0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "assign",
                "gcd"
            ],
            [
                "goto",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l12"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                10
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "gcd",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    a = int(input(\"Enter a number:\"))",
            "    b = int(input(\"Enter another number:\"))",
            "",
            "    if a > b:",
            "        low = b",
            "    else:",
            "        low = a",
            "    for i in range(1, low + 1):",
            "        if((a % i == 0) and (b % i == 0)):",
            "            gcd = i",
            "    print(gcd)",
            "",
            "main()",
            ""
        ]
    },
    "leap_year": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "is_leap_year",
                "is_leap_year(year)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "year"
                ]
            ],
            [
                "assignParameters",
                [
                    "year"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "4",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "100",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "400",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter a year:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "year"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "is_leap_year",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "year",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_conditionalJump",
                "@l12",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is a leap year.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                16
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is not a leap year.",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l14"
            ],
            [
                "_label",
                "l14"
            ]
        ],
        "lines": [
            "def is_leap_year(year):",
            "    if year % 4 == 0:",
            "        if year % 100 == 0:",
            "            if year % 400 == 0:",
            "                return True",
            "            else:",
            "                return False",
            "        else:",
            "            return True",
            "    return False",
            "",
            "year = int(input(\"Enter a year:\"))",
            "if is_leap_year(year):",
            "    print(\"It is a leap year.\")",
            "else:",
            "    print(\"It is not a leap year.\")",
            ""
        ]
    },
    "leap_year2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter a year:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "year"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "4",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "100",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "400",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l9",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is not a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is not a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    year = int(input(\"Enter a year:\"))",
            "    if year % 4 == 0:",
            "        if year % 100 == 0:",
            "            if year % 400 == 0:",
            "                print(\"It is a leap year\")",
            "            else:",
            "                print(\"It is not a leap year\")",
            "        else:",
            "            print(\"It is a leap year\")",
            "    else:",
            "        print(\"It is not a leap year\")",
            "",
            "main()",
            ""
        ]
    },
    "leap_year3": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "is_leap_year",
                "is_leap_year(year)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createOperator",
                "or",
                "l"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "year"
                ]
            ],
            [
                "assignParameters",
                [
                    "year"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "4",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "100",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "!=",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "or",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "removeElement_",
                "0"
            ],
            [
                "addValueFromVariable",
                "year",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "400",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter a year:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "year"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "is_leap_year",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "year",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_conditionalJump",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValue",
                "It is not a leap year",
                "0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l13"
            ]
        ],
        "lines": [
            "def is_leap_year(year):",
            "    if year % 4 == 0:",
            "        if year % 100 != 0 or year % 400 == 0:",
            "            return True",
            "        else:",
            "            return False",
            "    return False",
            "",
            "year = int(input(\"Enter a year:\"))",
            "if is_leap_year(year):",
            "    print(\"It is a leap year\")",
            "else:",
            "    print(\"It is not a leap year\")",
            ""
        ]
    },
    "palindrome": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "palindrome",
                "palindrome(str1)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "[ : ]",
                "pr",
                "",
                " [ # : # ]"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l9"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "str1"
                ]
            ],
            [
                "assignParameters",
                [
                    "str1"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "len",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "str1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "str1",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValueFromVariable",
                "str1",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValue",
                "-1",
                "2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                5
            ],
            [
                "addFunction",
                "palindrome",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "str1",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ : ]",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/0/1/0",
                "int"
            ],
            [
                "addValue",
                "-1",
                "0/0/0/2/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                9
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "palindrome",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "madam",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "palindrome",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "text",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "palindrome",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "notion",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def palindrome(str1):",
            "    if len(str1) <= 1:",
            "        return True",
            "    elif str1[0] == str1[-1]:",
            "        return palindrome(str1[1:-1])",
            "    else:",
            "        return False",
            "",
            "def main():",
            "    print(palindrome(\"madam\"))",
            "    print(palindrome(\"text\"))",
            "    print(palindrome(\"notion\"))",
            "",
            "main()"
        ]
    },
    "partition": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "450",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "partition",
                "partition(num_list, start, end)",
                3,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l18"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "num_list",
                    "start",
                    "end"
                ]
            ],
            [
                "assignParameters",
                [
                    "num_list",
                    "start",
                    "end"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "start",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "pivot"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "start",
                "0"
            ],
            [
                "assign",
                "left"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "end",
                "0"
            ],
            [
                "assign",
                "right"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "pivot",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "left"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "pivot",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l12",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "right",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "right"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l15",
                "@l16"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "goto",
                "@l17"
            ],
            [
                "_label",
                "l16"
            ],
            [
                "goto",
                "@l17"
            ],
            [
                "_label",
                "l17"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l19"
            ],
            [
                "_label",
                "l18"
            ],
            [
                "setLine",
                17
            ],
            [
                "setLine",
                18
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                11
            ],
            [
                "addValue",
                "19",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "12",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "8",
                "0/5/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/6/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/7/0",
                "int"
            ],
            [
                "addValue",
                "11",
                "0/8/0",
                "int"
            ],
            [
                "addValue",
                "23",
                "0/9/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/10/0",
                "int"
            ],
            [
                "addValue",
                "21",
                "0/11/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "original_list"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "partition",
                "0",
                3
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0/0/0"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addFunction",
                "len",
                "0/2/0",
                1
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0/2/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/2/0"
            ],
            [
                "addOperator",
                "-",
                "0/2/1"
            ],
            [
                "addValue",
                "1",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_list"
            ],
            [
                "setLine",
                20
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "new_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l19"
            ],
            [
                "setLine",
                22
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def partition(num_list, start, end):",
            "    pivot = num_list[start]",
            "    left = start",
            "    right = end",
            "",
            "    while left < right:",
            "        while num_list[left] < pivot:",
            "            left += 1",
            "        while num_list[right] > pivot:",
            "            right -= 1    ",
            "        if left < right:",
            "            temp = num_list[left]",
            "            num_list[left] = num_list[right]",
            "            num_list[right] = temp",
            "    return num_list",
            "",
            "def main():",
            "    original_list = [ 19, 9, 5, 12, 8, 7, 4, 11, 23, 6, 21]",
            "    new_list = partition(original_list, 0, len(original_list) - 1)",
            "    print(new_list)",
            "",
            "main()",
            ""
        ]
    },
    "partition2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                12
            ],
            [
                "addValue",
                "13",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "19",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "12",
                "0/5/0",
                "int"
            ],
            [
                "addValue",
                "8",
                "0/6/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/7/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/8/0",
                "int"
            ],
            [
                "addValue",
                "11",
                "0/9/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/10/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/11/0",
                "int"
            ],
            [
                "addValue",
                "21",
                "0/12/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "original_list"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "pivot"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "left"
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "len",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "right"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "pivot",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "left"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "pivot",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l12",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "right",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "right"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "left",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l15",
                "@l16"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "left",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                16
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "right",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "goto",
                "@l17"
            ],
            [
                "_label",
                "l16"
            ],
            [
                "goto",
                "@l17"
            ],
            [
                "_label",
                "l17"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "original_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                19
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    original_list = [13, 19, 9, 5, 12, 8, 7, 4, 11, 2, 6, 21]",
            "    pivot = original_list[0]",
            "    left = 0",
            "    right = len(original_list) - 1",
            "",
            "    while left < right:",
            "        while original_list[left] < pivot:",
            "            left += 1",
            "        while original_list[right] > pivot:",
            "            right -= 1",
            "        if left < right:",
            "            temp = original_list[left]",
            "            original_list[left] = original_list[right]",
            "            original_list[right] = temp",
            "    print(original_list)",
            "",
            "main()",
            ""
        ]
    },
    "partition3": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "450",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "partition",
                "partition(num_list, start, end)",
                3,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l10"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "num_list",
                    "start",
                    "end"
                ]
            ],
            [
                "assignParameters",
                [
                    "num_list",
                    "start",
                    "end"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "start",
                "0"
            ],
            [
                "assign",
                "k"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "start",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "end",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValueFromVariable",
                "num_list",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "start",
                "2/1/0"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "k",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "k"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "k",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "k",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "start",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "start",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "k",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "k",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                15
            ],
            [
                "setLine",
                16
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                12
            ],
            [
                "addValue",
                "13",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "19",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "12",
                "0/5/0",
                "int"
            ],
            [
                "addValue",
                "8",
                "0/6/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/7/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/8/0",
                "int"
            ],
            [
                "addValue",
                "11",
                "0/9/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/10/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/11/0",
                "int"
            ],
            [
                "addValue",
                "21",
                "0/12/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "l"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "partition",
                "0",
                3
            ],
            [
                "addValueFromVariable",
                "l",
                "0/0/0"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addFunction",
                "len",
                "0/2/0",
                1
            ],
            [
                "addValueFromVariable",
                "l",
                "0/2/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/2/0"
            ],
            [
                "addOperator",
                "-",
                "0/2/1"
            ],
            [
                "addValue",
                "1",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_list"
            ],
            [
                "setLine",
                18
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "new_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                20
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def partition(num_list, start, end):",
            "    k = start",
            "    for i in range(start + 1, end + 1):",
            "        if num_list[i] <= num_list[start]:",
            "            k += 1",
            "            temp = num_list[i]",
            "            num_list[i] = num_list[k]",
            "            num_list[k] = temp",
            "    temp = num_list[start]",
            "    num_list[start] = num_list[k]",
            "    num_list[k] = temp",
            "    return num_list",
            "",
            "def main():",
            "    l = [13, 19, 9, 5, 12, 8, 7, 4, 11, 2, 6, 21]",
            "    new_list = partition(l, 0, len(l) - 1)",
            "    print(new_list)",
            "",
            "main()",
            ""
        ]
    },
    "power": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "300",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "base"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "assign",
                "exp"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    base = 2",
            "    exp = 5",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    print(result)",
            "",
            "main()",
            ""
        ]
    },
    "power2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "power",
                "power(base, exp)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l7"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "assignParameters",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "power",
                "0",
                2
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_num"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "new_num",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def power(base, exp):",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    return result",
            "",
            "def main():",
            "    new_num = power(2, 5)",
            "    print(new_num)",
            "",
            "main()",
            "",
            ""
        ]
    },
    "power_with_input": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter exponent: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "exp"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "base"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    exp = int(input(\"Enter exponent: \"))",
            "    base = 2",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    print(result)",
            "",
            "main()",
            ""
        ]
    },
    "power_with_input2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter exponent: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "exp"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter base: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "base"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def main():",
            "    exp = int(input(\"Enter exponent: \"))",
            "    base = int(input(\"Enter base: \"))",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    print(result)",
            "",
            "main()",
            ""
        ]
    },
    "power_with_input3": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "400",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "power",
                "power(base, exp)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l7"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "assignParameters",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter exponent: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "exponent"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "power",
                "0",
                2
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "addValueFromVariable",
                "exponent",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_num"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "new_num",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def power(base, exp):",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    return result",
            "",
            "def main():",
            "    exponent = int(input(\"Enter exponent: \"))",
            "    new_num = power(2, exponent)",
            "    print(new_num)",
            "",
            "main()",
            ""
        ]
    },
    "power_with_input4": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "400",
            "width": "900"
        },
        "init": [
            [
                "createFunction",
                "power",
                "power(base, exp)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l7"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "assignParameters",
                [
                    "base",
                    "exp"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "exp",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "base",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter exponent: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "exponent"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter base: ",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "base"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "power",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "base",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "exponent",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_num"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "new_num",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def power(base, exp):",
            "    result = 1",
            "    i = 0",
            "    while i < exp:",
            "        result = result * base",
            "        i += 1",
            "    return result",
            "",
            "def main():",
            "    exponent = int(input(\"Enter exponent: \"))",
            "    base = int(input(\"Enter base: \"))",
            "    new_num = power(base, exponent)",
            "    print(new_num)",
            "",
            "main()"
        ]
    },
    "recursion_greatest_divisor": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "greatest_greatest_divisor",
                "greatest_greatest_divisor(a, b)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "min",
                "min(a, b)",
                2,
                "-1"
            ],
            [
                "createFunction",
                "max",
                "max(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l9"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "assignParameters",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "min",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "max",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "high"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "low",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "high",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "low",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "greatest_greatest_divisor",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "low",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "high",
                "0/1/0"
            ],
            [
                "addOperator",
                "%",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "low",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                12
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "greatest_greatest_divisor",
                "0/0/0",
                2
            ],
            [
                "addValue",
                "15",
                "0/0/0/0/0",
                "int"
            ],
            [
                "addValue",
                "45",
                "0/0/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def greatest_greatest_divisor(a, b):",
            "    low = min(a, b)",
            "    high = max(a, b)",
            "",
            "    if low == 0:",
            "        return high",
            "    elif low == 1:",
            "        return 1",
            "    else:",
            "        return greatest_greatest_divisor(low, high % low)",
            "",
            "def main():",
            "    print(greatest_greatest_divisor(15, 45))",
            "",
            "main()",
            "",
            "",
            ""
        ]
    },
    "recursion_greatest_divisor2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "greatest_greatest_divisor",
                "greatest_greatest_divisor(a, b)",
                2,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "min",
                "min(a, b)",
                2,
                "-1"
            ],
            [
                "createFunction",
                "max",
                "max(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "assignParameters",
                [
                    "a",
                    "b"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "min",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "low"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "max",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "high"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "low",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "high",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "low",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "greatest_greatest_divisor",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "low",
                "0/0/0"
            ],
            [
                "addValueFromVariable",
                "high",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "low",
                "0/1/2"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "greatest_greatest_divisor",
                "0/0/0",
                2
            ],
            [
                "addValue",
                "25",
                "0/0/0/0/0",
                "int"
            ],
            [
                "addValue",
                "15",
                "0/0/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def greatest_greatest_divisor(a, b):",
            "    low = min(a, b)",
            "    high = max(a, b)",
            "",
            "    if low == 0:",
            "        return high",
            "    elif low == 1:",
            "        return 1",
            "    else:",
            "        return greatest_greatest_divisor(low, high - low)",
            "",
            "print(greatest_greatest_divisor(25, 15))",
            ""
        ]
    },
    "recursion_halve": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "halve",
                "halve(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "2",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValue",
                "4",
                "0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result1"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValue",
                "7",
                "0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result2"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def halve(n):",
            "    if n <= 1:",
            "        return 0",
            "    result = halve(n - 2)",
            "    return 1 + result",
            "",
            "def main():",
            "    result1 = halve(4)",
            "    result2 = halve(7)",
            "    print(result1)",
            "    print(result2)",
            "",
            "main()"
        ]
    },
    "recursion_halve2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "halve",
                "halve(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "2",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the first integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "n1"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter the second integer:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "n2"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result1"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "halve",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result2"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def halve(n):",
            "    if n <= 1:",
            "        return 0",
            "    result = halve(n - 2)",
            "    return 1 + result",
            "",
            "def main():",
            "    n1 = int(input(\"Enter the first integer:\"))",
            "    n2 = int(input(\"Enter the second integer:\"))",
            "    result1 = halve(n1)",
            "    result2 = halve(n2)",
            "    print(result1)",
            "    print(result2)",
            "",
            "main()",
            ""
        ]
    },
    "recursion_mult2_version1": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "mult2",
                "mult2(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addFunction",
                "mult2",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "mult2",
                "0",
                1
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def mult2(n):",
            "    if n == 1:",
            "        return 2",
            "    else:",
            "        return mult2(n - 1) + 2",
            "",
            "def main():",
            "    result = mult2(3)",
            "    print(result)",
            "",
            "main()"
        ]
    },
    "recursion_mult2_version2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "mult2",
                "mult2(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addFunction",
                "mult2",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter a number:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "num"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "mult2",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "num",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def mult2(n):",
            "    if n == 1:",
            "        return 2",
            "    else:",
            "        return mult2(n - 1) + 2",
            "",
            "def main():",
            "    num = int(input(\"Enter a number:\"))",
            "    result = mult2(num)",
            "    print(result)",
            "",
            "main()",
            ""
        ]
    },
    "recursion_sum": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "sum_n",
                "sum_n(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addFunction",
                "sum_n",
                "2",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "2/0/0"
            ],
            [
                "addOperator",
                "-",
                "2/0/1"
            ],
            [
                "addValue",
                "1",
                "2/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "2/0/1"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                8
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "sum_n",
                "0",
                1
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def sum_n(n):",
            "    if n == 0:",
            "        return 0",
            "    else:",
            "        return n + sum_n(n - 1)",
            "",
            "def main():",
            "    result = sum_n(3)",
            "    print(result)",
            "",
            "main()",
            ""
        ]
    },
    "recursion_sum2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "500",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "sum_n",
                "sum_n(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l6"
            ],
            [
                "createFunction",
                "int",
                "int(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "input",
                "input(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addFunction",
                "sum_n",
                "2",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "2/0/0"
            ],
            [
                "addOperator",
                "-",
                "2/0/1"
            ],
            [
                "addValue",
                "1",
                "2/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "2/0/1"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                7
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "int",
                "0",
                1
            ],
            [
                "addFunction",
                "input",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "Enter number:",
                "0/0/0/0/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "num"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "sum_n",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "num",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def sum_n(n):",
            "    if n == 0:",
            "        return 0",
            "    else:",
            "        return n + sum_n(n - 1)",
            "",
            "def main():",
            "    num = int(input(\"Enter number:\"))",
            "    result = sum_n(num)",
            "    print(result)",
            "",
            "main()"
        ]
    },
    "selection_sort": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "450",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "selection_sort",
                "selection_sort(lst)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "lst"
                ]
            ],
            [
                "assignParameters",
                [
                    "lst"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addFunction",
                "len",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "assign",
                "min_index"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i2",
                "-1"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i2",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i2",
                "0"
            ],
            [
                "assign",
                "j"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "j",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "lst",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "2/1/0"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "assign",
                "min_index"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                2
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                11
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                7
            ],
            [
                "addValue",
                "3",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "1",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "41",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "59",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "26",
                "0/5/0",
                "int"
            ],
            [
                "addValue",
                "53",
                "0/6/0",
                "int"
            ],
            [
                "addValue",
                "59",
                "0/7/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "list1"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "selection_sort",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "list1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "list1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def selection_sort(lst):",
            "    for i in range(len(lst) - 1):",
            "        min_index = i;",
            "        for j in range(i + 1, len(lst)):",
            "            if lst[j] < lst[min_index]:",
            "                min_index = j",
            "        temp = lst[i];",
            "        lst[i] = lst[min_index]",
            "        lst[min_index] = temp",
            "",
            "list1 = [3, 1, 41, 59, 26, 53, 59]",
            "selection_sort(list1)",
            "print(list1)",
            ""
        ]
    },
    "selection_sort2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "450",
            "width": "1000"
        },
        "init": [
            [
                "createFunction",
                "main",
                "main()",
                0,
                "@l1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                3
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                7
            ],
            [
                "addValue",
                "3",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "1",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "41",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "59",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "26",
                "0/5/0",
                "int"
            ],
            [
                "addValue",
                "53",
                "0/6/0",
                "int"
            ],
            [
                "addValue",
                "53",
                "0/7/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "lst"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addFunction",
                "len",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "assign",
                "min_index"
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i2",
                "-1"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i2",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i2",
                "0"
            ],
            [
                "assign",
                "j"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "j",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "lst",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "2/1/0"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "assign",
                "min_index"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                6
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "0/2/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "min_index",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                12
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "main",
                "0",
                0
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "def main():",
            "    lst = [3, 1, 41, 59, 26, 53, 53]",
            "    for i in range(len(lst) - 1):",
            "        min_index = i;",
            "        for j in range(i + 1, len(lst)):",
            "            if lst[j] < lst[min_index]:",
            "                min_index = j",
            "        temp = lst[i];",
            "        lst[i] = lst[min_index]",
            "        lst[min_index] = temp",
            "    print(lst)",
            "",
            "main()"
        ]
    },
    "student_class": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1000"
        },
        "init": [
            [
                "createClass",
                "Student"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, name1, age1)",
                2,
                "@l1",
                "Student"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "add_grade",
                "add_grade(self, sub, grade)",
                2,
                "@l3",
                "Student"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "gpa",
                "gpa(self)",
                0,
                "@l8",
                "Student"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "name1",
                    "age1"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "name1",
                    "age1"
                ]
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "name1",
                "0"
            ],
            [
                "assignField",
                "__name",
                "@self"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "age1",
                "0"
            ],
            [
                "assignField",
                "__age",
                "@self"
            ],
            [
                "setLine",
                7
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assignField",
                "__grade_register",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                2
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "sub",
                    "grade"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "sub",
                    "grade"
                ]
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromVariable",
                "grade",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "5",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "sub",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "grade",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                2
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                14
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "len",
                "0",
                1
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "num_grades"
            ],
            [
                "setLine",
                16
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0"
            ],
            [
                "assign",
                "grades"
            ],
            [
                "setLine",
                17
            ],
            [
                "_createIterator",
                "i1",
                "@grades"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_iterate",
                "i1",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "subject"
            ],
            [
                "setLine",
                18
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "grades",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "subject",
                "2/1/0"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                17
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                19
            ],
            [
                "addValueFromVariable",
                "num_grades",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l14",
                "@l15"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "setLine",
                20
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValueFromVariable",
                "num_grades",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "goto",
                "@l16"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "setLine",
                22
            ],
            [
                "addValue",
                "0.0",
                "0",
                "float"
            ],
            [
                "assign",
                "result"
            ],
            [
                "goto",
                "@l16"
            ],
            [
                "_label",
                "l16"
            ],
            [
                "setLine",
                23
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                26
            ],
            [
                "createInstance",
                "Student"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Jenna",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "19",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "stu1"
            ],
            [
                "setLine",
                27
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "math",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                28
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "biology",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "3",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                29
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "chemistry",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "5",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                30
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0/0/0"
            ],
            [
                "addFunction",
                "gpa",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "",
            "class Student:",
            "",
            "    def __init__(self, name1, age1):",
            "        self.__name = name1",
            "        self.__age = age1",
            "        self.__grade_register = {}",
            "",
            "    def add_grade(self, sub, grade):",
            "        if grade <= 5:",
            "            self.__grade_register[sub] = grade",
            "",
            "    def gpa(self):",
            "        sum = 0",
            "        num_grades = len(self.__grade_register)",
            "        grades = self.__grade_register",
            "        for subject in grades:",
            "            sum += grades[subject]",
            "        if num_grades > 0:",
            "            result = sum / num_grades",
            "        else:",
            "            result = 0.0",
            "        return result",
            "",
            "",
            "stu1 = Student(\"Jenna\", 19)",
            "stu1.add_grade(\"math\", 4)",
            "stu1.add_grade(\"biology\", 3)",
            "stu1.add_grade(\"chemistry\", 5)",
            "print(stu1.gpa())",
            ""
        ]
    },
    "studet_class2": {
        "settings": {
            "code": "left",
            "heapHeight": "40",
            "stackHeight": "350",
            "width": "1200"
        },
        "init": [
            [
                "createClass",
                "Student"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, name1, age1)",
                2,
                "@l1",
                "Student"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "add_grade",
                "add_grade(self, sub, grade)",
                2,
                "@l3",
                "Student"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "gpa",
                "gpa(self)",
                0,
                "@l8",
                "Student"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "name1",
                    "age1"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "name1",
                    "age1"
                ]
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "name1",
                "0"
            ],
            [
                "assignField",
                "__name",
                "@self"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "age1",
                "0"
            ],
            [
                "assignField",
                "__age",
                "@self"
            ],
            [
                "setLine",
                6
            ],
            [
                "createInstance",
                "dict"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assignField",
                "__grade_register",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "sub",
                    "grade"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "sub",
                    "grade"
                ]
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "grade",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "5",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                10
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "sub",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "grade",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                13
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "len",
                "0",
                1
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "num_grades"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromField",
                "__grade_register",
                "@self",
                "0"
            ],
            [
                "assign",
                "grades"
            ],
            [
                "setLine",
                16
            ],
            [
                "_createIterator",
                "i1",
                "@grades"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_iterate",
                "i1",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "subject"
            ],
            [
                "setLine",
                17
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "grades",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "subject",
                "2/1/0"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                16
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                18
            ],
            [
                "addValueFromVariable",
                "num_grades",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l14",
                "@l15"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "setLine",
                19
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValueFromVariable",
                "num_grades",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "goto",
                "@l16"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "setLine",
                21
            ],
            [
                "addValue",
                "0.0",
                "0",
                "float"
            ],
            [
                "assign",
                "result"
            ],
            [
                "goto",
                "@l16"
            ],
            [
                "_label",
                "l16"
            ],
            [
                "setLine",
                22
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                25
            ],
            [
                "createInstance",
                "Student"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Jenna",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "19",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "stu1"
            ],
            [
                "setLine",
                26
            ],
            [
                "createInstance",
                "Student"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Matti",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "25",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "stu2"
            ],
            [
                "setLine",
                27
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "math",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "3",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                28
            ],
            [
                "addValueFromVariable",
                "stu2",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "biology",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                29
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "biology",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                30
            ],
            [
                "addValueFromVariable",
                "stu2",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "History",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                31
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0"
            ],
            [
                "addFunction",
                "add_grade",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "chemistry",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                32
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "Jenna's GPA:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "stu1",
                "0/1/0"
            ],
            [
                "addFunction",
                "gpa",
                "0/1/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                33
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "Matti's GPA:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "stu2",
                "0/1/0"
            ],
            [
                "addFunction",
                "gpa",
                "0/1/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "class Student:",
            "",
            "    def __init__(self, name1, age1):",
            "        self.__name = name1",
            "        self.__age = age1",
            "        self.__grade_register = {}",
            "",
            "    def add_grade(self, sub, grade):",
            "        if grade <= 5:",
            "            self.__grade_register[sub] = grade",
            "",
            "    def gpa(self):",
            "        sum = 0",
            "        num_grades = len(self.__grade_register)",
            "        grades = self.__grade_register",
            "        for subject in grades:",
            "            sum += grades[subject]",
            "        if num_grades > 0:",
            "            result = sum / num_grades",
            "        else:",
            "            result = 0.0",
            "        return result",
            "",
            "",
            "stu1 = Student(\"Jenna\", 19)",
            "stu2 = Student(\"Matti\", 25)",
            "stu1.add_grade(\"math\", 3)",
            "stu2.add_grade(\"biology\", 4)",
            "stu1.add_grade(\"biology\", 2)",
            "stu2.add_grade(\"History\", 4)",
            "stu1.add_grade(\"chemistry\", 4)",
            "print(\"Jenna's GPA:\", stu1.gpa())",
            "print(\"Matti's GPA:\", stu2.gpa())",
            "",
            ""
        ]
    },
    "data_type_isinstance": {
        "lines": [
            "a = 5\r",
            "b = 6\r",
            "c = float(a/b)\r",
            "print(isinstance(c,int))"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "float",
                "float(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFunction",
                "isinstance",
                "isinstance(a, b)",
                2,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "6",
                "0",
                "int"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "float",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "addOperator",
                "/",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "c"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "isinstance",
                "0/0/0",
                2
            ],
            [
                "addValueFromVariable",
                "c",
                "0/0/0/0/0"
            ],
            [
                "addValue",
                "int",
                "0/0/0/1/0",
                "NoneType"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "data_type_typeof": {
        "lines": [
            "def divide(value):\r",
            "    value = value /2\r",
            "    print (type(value))\r",
            "print(divide(5))"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createFunction",
                "divide",
                "divide(value)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFunction",
                "type",
                "type(a)",
                1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "value"
                ]
            ],
            [
                "assignParameters",
                [
                    "value"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "value",
                "0"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "value"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "type",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "value",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "divide",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "5",
                "0/0/0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "import_math": {
        "lines": [
            "import math\r",
            "print(math.fabs(-66.43))\r",
            "print(math.fabs(-7))"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "math.fabs",
                "math.fabs(x)",
                -1,
                "-1"
            ],
            [
                "setLine",
                2
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ]
        ],
        "steps": [
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "math.fabs",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "-66.43",
                "0/0/0/0/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "math.fabs",
                "0/0/0",
                1
            ],
            [
                "addValue",
                "-7",
                "0/0/0/0/0",
                "float"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "tree": {
        "lines": [
            "class Node:\r",
            "    def __init__(self, key):\r",
            "        self.left = None\r",
            "        self.right = None\r",
            "        self.val = key\r",
            " \r",
            "root = Node(1)\r",
            "root.left = Node(2)\r",
            "root.right = Node(3)\r",
            "root.left.left = Node(4)\r",
            "root.right.left = Node(5)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Node"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, key)",
                1,
                "@l1",
                "Node"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "key"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "key"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "left",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "right",
                "@self"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "key",
                "0"
            ],
            [
                "assignField",
                "val",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                7
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "root"
            ],
            [
                "setLine",
                8
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assignField",
                "left",
                "@root"
            ],
            [
                "setLine",
                9
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "3",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assignField",
                "right",
                "@root"
            ],
            [
                "setLine",
                10
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "4",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assignField",
                "left.left",
                "@root"
            ],
            [
                "setLine",
                11
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assignField",
                "left.right",
                "@root"
            ]
        ]
    },
    "tree_node_access": {
        "lines": [
            "class Node:\r",
            "  def __init__(self, key):\r",
            "    self.left = None\r",
            "    self.right = None\r",
            "    self.val = key\r",
            "  def print(self):\r",
            "    print(self.val)\r",
            "\r",
            "root = Node(1)\r",
            "root_left = Node(2)\r",
            "root.left = root_left\r",
            "\r",
            "root_left.left = Node(4)\r",
            "\r",
            "root.print()\r",
            "root_left.left.print()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Node"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, key)",
                1,
                "@l1",
                "Node"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "print",
                "print(self)",
                0,
                "@l3",
                "Node"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "key"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "key"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "left",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "right",
                "@self"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "key",
                "0"
            ],
            [
                "assignField",
                "val",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "val",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                9
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "root"
            ],
            [
                "setLine",
                10
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "root_left"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "root_left",
                "0"
            ],
            [
                "assignField",
                "left",
                "@root"
            ],
            [
                "setLine",
                13
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValue",
                "4",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assignField",
                "left",
                "@root_left"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "root",
                "0"
            ],
            [
                "addFunction",
                "print",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                16
            ],
            [
                "addValueFromField",
                "left",
                "@root_left",
                "0"
            ],
            [
                "addFunction",
                "print",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "doubly_linked_list": {
        "lines": [
            "class Node:\r",
            "  def __init__(self, data):\r",
            "    self.data = data\r",
            "    self.next = None\r",
            "    self.prev = None\r",
            "class DoublyLinkedList:\r",
            "  def __init__(self):\r",
            "    self.head = None\r",
            "\r",
            "  def push(self, new_data):\r",
            "    new_node = Node(new_data)\r",
            "    new_node.next = self.head\r",
            "    if self.head != None:\r",
            "      self.head.prev = new_node\r",
            "    self.head = new_node\r",
            "\r",
            "  def printContents(self):\r",
            "    current = self.head\r",
            "    while (current != None):\r",
            "      print(current.data)\r",
            "      current = current.next \t \r",
            "\r",
            "doubly_linked_list = DoublyLinkedList()\r",
            "doubly_linked_list.push(\"world\")\r",
            "doubly_linked_list.push(\"hello\") \r",
            "doubly_linked_list.printContents()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Node"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, data)",
                1,
                "@l1",
                "Node"
            ],
            [
                "setLine",
                1
            ],
            [
                "createClass",
                "DoublyLinkedList"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                0,
                "@l3",
                "DoublyLinkedList"
            ],
            [
                "createFunction",
                "push",
                "push(self, new_data)",
                1,
                "@l5",
                "DoublyLinkedList"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createFunction",
                "printContents",
                "printContents(self)",
                0,
                "@l10",
                "DoublyLinkedList"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "data"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "data"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "data",
                "0"
            ],
            [
                "assignField",
                "data",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "next",
                "@self"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "prev",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "head",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "new_data"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "new_data"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "new_data",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_node"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromField",
                "head",
                "@self",
                "0"
            ],
            [
                "assignField",
                "next",
                "@new_node"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromField",
                "head",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "!=",
                "1"
            ],
            [
                "addValue",
                "None",
                "2",
                "NoneType"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "new_node",
                "0"
            ],
            [
                "assignField",
                "head.prev",
                "@self"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "new_node",
                "0"
            ],
            [
                "assignField",
                "head",
                "@self"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                18
            ],
            [
                "addValueFromField",
                "head",
                "@self",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "setLine",
                19
            ],
            [
                "addValueFromVariable",
                "current",
                "0"
            ],
            [
                "addOperator",
                "!=",
                "1"
            ],
            [
                "addValue",
                "None",
                "2",
                "NoneType"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l13",
                "@l14"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                20
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "data",
                "@current",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                21
            ],
            [
                "addValueFromField",
                "next",
                "@current",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "goto",
                "@l12"
            ],
            [
                "_label",
                "l14"
            ],
            [
                "_label",
                "l15"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                23
            ],
            [
                "createInstance",
                "DoublyLinkedList"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "doubly_linked_list"
            ],
            [
                "setLine",
                24
            ],
            [
                "addValueFromVariable",
                "doubly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "world",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                25
            ],
            [
                "addValueFromVariable",
                "doubly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "hello",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                26
            ],
            [
                "addValueFromVariable",
                "doubly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "printContents",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "singly_linked_list": {
        "lines": [
            "class Node:\r",
            "  def __init__(self, data):\r",
            "    self.data = data\r",
            "    self.next = None\r",
            "\r",
            "class SinglyLinkedList:\r",
            "  def __init__(self):\r",
            "    self.head = None\r",
            "    \r",
            "  def push(self, new_data):\r",
            "    new_node = Node(new_data)\r",
            "    new_node.next = self.head\r",
            "    self.head = new_node\r",
            "  \r",
            "  def printContents(self):\r",
            "    current = self.head\r",
            "    while (current != None):\r",
            "      print(current.data)\r",
            "      current = current.next\r",
            "\r",
            "singly_linked_list = SinglyLinkedList()\r",
            "singly_linked_list.push(10)\r",
            "singly_linked_list.push(5) \r",
            "singly_linked_list.printContents()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Node"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, data)",
                1,
                "@l1",
                "Node"
            ],
            [
                "setLine",
                1
            ],
            [
                "createClass",
                "SinglyLinkedList"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                0,
                "@l3",
                "SinglyLinkedList"
            ],
            [
                "createFunction",
                "push",
                "push(self, new_data)",
                1,
                "@l5",
                "SinglyLinkedList"
            ],
            [
                "createFunction",
                "printContents",
                "printContents(self)",
                0,
                "@l7",
                "SinglyLinkedList"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "data"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "data"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "data",
                "0"
            ],
            [
                "assignField",
                "data",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "next",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                8
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "assignField",
                "head",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "new_data"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "new_data"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "createInstance",
                "Node"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "new_data",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "new_node"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromField",
                "head",
                "@self",
                "0"
            ],
            [
                "assignField",
                "next",
                "@new_node"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "new_node",
                "0"
            ],
            [
                "assignField",
                "head",
                "@self"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                16
            ],
            [
                "addValueFromField",
                "head",
                "@self",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                17
            ],
            [
                "addValueFromVariable",
                "current",
                "0"
            ],
            [
                "addOperator",
                "!=",
                "1"
            ],
            [
                "addValue",
                "None",
                "2",
                "NoneType"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                18
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "data",
                "@current",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                19
            ],
            [
                "addValueFromField",
                "next",
                "@current",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "goto",
                "@l9"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                21
            ],
            [
                "createInstance",
                "SinglyLinkedList"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "singly_linked_list"
            ],
            [
                "setLine",
                22
            ],
            [
                "addValueFromVariable",
                "singly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "10",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                23
            ],
            [
                "addValueFromVariable",
                "singly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                24
            ],
            [
                "addValueFromVariable",
                "singly_linked_list",
                "0"
            ],
            [
                "addFunction",
                "printContents",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "function_pass": {
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 700
        },
        "init": [
            [
                "createFunction",
                "total",
                "total(list)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "average",
                "average(total, list)",
                2,
                "@l7"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "list"
                ]
            ],
            [
                "assignParameters",
                [
                    "list"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "total"
            ],
            [
                "setLine",
                3
            ],
            [
                "_createIterator",
                "i1",
                "@list"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "total",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "total"
            ],
            [
                "setLine",
                3
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "total",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                6
            ],
            [
                "createParameterVariables",
                [
                    "total",
                    "list"
                ]
            ],
            [
                "assignParameters",
                [
                    "total",
                    "list"
                ]
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                8
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                4
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/4/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "total",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                4
            ],
            [
                "addValue",
                "The total of my list is",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/1/0"
            ],
            [
                "addValue",
                "and the average value of my list is",
                "0/2/0",
                "str"
            ],
            [
                "addFunction",
                "average",
                "0/3/0",
                2
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/3/0/0/0"
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/3/0/1/0"
            ],
            [
                "evaluateFunction",
                "0/3/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def total(list):",
            "    total = 0",
            "    for i in list:",
            "       total+=i",
            "    return total",
            "def average(total, list):",
            "    pass",
            "my_list=[1,2,3,4]",
            "sum=total(my_list)",
            "print('The total of my list is',sum,\"and the average value of my list is\",average(sum,my_list))"
        ]
    },
    "inheritance": {
        "lines": [
            "class Person:\r",
            "    def __init__(self, name, idnumber):\r",
            "        self.name = name\r",
            "        self.idnumber = idnumber\r",
            "    def display(self):\r",
            "        print(self.name)\r",
            "        print(self.idnumber)\r",
            "\r",
            "class Employee(Person):\r",
            "      def printname(self):\r",
            "         print(\"The employee's name is \", self.name)\r",
            "\r",
            "a = Employee('Rahul', 886012)\r",
            "a.display()\r",
            "a.printname()"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 350,
            "width": 900
        },
        "init": [
            [
                "createClass",
                "Person"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, name, idnumber)",
                2,
                "@l1",
                "Person"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "display",
                "display(self)",
                0,
                "@l3",
                "Person"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createClass",
                "Employee"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self, name, idnumber)",
                2,
                "@l5",
                "Employee"
            ],
            [
                "createFunction",
                "display",
                "display(self)",
                0,
                "@l7",
                "Employee"
            ],
            [
                "createFunction",
                "printname",
                "printname(self)",
                0,
                "@l9",
                "Employee"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "name",
                    "idnumber"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "name",
                    "idnumber"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "name",
                "0"
            ],
            [
                "assignField",
                "name",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "idnumber",
                "0"
            ],
            [
                "assignField",
                "idnumber",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "name",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "idnumber",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                9
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "name",
                    "idnumber"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "name",
                    "idnumber"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "name",
                "0"
            ],
            [
                "assignField",
                "name",
                "@self"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "idnumber",
                "0"
            ],
            [
                "assignField",
                "idnumber",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                9
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "name",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                7
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromField",
                "idnumber",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                9
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The employee's name is ",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromField",
                "name",
                "@self",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                13
            ],
            [
                "createInstance",
                "Employee"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                2,
                "?"
            ],
            [
                "addValue",
                "Rahul",
                "0/1/0",
                "str"
            ],
            [
                "addValue",
                "886012",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addFunction",
                "display",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addFunction",
                "printname",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "find_max2": {
        "settings": {
            "code": "left",
            "heapHeight": "80",
            "stackHeight": "150",
            "width": "800"
        },
        "init": [
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                5
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "50",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "-30",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "200",
                "0/4/-1",
                "int"
            ],
            [
                "addValue",
                "100",
                "0/5/-1",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "num_list"
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "current_max"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValue",
                "1",
                "0/0/0",
                "int"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_iterate",
                "i1",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "item"
            ],
            [
                "setLine",
                4
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "current_max",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "current_max"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                3
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                6
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "max element of list is:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "current_max",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "num_list = [0, 50, -30, 200, 100]",
            "current_max = num_list[0]",
            "for item in range(1, len(num_list)):",
            "    if num_list[item] > current_max:",
            "        current_max = num_list[item]",
            "print(\"max element of list is:\", current_max)"
        ]
    },
    "find_target": {
        "settings": {
            "code": "left",
            "heapHeight": "80",
            "stackHeight": "150",
            "width": "900"
        },
        "init": [
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "range",
                "range(a, b)",
                2,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                5
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "50",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "-30",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "200",
                "0/4/-1",
                "int"
            ],
            [
                "addValue",
                "100",
                "0/5/-1",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "num_list"
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "-25",
                "0",
                "int"
            ],
            [
                "assign",
                "target"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValue",
                "False",
                "0",
                "bool"
            ],
            [
                "assign",
                "found"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                2
            ],
            [
                "addValue",
                "1",
                "0/0/0",
                "int"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_iterate",
                "i1",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "item"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "num_list",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValueFromVariable",
                "target",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValue",
                "True",
                "0",
                "bool"
            ],
            [
                "assign",
                "found"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "found",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "True",
                "2",
                "bool"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "found target value",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "target",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "did not find target value",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "target",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l10"
            ]
        ],
        "lines": [
            "num_list = [0, 50, -30, 200, 100]",
            "target = -25",
            "found = False",
            "for item in range(1, len(num_list)):",
            "    if num_list[item] == target:",
            "        found = True",
            "",
            "if found == True:",
            "    print(\"found target value\", target)",
            "else:",
            "    print(\"did not find target value\", target)"
        ]
    },
    "recursion_fibonacci": {
        "settings": {
            "code": "left",
            "heapHeight": "80",
            "stackHeight": "150",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "fibonacci",
                "fibonacci(n)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "n"
                ]
            ],
            [
                "assignParameters",
                [
                    "n"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                5
            ],
            [
                "addFunction",
                "fibonacci",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addFunction",
                "fibonacci",
                "2",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "2/0/0"
            ],
            [
                "addOperator",
                "-",
                "2/0/1"
            ],
            [
                "addValue",
                "2",
                "2/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "2/0/1"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "returnValue"
            ],
            [
                "goto",
                "@l5"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValue",
                "4",
                "0",
                "int"
            ],
            [
                "assign",
                "n"
            ],
            [
                "setLine",
                8
            ],
            [
                "addFunction",
                "print",
                "0",
                3
            ],
            [
                "addValue",
                "the first",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "n",
                "0/1/0"
            ],
            [
                "addValue",
                "fibonacci numbers are: ",
                "0/2/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_iterate",
                "i1",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addFunction",
                "fibonacci",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_label",
                "l9"
            ]
        ],
        "lines": [
            "def fibonacci(n):",
            "    if n<=1:",
            "        return n",
            "    else:",
            "        return(fibonacci(n-1)+fibonacci(n-2))",
            "",
            "n = 4",
            "print(\"the first\", n, \"fibonacci numbers are: \")",
            "for i in range(n):",
            "    print(fibonacci(i))"
        ]
    },
    "bubble_sort_worst": {
        "settings": {
            "code": "left",
            "heapHeight": "80",
            "stackHeight": "150",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "bubble_sort",
                "bubble_sort(lst)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "range",
                "range(a, b, c)",
                3,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "lst"
                ]
            ],
            [
                "assignParameters",
                [
                    "lst"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "num_swaps"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "range",
                "0",
                3
            ],
            [
                "addFunction",
                "len",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "-1",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "item"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "item",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i2",
                "-1"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i2",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i2",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "lst",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "current",
                "2/1/0"
            ],
            [
                "addOperator",
                "+",
                "2/1/1"
            ],
            [
                "addValue",
                "1",
                "2/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "2/1/1"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/2/0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/2/0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/2/0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/0/1/1"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "num_swaps",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "num_swaps"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                3
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "number of swaps made:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "num_swaps",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                5
            ],
            [
                "addValue",
                "-3",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "0",
                "0/2/-1",
                "int"
            ],
            [
                "addValue",
                "19",
                "0/3/-1",
                "int"
            ],
            [
                "addValue",
                "25",
                "0/4/-1",
                "int"
            ],
            [
                "addValue",
                "53",
                "0/5/-1",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "data"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The sorted list is",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "bubble_sort",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "data",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def bubble_sort(lst):",
            "    num_swaps = 0",
            "    for item in range(len(lst)-1, 0, -1):",
            "        for current in range(item):",
            "            if (lst[current] > lst[current+1]):",
            "                temp = lst[current]",
            "                lst[current] = lst[current+1]",
            "                lst[current+1] = temp",
            "                num_swaps +=1",
            "    print(\"number of swaps made:\" , num_swaps)",
            "    return lst",
            "data = [-3, 0, 19, 25, 53]",
            "print(\"The sorted list is\", bubble_sort(data))"
        ]
    },
    "bubble_sort_best": {
        "settings": {
            "code": "left",
            "heapHeight": "80",
            "stackHeight": "150",
            "width": "800"
        },
        "init": [
            [
                "createFunction",
                "bubble_sort",
                "bubble_sort(lst)",
                1,
                "@l1"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "range",
                "range(a, b, c)",
                3,
                "-1"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "lst"
                ]
            ],
            [
                "assignParameters",
                [
                    "lst"
                ]
            ],
            [
                "setLine",
                2
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "num_swaps"
            ],
            [
                "setLine",
                3
            ],
            [
                "addFunction",
                "range",
                "0",
                3
            ],
            [
                "addFunction",
                "len",
                "0/0/0",
                1
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/0/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "-1",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_iterate",
                "i1",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "item"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "item",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i2",
                "-1"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i2",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i2",
                "0"
            ],
            [
                "assign",
                "current"
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "lst",
                "2"
            ],
            [
                "addOperator",
                "[ ]",
                "3"
            ],
            [
                "addValueFromVariable",
                "current",
                "2/1/0"
            ],
            [
                "addOperator",
                "+",
                "2/1/1"
            ],
            [
                "addValue",
                "1",
                "2/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "2/1/1"
            ],
            [
                "getValueAtIndex",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l11",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                6
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "assign",
                "temp"
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "lst",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/2/0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/2/0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/2/0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/0/1/1"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                8
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "current",
                "0/1/0"
            ],
            [
                "addOperator",
                "+",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "addValueFromVariable",
                "temp",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromVariable",
                "num_swaps",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "num_swaps"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "goto",
                "@l13"
            ],
            [
                "_label",
                "l13"
            ],
            [
                "setLine",
                4
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                3
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                10
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "number of swaps made:",
                "0/0/0",
                "str"
            ],
            [
                "addValueFromVariable",
                "num_swaps",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "lst",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                12
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                5
            ],
            [
                "addValue",
                "53",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "25",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "19",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "0",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "-3",
                "0/5/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "data"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                2
            ],
            [
                "addValue",
                "The sorted list is",
                "0/0/0",
                "str"
            ],
            [
                "addFunction",
                "bubble_sort",
                "0/1/0",
                1
            ],
            [
                "addValueFromVariable",
                "data",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ],
        "lines": [
            "def bubble_sort(lst):",
            "    num_swaps = 0",
            "    for item in range(len(lst)-1, 0, -1):",
            "        for current in range(item):",
            "            if (lst[current] > lst[current+1]):",
            "                temp = lst[current]",
            "                lst[current] = lst[current+1]",
            "                lst[current+1] = temp",
            "                num_swaps +=1",
            "    print('number of swaps made:', num_swaps)",
            "    return lst",
            "data = [53, 25, 19, 0, -3]",
            "print(\"The sorted list is\", bubble_sort(data))"
        ]
    },
    "list_pop": {
        "lines": [
            "my_list=[1,2,3,4,5]\r",
            "for i in range(2):\r",
            "    my_list.pop(0)\r",
            "print(my_list)"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "range",
                "range(a)",
                1,
                "-1"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "pop",
                "pop(index)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                5
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/4/0",
                "int"
            ],
            [
                "addValue",
                "5",
                "0/5/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "my_list"
            ],
            [
                "setLine",
                2
            ],
            [
                "addFunction",
                "range",
                "0",
                1
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "_createIterator",
                "i1",
                "-1"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_iterate",
                "i1",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "i"
            ],
            [
                "setLine",
                3
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0"
            ],
            [
                "addFunction",
                "pop",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                2
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                4
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "my_list",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "queue": {
        "lines": [
            "class Queue:\r",
            "    def __init__(self):\r",
            "        self.items = [1,2]\r",
            "    def push(self, item):\r",
            "        self.items.append(item)\r",
            "    def pop(self):\r",
            "        return self.items.pop(0)\r",
            "    def show(self):\r",
            "        return self.items\r",
            "s = Queue()\r",
            "s.push(5)\r",
            "s.push(6)\r",
            "print(s.pop())\r",
            "print(s.show())"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Queue"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                0,
                "@l1",
                "Queue"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "push",
                "push(self, item)",
                1,
                "@l3",
                "Queue"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "append",
                "append(item)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "pop",
                "pop(self)",
                0,
                "@l5",
                "Queue"
            ],
            [
                "createFunction",
                "pop",
                "pop(index)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "show",
                "show(self)",
                0,
                "@l7",
                "Queue"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addCollectionInitializer",
                "-1",
                "0",
                2
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assignField",
                "items",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "pop",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                10
            ],
            [
                "createInstance",
                "Queue"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                11
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "6",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                13
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "pop",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                14
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "show",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "stack_lifo1": {
        "lines": [
            "class Stack:\r",
            "   def __init__(self):\r",
            "        self.items=[]\r",
            "   def push (self, item):\r",
            "       self.items.append(item)\r",
            "   def pop(self):\r",
            "       self.items.pop()\r",
            "   def show(self):        \r",
            "       return self.items\r",
            " \r",
            "s = Stack()\r",
            "s.push(\"lily\")\r",
            "s.push(\"rose\")\r",
            "s.push(\"tulip\")\r",
            "s.pop()\r",
            "print(s.show())"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Stack"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                0,
                "@l1",
                "Stack"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "push",
                "push(self, item)",
                1,
                "@l3",
                "Stack"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "append",
                "append(item)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "pop",
                "pop(self)",
                0,
                "@l5",
                "Stack"
            ],
            [
                "createFunction",
                "pop",
                "pop(index)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "show",
                "show(self)",
                0,
                "@l7",
                "Stack"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assignField",
                "items",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "append",
                "1",
                1,
                "?"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "pop",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                11
            ],
            [
                "createInstance",
                "Stack"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                12
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "lily",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "rose",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "tulip",
                "0/1/0",
                "str"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                15
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "pop",
                "1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                16
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "show",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "stack_lifo2": {
        "lines": [
            "class Stack:\r",
            "    def __init__(self):\r",
            "        self.items = []\r",
            "    def push(self, item):\r",
            "        self.items.insert(0,item)\r",
            "    def pop(self):\r",
            "        return self.items.pop(0)\r",
            "    def peek(self):\r",
            "        return self.items[len(self.items) - 1]\r",
            "    def size(self):\r",
            "        return len(self.items)\r",
            "s = Stack()\r",
            "s.push(1)\r",
            "s.push(2)\r",
            "print(s.peek())\r",
            "print(s.pop())\r",
            "print(s.size())"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 250,
            "width": 800
        },
        "init": [
            [
                "createClass",
                "Stack"
            ],
            [
                "createFunction",
                "__init__",
                "__init__(self)",
                0,
                "@l1",
                "Stack"
            ],
            [
                "setLine",
                1
            ],
            [
                "createFunction",
                "push",
                "push(self, item)",
                1,
                "@l3",
                "Stack"
            ],
            [
                "createClass",
                "list"
            ],
            [
                "createFunction",
                "insert",
                "insert(index, elem)",
                "2",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "pop",
                "pop(self)",
                0,
                "@l5",
                "Stack"
            ],
            [
                "createFunction",
                "pop",
                "pop(index)",
                "1",
                "-1",
                "list"
            ],
            [
                "createFunction",
                "peek",
                "peek(self)",
                0,
                "@l7",
                "Stack"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "len",
                "len(a)",
                1,
                "-1"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "size",
                "size(self)",
                0,
                "@l9",
                "Stack"
            ],
            [
                "createFunction",
                "print",
                "print(a, ...)",
                -1,
                "-1"
            ],
            [
                "createFrame"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                3
            ],
            [
                "createInstance",
                "list"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assignField",
                "items",
                "@self"
            ],
            [
                "clearEvaluationArea_",
                "self",
                "0"
            ],
            [
                "addValueFromVariable",
                "self",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "assignParameters",
                [
                    "self",
                    "item"
                ]
            ],
            [
                "setLine",
                5
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "insert",
                "1",
                2,
                "?"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValueFromVariable",
                "item",
                "0/2/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "clearEvaluationArea"
            ],
            [
                "addValue",
                "None",
                "0",
                "NoneType"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                7
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addFunction",
                "pop",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                9
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0"
            ],
            [
                "addOperator",
                "[ ]",
                "1"
            ],
            [
                "addFunction",
                "len",
                "0/1/0",
                1
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0/1/0/0/0"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "addOperator",
                "-",
                "0/1/1"
            ],
            [
                "addValue",
                "1",
                "0/1/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/1/1"
            ],
            [
                "getValueAtIndex",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "goto",
                "@l10"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                1
            ],
            [
                "createParameterVariables",
                [
                    "self"
                ]
            ],
            [
                "assignParameters",
                [
                    "self"
                ]
            ],
            [
                "setLine",
                11
            ],
            [
                "addFunction",
                "len",
                "0",
                1
            ],
            [
                "addValueFromField",
                "items",
                "@self",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                12
            ],
            [
                "createInstance",
                "Stack"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "__init__",
                "0",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                13
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                14
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "push",
                "1",
                1,
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                15
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "peek",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                16
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "pop",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                17
            ],
            [
                "addFunction",
                "print",
                "0",
                1
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "size",
                "0/0/1",
                0,
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_demo": {
        "lines": [
            "// This is a demo for testing the interfaces",
            "// between Aalto and Pittsburgh. If everything",
            "// works, the seen code lines should be submitted",
            "// to Pittsburgh's user modeling server.",
            "",
            "",
            "public class JSVEEDemo {",
            "",
            "  public static void main(String[] args) {",
            "    int a = 2 + 3;",
            "    int b = a * 2;",
            "    int c = a + b * 4;",
            "    System.out.println(\"The result is \" + c);",
            "  }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "10"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "a"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "createVariable",
                "b"
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "createVariable",
                "c"
            ],
            [
                "addValueFromVariable",
                "a",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValue",
                "4",
                "4",
                "int"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "c"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "The result is ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "c",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch01_s05_HelloPrinter": {
        "explanations": {
            "line4": "Displays a greeting in the console"
        },
        "lines": [
            "public class HelloPrinter {",
            "",
            "   public static void main(String[] args) {",
            "      System.out.println(\"Hello, World!\");",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Hello, World!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch01_s05_PrintTester": {
        "explanations": {
            "line4": "Prints 7",
            "line6": "Prints \"Hello World!\" in two lines",
            "line7": "Prints \"Hello World!\" in two lines",
            "line9": "Prints 00 but doesn't start a new line",
            "line10": "Prints 7 and starts a new line"
        },
        "lines": [
            "public class PrintTester {",
            "",
            "   public static void main(String[] args) {",
            "      System.out.println(3 + 4);",
            "",
            "      System.out.println(\"Hello\");",
            "      System.out.println(\"World!\");",
            "",
            "      System.out.print(\"00\");",
            "      System.out.println(3 + 4);",
            "",
            "      System.out.println(\"Goodbye\");",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "4",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Hello",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "World!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "00",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "4",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Goodbye",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s03_VariableDemo": {
        "explanations": {
            "line4": "Declares width and initializes it with 10",
            "line8": "Changes width to 20",
            "line13": "The right hand side can be an expression",
            "line17": "The same variable can occur on both sides"
        },
        "lines": [
            "public class VariableDemo {",
            "",
            "   public static void main(String[] args) {",
            "      int width = 10;",
            "      System.out.print(\"width: \");",
            "      System.out.println(width);",
            "",
            "      width = 20;",
            "      System.out.print(\"width: \");",
            "      System.out.println(width);",
            "",
            "      int height = 20;",
            "      width = height + 10;",
            "      System.out.print(\"width: \");",
            "      System.out.println(width);",
            "",
            "      width = width + 10;",
            "      System.out.print(\"width: \");",
            "      System.out.println(width);",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "width"
            ],
            [
                "addValue",
                "10",
                "0",
                "int"
            ],
            [
                "assign",
                "width"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "width: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValue",
                "20",
                "0",
                "int"
            ],
            [
                "assign",
                "width"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "width: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "createVariable",
                "height"
            ],
            [
                "addValue",
                "20",
                "0",
                "int"
            ],
            [
                "assign",
                "height"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromVariable",
                "height",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "10",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "width"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "width: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addValueFromVariable",
                "width",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "10",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "width"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "width: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s05_MethodDemo": {
        "explanations": {
            "line5": "greeting is the argument in this call to the println method",
            "line7": "The length method returns a value",
            "line12": "You can use the return value of one method as an argument of another method",
            "line15": "The replace method has two arguments"
        },
        "lines": [
            "public class MethodDemo {",
            "",
            "   public static void main(String[] args) {",
            "      String greeting = \"Hello, World!\";",
            "      System.out.println(greeting);",
            "",
            "      int numberOfCharacters = greeting.length();",
            "      System.out.print(\"numberOfCharacters: \");",
            "      System.out.println(numberOfCharacters);",
            "",
            "      System.out.print(\"greeting.length(): \");",
            "      System.out.println(greeting.length());",
            "",
            "      String river = \"Mississippi\";",
            "      river = river.replace(\"issipp\", \"our\");",
            "      System.out.print(\"river: \");",
            "      System.out.println(river);",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 200,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "String"
            ],
            [
                "createFunction",
                "length",
                "length()",
                "1",
                "-1",
                "String"
            ],
            [
                "createFunction",
                "replace",
                "replace(old, new)",
                "2",
                "-1",
                "String"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "greeting"
            ],
            [
                "addValue",
                "Hello, World!",
                "0",
                "String"
            ],
            [
                "assign",
                "greeting"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "greeting",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "numberOfCharacters"
            ],
            [
                "addValueFromVariable",
                "greeting",
                "0"
            ],
            [
                "addFunction",
                "length",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "numberOfCharacters"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "numberOfCharacters: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numberOfCharacters",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "greeting.length(): ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "greeting",
                "0/0/0"
            ],
            [
                "addFunction",
                "length",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "createVariable",
                "river"
            ],
            [
                "addValue",
                "Mississippi",
                "0",
                "String"
            ],
            [
                "assign",
                "river"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValueFromVariable",
                "river",
                "0"
            ],
            [
                "addFunction",
                "replace",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "issipp",
                "0/1/0",
                "String"
            ],
            [
                "addValue",
                "our",
                "0/2/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "river"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "river: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "river",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s06_ConstructorDemo": {
        "explanations": {
            "line6": "Constructs and prints a rectangle",
            "line8": "Constructs a rectangle and saves it in a variable",
            "line12": "The constructor with no arguments"
        },
        "lines": [
            "import java.awt.Rectangle;",
            "",
            "public class ConstructorDemo {",
            "",
            "   public static void main(String args[]) {",
            "      System.out.println(new Rectangle(5, 10, 20, 30));",
            "",
            "      Rectangle box = new Rectangle(5, 10, 20, 30);",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "",
            "      box = new Rectangle();",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "top-left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "Rectangle"
            ],
            [
                "createFunction",
                "Rectangle",
                "Rectangle()",
                "1",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "Rectangle",
                "Rectangle(x, y, width, height)",
                "4",
                "-1",
                "Rectangle"
            ],
            [
                "setLine",
                "6"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0/0/0"
            ],
            [
                "addFunction",
                "Rectangle",
                "0/0/1",
                "4",
                "?"
            ],
            [
                "addValue",
                "5",
                "0/0/0/1/0",
                "int"
            ],
            [
                "addValue",
                "10",
                "0/0/0/2/0",
                "int"
            ],
            [
                "addValue",
                "20",
                "0/0/0/3/0",
                "int"
            ],
            [
                "addValue",
                "30",
                "0/0/0/4/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createVariable",
                "box"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference"
            ],
            [
                "addFunction",
                "Rectangle",
                "1",
                "4",
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "10",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "20",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "30",
                "0/4/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "box"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference"
            ],
            [
                "addFunction",
                "Rectangle",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "box"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s07_AccessorMutatorDemo": {
        "explanations": {
            "line10": "getWidth is an accessor method",
            "line14": "Calling an accessor doesn't change the object",
            "line15": "Calling an accessor doesn't change the object",
            "line17": "translate is a mutator method",
            "line19": "Calling a mutator changes the object",
            "line20": "Calling a mutator changes the object"
        },
        "lines": [
            "import java.awt.Rectangle;",
            "",
            "public class AccessorMutatorDemo {",
            "",
            "   public static void main(String[] args) {",
            "      Rectangle box = new Rectangle(5, 10, 20, 30);",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "",
            "      double width = box.getWidth();",
            "      System.out.print(\"width: \");",
            "      System.out.println(width);",
            "",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "",
            "      box.translate(15, 25);",
            "",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 950
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "Rectangle"
            ],
            [
                "createFunction",
                "Rectangle",
                "Rectangle(x, y, width, height)",
                "4",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "getWidth",
                "getWidth()",
                "1",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "translate",
                "translate(dx, dy)",
                "2",
                "-1",
                "Rectangle"
            ],
            [
                "setLine",
                "6"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "box"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "Rectangle",
                "1",
                "4",
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "10",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "20",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "30",
                "0/4/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "box"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "createVariable",
                "width"
            ],
            [
                "addValueFromVariable",
                "box",
                "0"
            ],
            [
                "addFunction",
                "getWidth",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "width"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "width: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addValueFromVariable",
                "box",
                "0"
            ],
            [
                "addFunction",
                "translate",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "15",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "25",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s09_MoveTester": {
        "explanations": {
            "line8": "Move the rectangle",
            "line10": "Print information about the moved rectangle"
        },
        "lines": [
            "import java.awt.Rectangle;",
            "",
            "public class MoveTester {",
            "",
            "   public static void main(String[] args) {",
            "      Rectangle box = new Rectangle(5, 10, 20, 30);",
            "",
            "      box.translate(15, 25);",
            "",
            "      System.out.print(\"x: \");",
            "      System.out.println(box.getX());",
            "      System.out.println(\"Expected: 20\");",
            "",
            "      System.out.print(\"y: \");",
            "      System.out.println(box.getY());",
            "      System.out.println(\"Expected: 35\");",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "top-left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "Rectangle"
            ],
            [
                "createFunction",
                "Rectangle",
                "Rectangle(x, y, width, height)",
                "4",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "getX",
                "getX()",
                "1",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "getY",
                "getY()",
                "1",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "translate",
                "translate(dx, dy)",
                "2",
                "-1",
                "Rectangle"
            ],
            [
                "setLine",
                "6"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "box"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "Rectangle",
                "1",
                "4",
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "10",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "20",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "30",
                "0/4/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "box"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "box",
                "0"
            ],
            [
                "addFunction",
                "translate",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "15",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "25",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "x: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "addFunction",
                "getX",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Expected: 20",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "y: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "addFunction",
                "getY",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Expected: 35",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch02_s10_CopyDemo": {
        "explanations": {
            "line6": "Declare two object variables and copy the first into the second",
            "line7": "Declare two object variables and copy the first into the second",
            "line9": "Both variables refer to the same object",
            "line10": "Both variables refer to the same object",
            "line11": "Both variables refer to the same object",
            "line12": "Both variables refer to the same object",
            "line17": "Both variables refer to the mutated object",
            "line18": "Both variables refer to the mutated object",
            "line19": "Both variables refer to the mutated object",
            "line20": "Both variables refer to the mutated object",
            "line22": "Declare two number variables and copy the first into the second",
            "line23": "Declare two number variables and copy the first into the second",
            "line33": "Only the second number changes",
            "line34": "Only the second number changes",
            "line35": "Only the second number changes",
            "line36": "Only the second number changes"
        },
        "lines": [
            "import java.awt.Rectangle;",
            "",
            "public class CopyDemo {",
            "",
            "   public static void main(String[] args) {",
            "      Rectangle box = new Rectangle(5, 10, 20, 30);",
            "      Rectangle box2 = box;",
            "",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "      System.out.print(\"box2: \");",
            "      System.out.println(box2);",
            "",
            "      System.out.println(\"Mutating box2\");",
            "      box2.translate(15, 25);",
            "",
            "      System.out.print(\"box: \");",
            "      System.out.println(box);",
            "      System.out.print(\"box2: \");",
            "      System.out.println(box2);",
            "",
            "      int luckyNumber = 13;",
            "      int luckyNumber2 = luckyNumber;",
            "",
            "      System.out.print(\"luckyNumber: \");",
            "      System.out.println(luckyNumber);",
            "      System.out.print(\"luckyNumber2: \");",
            "      System.out.println(luckyNumber2);",
            "",
            "      System.out.println(\"Changing luckyNumber2\");",
            "      luckyNumber2 = 12;",
            "",
            "      System.out.print(\"luckyNumber: \");",
            "      System.out.println(luckyNumber);",
            "      System.out.print(\"luckyNumber2: \");",
            "      System.out.println(luckyNumber2);",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 950
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "Rectangle"
            ],
            [
                "createFunction",
                "Rectangle",
                "Rectangle(x, y, width, height)",
                "4",
                "-1",
                "Rectangle"
            ],
            [
                "createFunction",
                "translate",
                "translate(dx, dy)",
                "2",
                "-1",
                "Rectangle"
            ],
            [
                "setLine",
                "6"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "box"
            ],
            [
                "createInstance",
                "Rectangle",
                [
                    "x",
                    "y",
                    "width",
                    "height"
                ],
                [
                    "0",
                    "0",
                    "0",
                    "0"
                ],
                [
                    "int",
                    "int",
                    "int",
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "Rectangle",
                "1",
                "4",
                "?"
            ],
            [
                "addValue",
                "5",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "10",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "20",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "30",
                "0/4/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "box"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "box2"
            ],
            [
                "addValueFromVariable",
                "box",
                "0"
            ],
            [
                "assign",
                "box2"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box2: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Mutating box2",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValueFromVariable",
                "box2",
                "0"
            ],
            [
                "addFunction",
                "translate",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "15",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "25",
                "0/2/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "box2: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "box2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "22"
            ],
            [
                "createVariable",
                "luckyNumber"
            ],
            [
                "addValue",
                "13",
                "0",
                "int"
            ],
            [
                "assign",
                "luckyNumber"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "createVariable",
                "luckyNumber2"
            ],
            [
                "addValueFromVariable",
                "luckyNumber",
                "0"
            ],
            [
                "assign",
                "luckyNumber2"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "luckyNumber: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "luckyNumber",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "27"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "luckyNumber2: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "28"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "luckyNumber2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Changing luckyNumber2",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "31"
            ],
            [
                "addValue",
                "12",
                "0",
                "int"
            ],
            [
                "assign",
                "luckyNumber2"
            ],
            [
                "setLine",
                "33"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "luckyNumber: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "34"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "luckyNumber",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "35"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "luckyNumber2: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "36"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "luckyNumber2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_BJ4_ch03_s01_CounterDemo": {
        "lines": [
            "public class CounterDemo {",
            "",
            "   public static void main(String[] args) {",
            "      Counter tally = new Counter();",
            "      tally.click();",
            "      tally.click();",
            "      int result = tally.getValue();",
            "      System.out.print(\"result: \");",
            "      System.out.println(result);",
            "   }",
            "",
            "}",
            "",
            "",
            "public class Counter {",
            "",
            "   private int value;",
            "",
            "   public int getValue() {",
            "      return value;",
            "   }",
            "",
            "",
            "   public void click() {",
            "      value = value + 1;",
            "   }",
            "",
            "",
            "   public void reset() {",
            "      value = 0;",
            "   }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Counter"
            ],
            [
                "createFunction",
                "getValue",
                "getValue()",
                "1",
                "@l2",
                "Counter"
            ],
            [
                "createFunction",
                "click",
                "click()",
                "1",
                "@l3",
                "Counter"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "reset",
                "reset()",
                "1",
                "@l4",
                "Counter"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "tally"
            ],
            [
                "createInstance",
                "Counter",
                [
                    "value"
                ],
                [
                    "0"
                ],
                [
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "tally"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "tally",
                "0"
            ],
            [
                "addFunction",
                "click",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "tally",
                "0"
            ],
            [
                "addFunction",
                "click",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "result"
            ],
            [
                "addValueFromVariable",
                "tally",
                "0"
            ],
            [
                "addFunction",
                "getValue",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "result: ",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "19"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addValueFromField",
                "value",
                "@this",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "24"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addValueFromField",
                "value",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "value",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine_",
                "29"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "value",
                "@this"
            ],
            [
                "returnVoid"
            ]
        ]
    },
    "ae_BJ4_ch03_s06_BankAccountTester": {
        "lines": [
            "public class BankAccountTester {",
            "",
            "   public static void main(String[] args) {",
            "      BankAccount harrysChecking = new BankAccount();",
            "      harrysChecking.deposit(2000);",
            "      harrysChecking.withdraw(500);",
            "      System.out.println(harrysChecking.getBalance());",
            "      System.out.println(\"Expected: 1500\");",
            "   }",
            "",
            "}",
            "",
            "public class BankAccount {",
            "   private int balance;",
            "",
            "   public BankAccount() {",
            "      balance = 0;",
            "   }",
            "",
            "   public BankAccount(double initialBalance) {",
            "      balance = initialBalance;",
            "   }",
            "",
            "   public void deposit(double amount) {",
            "      balance = balance + amount;",
            "   }",
            "",
            "   public void withdraw(double amount) {",
            "      balance = balance - amount;",
            "   }",
            "",
            "   public int getBalance() {",
            "      return balance;",
            "   }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 950
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "BankAccount"
            ],
            [
                "createFunction",
                "BankAccount",
                "BankAccount()",
                "1",
                "@l2",
                "BankAccount"
            ],
            [
                "createFunction",
                "BankAccount",
                "BankAccount(initialBalance)",
                "1",
                "@l3",
                "BankAccount"
            ],
            [
                "createFunction",
                "deposit",
                "deposit(amount)",
                "1",
                "@l4",
                "BankAccount"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "withdraw",
                "withdraw(amount)",
                "1",
                "@l5",
                "BankAccount"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "getBalance",
                "getBalance()",
                "1",
                "@l6",
                "BankAccount"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "harrysChecking"
            ],
            [
                "createInstance",
                "BankAccount",
                [
                    "balance"
                ],
                [
                    "0"
                ],
                [
                    "int"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "BankAccount",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "harrysChecking"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "harrysChecking",
                "0"
            ],
            [
                "addFunction",
                "deposit",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "2000",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "harrysChecking",
                "0"
            ],
            [
                "addFunction",
                "withdraw",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "500",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "harrysChecking",
                "0/0/0"
            ],
            [
                "addFunction",
                "getBalance",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Expected: 1500",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "16"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "balance",
                "@this"
            ],
            [
                "addValueFromVariable",
                "this"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "20"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "initialBalance"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "initialBalance"
                ]
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValueFromVariable",
                "initialBalance",
                "0"
            ],
            [
                "assignField",
                "balance",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "addValueFromVariable",
                "this"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine_",
                "24"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addValueFromField",
                "balance",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "balance",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine_",
                "28"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "setLine",
                "29"
            ],
            [
                "addValueFromField",
                "balance",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "balance",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine_",
                "32"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "33"
            ],
            [
                "addValueFromField",
                "balance",
                "@this",
                "0"
            ],
            [
                "returnValue"
            ]
        ]
    },
    "ae_BJ4_ch03_s06_CashRegisterTester": {
        "lines": [
            "public class CashRegisterTester {",
            "",
            "   public static void main(String[] args) {",
            "      CashRegister register = new CashRegister();",
            "",
            "      register.recordPurchase(29.50);",
            "      register.recordPurchase(9.25);",
            "      register.receivePayment(50.0);",
            "",
            "      double change = register.giveChange();",
            "",
            "      System.out.println(change);",
            "      System.out.println(\"Expected: 11.25\");",
            "   }",
            "",
            "}",
            "",
            "public class CashRegister {",
            "",
            "   private double purchase;",
            "   private double payment;",
            "",
            "   public void recordPurchase(double amount) {",
            "      purchase = purchase + amount;",
            "   }",
            "",
            "   public void receivePayment(double amount) {",
            "      payment = payment + amount;",
            "   }",
            "",
            "   public double giveChange() {",
            "      double change = payment - purchase;",
            "      purchase = 0.0;",
            "      payment = 0.0;",
            "      return change;",
            "   }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "CashRegister"
            ],
            [
                "createFunction",
                "recordPurchase",
                "recordPurchase(amount)",
                "1",
                "@l2",
                "CashRegister"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "receivePayment",
                "receivePayment(amount)",
                "1",
                "@l3",
                "CashRegister"
            ],
            [
                "createFunction",
                "giveChange",
                "giveChange()",
                "1",
                "@l4",
                "CashRegister"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "register"
            ],
            [
                "createInstance",
                "CashRegister",
                [
                    "purchase",
                    "payment"
                ],
                [
                    "0.0",
                    "0.0"
                ],
                [
                    "double",
                    "double"
                ]
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "register"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "register",
                "0"
            ],
            [
                "addFunction",
                "recordPurchase",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "29.50",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "register",
                "0"
            ],
            [
                "addFunction",
                "recordPurchase",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "9.25",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "register",
                "0"
            ],
            [
                "addFunction",
                "receivePayment",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "50.0",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "createVariable",
                "change"
            ],
            [
                "addValueFromVariable",
                "register",
                "0"
            ],
            [
                "addFunction",
                "giveChange",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "change"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "change",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Expected: 11.25",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "23"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValueFromField",
                "purchase",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "purchase",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "27"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "amount"
                ]
            ],
            [
                "setLine",
                "28"
            ],
            [
                "addValueFromField",
                "payment",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "amount",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "payment",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine_",
                "31"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "32"
            ],
            [
                "createVariable",
                "change"
            ],
            [
                "addValueFromField",
                "payment",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValueFromField",
                "purchase",
                "@this",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "change"
            ],
            [
                "setLine",
                "33"
            ],
            [
                "addValue",
                "0.0",
                "0",
                "double"
            ],
            [
                "assignField",
                "purchase",
                "@this"
            ],
            [
                "setLine",
                "34"
            ],
            [
                "addValue",
                "0.0",
                "0",
                "double"
            ],
            [
                "assignField",
                "payment",
                "@this"
            ],
            [
                "setLine",
                "35"
            ],
            [
                "addValueFromVariable",
                "change",
                "0"
            ],
            [
                "returnValue"
            ]
        ]
    },
    "ae_JavaTutorial_4_1_3": {
        "lines": [
            "public class MainClass{",
            "     ",
            "  public static void main(String[] arg){",
            "",
            "    long a = 999999999L, b = 100000000L;",
            "    int c = 0, d = 0;",
            "",
            "    System.out.println(a);",
            "    System.out.println(b);",
            "    System.out.println(c);",
            "    System.out.println(d);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "999999999",
                "long"
            ],
            [
                "createValue",
                "100000000",
                "long"
            ],
            [
                "createValue",
                "0",
                "int"
            ],
            [
                "setLine",
                "5"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "a"
            ],
            [
                "addValue",
                "999999999"
            ],
            [
                "assign",
                "a"
            ],
            [
                "createVariable",
                "b"
            ],
            [
                "addValue",
                "100000000"
            ],
            [
                "assign",
                "b"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "c"
            ],
            [
                "addValue",
                "0"
            ],
            [
                "assign",
                "c"
            ],
            [
                "createVariable",
                "d"
            ],
            [
                "addValue",
                "0"
            ],
            [
                "assign",
                "d"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "a",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "b",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "c",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "d",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_arithmetic_v2": {
        "lines": [
            "public class ArithmeticDemo {",
            "  public static void main (String[] args){",
            "",
            "    int result = 1 + 2;",
            "    System.out.println(result);",
            "",
            "    result = result - 1;",
            "    System.out.println(result);",
            "",
            "    result = result * 2;",
            "    System.out.println(result);",
            "    ",
            "    result = result / 2;",
            "    System.out.println(result);",
            "",
            "    result = result + 8;",
            "    result = result % 3;",
            "    System.out.println(result);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "1",
                "int"
            ],
            [
                "createValue",
                "2",
                "int"
            ],
            [
                "createValue",
                "3",
                "int"
            ],
            [
                "createValue",
                "8",
                "int"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "result"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "result"
            ],
            [
                "addOperator",
                "-"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "result"
            ],
            [
                "addOperator",
                "*"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromVariable",
                "result"
            ],
            [
                "addOperator",
                "/"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addValueFromVariable",
                "result"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "8"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addValueFromVariable",
                "result"
            ],
            [
                "addOperator",
                "%"
            ],
            [
                "addValue",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_StringExample_v2": {
        "lines": [
            "public class StringExample {",
            "  public static void main(String[] a) {",
            "",
            "    String s = null;",
            "    String s1 = \"1\" + \"2\";",
            "    String s2 = s1 + \" = 3\";",
            "",
            "    System.out.println(s);",
            "    System.out.println(s1);",
            "    System.out.println(s2);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "null",
                "null"
            ],
            [
                "createValue",
                "1",
                "String"
            ],
            [
                "createValue",
                "2",
                "String"
            ],
            [
                "createValue",
                " = 3",
                "String"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "s"
            ],
            [
                "addValue",
                "null"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "s1"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "s1"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "s2"
            ],
            [
                "addValueFromVariable",
                "s1"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                " = 3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "s2"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "s1",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "s2",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_JavaTutorial_4_2_7": {
        "lines": [
            "public class MainClass {",
            "  public static void main(String[] arg) {",
            "",
            "    int a = 2;",
            "    if (a == 0) {",
            "      System.out.println(\"in the block\");",
            "      if (a == 2) {",
            "        System.out.println(\"a is 2\");",
            "      } else {",
            "        System.out.println(\"a is not 2\");",
            "      }",
            "    } else {",
            "      System.out.println(\"a is not 0\");",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "a is not 0",
                "String"
            ],
            [
                "createValue",
                "2",
                "int"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createValue",
                "0",
                "int"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "a"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "assign",
                "a"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "a"
            ],
            [
                "addOperator",
                "=="
            ],
            [
                "addValue",
                "0"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "1",
                "10"
            ],
            [
                "jumpFalse",
                "13"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "a is not 0",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_decisions1_v2": {
        "lines": [
            "public class IfElseIfDemo {",
            "  public static void main(String[] args) {",
            "",
            "    int score = 76;",
            "    char grade;",
            "",
            "    if (score >= 90) {",
            "      grade = 'A';",
            "    } else if (score >= 80) {",
            "      grade = 'B';",
            "    } else if (score >= 70) {",
            "      grade = 'C';",
            "    } else if (score >= 60) {",
            "      grade = 'D';",
            "    } else {",
            "      grade = 'F';",
            "    }",
            "    System.out.println(\"Grade = \" + grade);",
            "    ",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "Grade = ",
                "String"
            ],
            [
                "createValue",
                "76",
                "int"
            ],
            [
                "createValue",
                "90",
                "int"
            ],
            [
                "createValue",
                "80",
                "int"
            ],
            [
                "createValue",
                "70",
                "int"
            ],
            [
                "createValue",
                "C",
                "char"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                ">=",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "score"
            ],
            [
                "addValue",
                "76"
            ],
            [
                "assign",
                "score"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "grade"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "score"
            ],
            [
                "addOperator",
                ">="
            ],
            [
                "addValue",
                "90"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "1",
                "12"
            ],
            [
                "jumpFalse",
                "9"
            ],
            [
                "addValueFromVariable",
                "score"
            ],
            [
                "addOperator",
                ">="
            ],
            [
                "addValue",
                "80"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "1",
                "18"
            ],
            [
                "jumpFalse",
                "11"
            ],
            [
                "addValueFromVariable",
                "score"
            ],
            [
                "addOperator",
                ">="
            ],
            [
                "addValue",
                "70"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "24",
                "18"
            ],
            [
                "jumpTrue",
                "12"
            ],
            [
                "addValue",
                "C"
            ],
            [
                "assign",
                "grade"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Grade = ",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "grade",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_relational_operators_v2": {
        "lines": [
            "public class RelationalOperators {",
            "  public static void main(String[] args) {",
            "    ",
            "    int i = 3, j = 4;",
            "    boolean flag;",
            "    ",
            "    flag = 5 < 6;",
            "    flag = (i == j);",
            "    flag = (j + 2) <= 6;",
            "    flag = (j + 2) <= 6;",
            "    ",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createValue",
                "2",
                "int"
            ],
            [
                "createValue",
                "3",
                "int"
            ],
            [
                "createValue",
                "4",
                "int"
            ],
            [
                "createValue",
                "5",
                "int"
            ],
            [
                "createValue",
                "6",
                "int"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "3"
            ],
            [
                "assign",
                "i"
            ],
            [
                "createVariable",
                "j"
            ],
            [
                "addValue",
                "4"
            ],
            [
                "assign",
                "j"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "flag"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValue",
                "5"
            ],
            [
                "addOperator",
                "<"
            ],
            [
                "addValue",
                "6"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "flag"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "i"
            ],
            [
                "addOperator",
                "=="
            ],
            [
                "addValueFromVariable",
                "j"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "flag"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "j"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "<="
            ],
            [
                "addValue",
                "6"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "flag"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "j"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "<="
            ],
            [
                "addValue",
                "6"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "flag"
            ]
        ]
    },
    "ae_comparison_operators_v2": {
        "lines": [
            "public class ComparisonDemo {",
            "  public static void main(String[] args){",
            "  ",
            "    int value1 = 1;",
            "    int value2 = 2;",
            "  ",
            "    if (value1 == value2) System.out.println(\"equal\");",
            "    if (value1 != value2) System.out.println(\"not equal\");",
            "    if (value1 > value2) System.out.println(\"greater than\");",
            "    if (value1 < value2) System.out.println(\"less than\");",
            "    if (value1 <= value2) System.out.println(\"less than or equal\");",
            "  ",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "1",
                "int"
            ],
            [
                "createValue",
                "2",
                "int"
            ],
            [
                "createValue",
                "not equal",
                "String"
            ],
            [
                "createValue",
                "less than",
                "String"
            ],
            [
                "createValue",
                "less than or equal",
                "String"
            ],
            [
                "createOperator",
                "!=",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "value1"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "assign",
                "value1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "value2"
            ],
            [
                "addValue",
                "2"
            ],
            [
                "assign",
                "value2"
            ],
            [
                "setLine",
                "7",
                "4:24"
            ],
            [
                "addValueFromVariable",
                "value1"
            ],
            [
                "addOperator",
                "=="
            ],
            [
                "addValueFromVariable",
                "value2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "setLine",
                "8",
                "4:24"
            ],
            [
                "addValueFromVariable",
                "value1"
            ],
            [
                "addOperator",
                "!="
            ],
            [
                "addValueFromVariable",
                "value2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_clearEvaluationArea",
                ""
            ],
            [
                "_setLine",
                "8",
                "26:90"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "not equal",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9",
                "4:23"
            ],
            [
                "addValueFromVariable",
                "value1"
            ],
            [
                "addOperator",
                ">"
            ],
            [
                "addValueFromVariable",
                "value2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "setLine",
                "10",
                "4:23"
            ],
            [
                "addValueFromVariable",
                "value1"
            ],
            [
                "addOperator",
                "<"
            ],
            [
                "addValueFromVariable",
                "value2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_clearEvaluationArea",
                ""
            ],
            [
                "_setLine",
                "10",
                "25:90"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "less than",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11",
                "4:24"
            ],
            [
                "addValueFromVariable",
                "value1"
            ],
            [
                "addOperator",
                "<="
            ],
            [
                "addValueFromVariable",
                "value2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_clearEvaluationArea",
                ""
            ],
            [
                "_setLine",
                "11",
                "26:90"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "less than or equal",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_while_v2": {
        "lines": [
            "public class WhileDemo {",
            "  public static void main(String[] args){",
            "  ",
            "    int count = 1;",
            "    while (count < 4) {",
            "      System.out.println(\"Count is: \" + count);",
            "      count++;",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "1",
                "int"
            ],
            [
                "createValue",
                "4",
                "int"
            ],
            [
                "createValue",
                "Count is: ",
                "String"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "count"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "count"
            ],
            [
                "addOperator",
                "<"
            ],
            [
                "addValue",
                "4"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "10",
                "25"
            ],
            [
                "jumpTrue",
                "6"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Count is: ",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "count"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "goto",
                "5"
            ],
            [
                "jumpFalse",
                "9"
            ]
        ]
    },
    "ae_do_while_v2": {
        "lines": [
            "public class DoWhileDemo {",
            "  public static void main(String[] args){",
            "  ",
            "    int count = 1;",
            "    ",
            "    do {",
            "      System.out.println(\"Count is: \" + count);",
            "      count++;",
            "    } while (count < 4);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "1",
                "int"
            ],
            [
                "createValue",
                "4",
                "int"
            ],
            [
                "createValue",
                "Count is: ",
                "String"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "count"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Count is: ",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "count",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "count"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "count"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "count"
            ],
            [
                "addOperator",
                "<"
            ],
            [
                "addValue",
                "4"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "23",
                "25"
            ],
            [
                "jumpTrue",
                "7"
            ],
            [
                "goto",
                "5"
            ],
            [
                "jumpFalse",
                "10"
            ]
        ]
    },
    "ae_JavaTutorial_4_6_6": {
        "lines": [
            "public class MainClass {",
            "  public static void main(String[] arg) {",
            "",
            "  int limit = 3;",
            "  int sum = 0;",
            "  ",
            "  for (int i = 1, j = 0; i <= limit; i++, j++) {",
            "    sum += i * j;",
            "  }",
            "  ",
            "  System.out.println(sum);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "println",
                "System.out.println",
                1,
                -1
            ],
            [
                "createValue",
                "0",
                "int"
            ],
            [
                "createValue",
                "1",
                "int"
            ],
            [
                "createValue",
                "3",
                "int"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "1"
            ],
            [
                "createVariable",
                "limit"
            ],
            [
                "addValue",
                "3"
            ],
            [
                "assign",
                "limit"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "addValue",
                "0"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "7",
                "7:23"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "createVariable",
                "j"
            ],
            [
                "addValue",
                "0"
            ],
            [
                "assign",
                "j"
            ],
            [
                "_setLine",
                "7",
                "25:35"
            ],
            [
                "addValueFromVariable",
                "i"
            ],
            [
                "addOperator",
                "<="
            ],
            [
                "addValueFromVariable",
                "limit"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "21",
                "42"
            ],
            [
                "jumpTrue",
                "8"
            ],
            [
                "addValueFromVariable",
                "sum"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValueFromVariable",
                "i"
            ],
            [
                "addOperator",
                "*"
            ],
            [
                "addValueFromVariable",
                "j"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "7",
                "37:44"
            ],
            [
                "addValueFromVariable",
                "i"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "addValueFromVariable",
                "j"
            ],
            [
                "addOperator",
                "+"
            ],
            [
                "addValue",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "j"
            ],
            [
                "goto",
                "15"
            ],
            [
                "_removeVariable",
                "i"
            ],
            [
                "_removeVariable",
                "j"
            ],
            [
                "jumpFalse",
                "11"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ]
        ]
    },
    "ae_nested_loops_v2": {
        "lines": [
            "public class NestedLoops {",
            "  public static void main(String[] args) {",
            "    for(int i = 0; i < 3; i++) {",
            "      for(int j = 3; j > i; j--) {",
            "        System.out.print(\"*\");",
            "      }",
            "      System.out.println();",
            "    }",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createFunction",
                "System.out.print",
                "System.out.print(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println()",
                "0",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "j"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "j"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "j"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_beginBlock"
            ],
            [
                "jumpTrue",
                "5"
            ],
            [
                "addFunction",
                "System.out.print",
                "0",
                "1"
            ],
            [
                "addValue",
                "*",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "jumpFalse",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "3"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_use_array_v2": {
        "lines": [
            "public class UseArray {",
            "  public static void main(String[] args) {",
            "",
            "    int[] data = new int[3];",
            "    for (int i = 0; i < data.length; i = i + 1) {",
            "      data[i] = i * i;",
            "      println(data[i]);",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "data"
            ],
            [
                "addOperator",
                "new int[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "assign",
                "data"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromField",
                "length",
                "@data",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "data",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/0"
            ],
            [
                "addOperator",
                "*",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/2"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "data",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/0/1/0"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_JavaTutorial_4_7_5": {
        "lines": [
            "public class MainClass {",
            "  public static void main(String args[]) {",
            "    int nums[] = { 2, 4, 6 };",
            "    int sum = 0;",
            "    for (int x : nums) {",
            "      System.out.println(\"Value is: \" + x);",
            "      sum += x;",
            "    }",
            "    System.out.println(\"Summation: \" + sum);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "nums"
            ],
            [
                "addOperator",
                "new int[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "_clearEvaluationArea"
            ],
            [
                "addCollectionInitializer",
                "2",
                "0",
                "3"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "nums"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "x"
            ],
            [
                "_createIterator",
                "i1",
                "@nums"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "x"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "6",
                "Printing the current value"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Value is: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "x",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_enableAnimations"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "jumpIterationReady",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Summation: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_JavaTutorial_4_7_8": {
        "lines": [
            "public class MainClass {",
            "  public static void main(String args[]) {",
            "",
            "    int sum = 0;",
            "    int nums[] = { 1, 2, 3, 4 };",
            "    for (int x : nums) {",
            "      System.out.println(\"Value is: \" + x);",
            "      sum += x;",
            "      if (x == 3){",
            "        break;",
            "      }",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "nums"
            ],
            [
                "addOperator",
                "new int[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "_clearEvaluationArea"
            ],
            [
                "addCollectionInitializer",
                "3",
                "0",
                "4"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/2/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/3/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/4/0",
                "int"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "nums"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "x"
            ],
            [
                "_createIterator",
                "i1",
                "@nums"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "x"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Value is: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "x",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "x",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "goto",
                "@l4"
            ],
            [
                "_endBlock"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_EnhancedForLoopDemo": {
        "lines": [
            "public class EnhancedForLoopDemo {",
            "  public static void main(String[] args) {",
            "",
            "    int values[] = new int[3];",
            "    for (int i = 0; i < values.length; i++) {",
            "      values[i] = i * i;",
            "    }",
            "",
            "    int total = 0;",
            "    for (int element : values) {",
            "      System.out.println(element);",
            "      total = total + element;",
            "    }",
            "",
            "    System.out.println(\"Sum: \" + total);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "values"
            ],
            [
                "addOperator",
                "new int[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "assign",
                "values"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromField",
                "length",
                "@values",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/0"
            ],
            [
                "addOperator",
                "*",
                "0/2/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/2/2"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_removeVariable",
                "i"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "createVariable",
                "total"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "total"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "createVariable",
                "element"
            ],
            [
                "_createIterator",
                "i1",
                "@values"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i1",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "element"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "element",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromVariable",
                "total",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "element",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "total"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "_removeVariable",
                "element"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Sum: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "total",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_use_2darray_v2": {
        "lines": [
            "public class Test2Darray {",
            "  public static void main(String args[]) {",
            "    int[][] multiD = { { 1, 2, 3, 4 }, { 5, 6, 7 } };",
            "    println(\"The element at [0][2] is \" + multiD[0]);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "codeWidth": 350,
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 1000
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "createOperator",
                "new int[][]",
                "p",
                "",
                "new int[] #"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "multiD"
            ],
            [
                "addOperator",
                "new int[][]",
                "0"
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[][]",
                "null",
                "int[]",
                "length"
            ],
            [
                "_clearEvaluationArea"
            ],
            [
                "addCollectionInitializer",
                "2",
                "0",
                "2"
            ],
            [
                "addOperator",
                "new int[]",
                "0/1/0"
            ],
            [
                "addValue",
                "4",
                "0/1/0/0/0",
                "int"
            ],
            [
                "createArray",
                "0/1/0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "_removeElement",
                "0/1/0"
            ],
            [
                "addCollectionInitializer",
                "5",
                "0/1/0",
                "4"
            ],
            [
                "addValue",
                "1",
                "0/1/0/1/0",
                "int"
            ],
            [
                "addValue",
                "2",
                "0/1/0/2/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/1/0/3/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/1/0/4/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/1/0"
            ],
            [
                "addOperator",
                "new int[][]",
                "0/2/0"
            ],
            [
                "addValue",
                "3",
                "0/2/0/0/0",
                "int"
            ],
            [
                "createArray",
                "0/2/0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "_removeElement",
                "0/2/0"
            ],
            [
                "addCollectionInitializer",
                "9",
                "0/2/0",
                "3"
            ],
            [
                "addValue",
                "5",
                "0/2/0/1/0",
                "int"
            ],
            [
                "addValue",
                "6",
                "0/2/0/2/0",
                "int"
            ],
            [
                "addValue",
                "7",
                "0/2/0/3/0",
                "int"
            ],
            [
                "initializeCollection",
                "0/2/0"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "multiD"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "The element at [0][2] is ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "multiD",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "0",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "2",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_arraylist2_v2": {
        "lines": [
            "import java.util.ArrayList;",
            "public class ArrayListDemo {",
            "  public static void main(String args[]) {",
            "",
            "    ArrayList<String> AL = new ArrayList<String>();",
            "    AL.add(\"C\");",
            "    AL.add(\"A\");",
            "    AL.add(\"E\");",
            "    AL.add(\"B\");",
            "    AL.add(\"D\");",
            "    AL.add(\"F\");",
            "    AL.add(1, \"A2\");",
            "    System.out.println(\"Size of AL: \" + AL.size());",
            "    System.out.println(AL);",
            "    AL.remove(\"F\");",
            "    AL.remove(2);",
            "    System.out.println(\"Size of AL: \" + AL.size());",
            "    System.out.println(AL);",
            "    AL.set(2, \"H\");",
            "    System.out.println(AL);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900,
            "codeWidth": 300
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "ArrayList"
            ],
            [
                "createFunction",
                "ArrayList",
                "ArrayList()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "add",
                "add(element)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "add",
                "add(index, element)",
                "2",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "remove",
                "remove(element)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "set",
                "set(index, element)",
                "2",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "size",
                "size()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "setLine",
                "5"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "AL"
            ],
            [
                "createInstance",
                "ArrayList"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "AL"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "C",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "A",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "19",
                "Adding more elements"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "E",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "B",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "D",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "F",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "A2",
                "0/2/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Size of AL: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0/0/2"
            ],
            [
                "addFunction",
                "size",
                "0/0/3",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "remove",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "F",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "remove",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Size of AL: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0/0/2"
            ],
            [
                "addFunction",
                "size",
                "0/0/3",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "set",
                "1",
                "2",
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "H",
                "0/2/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_JavaTutorial_4_7_4": {
        "lines": [
            "import java.util.ArrayList;",
            "",
            "public class MainClass {",
            "  public static void main(String args[]) {",
            "",
            "    ArrayList<Double> list = new ArrayList<Double>();",
            "",
            "    list.add(10.14);",
            "    list.add(20.22);",
            "    list.add(30.78);",
            "    list.add(40.46);",
            "",
            "    double sum = 0.0;",
            "    for(double itr : list) {",
            "      sum = sum + itr;",
            "    }",
            "    System.out.println(sum);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createClass",
                "ArrayList"
            ],
            [
                "createFunction",
                "ArrayList",
                "ArrayList()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "add",
                "add(element)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "setLine",
                "6"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "list"
            ],
            [
                "createInstance",
                "ArrayList"
            ],
            [
                "addReference",
                "-1"
            ],
            [
                "assign",
                "list"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "list",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10.14",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "list",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "20.22",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "list",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "30.78",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "list",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "40.46",
                "0/1/0",
                "double"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "addValue",
                "0.0",
                "0",
                "double"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "createVariable",
                "itr"
            ],
            [
                "_createIterator",
                "i1",
                "@list"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_iterate",
                "i1",
                "@l3",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "itr"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "itr",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_removeVariable",
                "itr"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_simple_inheritance_1": {
        "lines": [
            "class Pet {",
            "  public void speak(){",
            "    System.out.println(\"speaking!\");",
            "  }",
            "  public void jump(){",
            "    System.out.println(\"jumping!\");",
            "  }",
            "  public void walk(){",
            "    System.out.println(\"walking!\");",
            "  }",
            "}",
            "",
            "class Dog extends Pet {",
            "",
            "}",
            "",
            "public class SimpleInheritance {",
            "  public static void main(String args[]){",
            "    Dog myDog = new Dog();",
            "    myDog.speak();",
            "    myDog.walk();",
            "    myDog.jump();",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 260,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Pet"
            ],
            [
                "createFunction",
                "speak",
                "speak()",
                "1",
                "@l1",
                "Pet"
            ],
            [
                "createFunction",
                "jump",
                "jump()",
                "1",
                "@l2",
                "Pet"
            ],
            [
                "createFunction",
                "walk",
                "walk()",
                "1",
                "@l3",
                "Pet"
            ],
            [
                "createClass",
                "Dog"
            ],
            [
                "setLine",
                "19"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "speaking!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "5"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "jumping!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "walking!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "myDog"
            ],
            [
                "createInstance",
                "Dog"
            ],
            [
                "addReference",
                "-1"
            ],
            [
                "assign",
                "myDog"
            ],
            [
                "setLine",
                "20"
            ],
            [
                "addValueFromVariable",
                "myDog",
                "0"
            ],
            [
                "addFunction",
                "speak",
                "1",
                "0",
                "Pet"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "addValueFromVariable",
                "myDog",
                "0"
            ],
            [
                "addFunction",
                "walk",
                "1",
                "0",
                "Pet"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "22"
            ],
            [
                "addValueFromVariable",
                "myDog",
                "0"
            ],
            [
                "addFunction",
                "jump",
                "1",
                "0",
                "Pet"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_inheritance_polymorphism_1": {
        "lines": [
            "public class SuperClass {",
            "  public void whoAmI(){",
            "    System.out.println(\"I am an object of the super class\");",
            "  }",
            "}",
            "",
            "public class SubClass extends SuperClass {",
            "  public void whoAmI(){",
            "    System.out.println(\"I am an object of the sub class\");",
            "  }",
            "}",
            "",
            "public class InheritanceAndPolymorphism {",
            "  public static void main(String[] args){",
            "    var theObject = new SubClass();",
            "    theObject.whoAmI();",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 260,
            "width": 900,
            "codeWidth": 300
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "SuperClass"
            ],
            [
                "createFunction",
                "whoAmI",
                "whoAmI()",
                "1",
                "@l1",
                "SuperClass"
            ],
            [
                "createClass",
                "SubClass"
            ],
            [
                "createFunction",
                "whoAmI",
                "whoAmI()",
                "1",
                "@l2",
                "SubClass"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "15"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "I am an object of the super class",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "I am an object of the sub class",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "theObject"
            ],
            [
                "createInstance",
                "SubClass"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "theObject"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addValueFromVariable",
                "theObject",
                "0"
            ],
            [
                "addFunction",
                "whoAmI",
                "1",
                "0",
                "SubClass"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_jeg_interface1_v2": {
        "lines": [
            "interface SimpleInterface{",
            "  public void sayHello();",
            "}",
            "",
            "public class JavaInterfaceExample implements SimpleInterface {",
            "",
            "  public void sayHello(){",
            "    System.out.println(\"Hello IS17!\");",
            "  }",
            "",
            "  public static void main(String[] args) {",
            "",
            "    JavaInterfaceExample javaInterfaceExample = new JavaInterfaceExample();",
            "    javaInterfaceExample.sayHello();",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "codeWidth": 300,
            "heapHeight": 80,
            "stackHeight": 260
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createInterface",
                "SimpleInterface"
            ],
            [
                "createFunction",
                "sayHello",
                "sayHello()",
                "1",
                "@l1",
                "SimpleInterface"
            ],
            [
                "createClass",
                "JavaInterfaceExample"
            ],
            [
                "createFunction",
                "sayHello",
                "sayHello()",
                "1",
                "@l2",
                "JavaInterfaceExample"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "13"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "7"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Hello IS17!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "javaInterfaceExample"
            ],
            [
                "createInstance",
                "JavaInterfaceExample"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "javaInterfaceExample"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addValueFromVariable",
                "javaInterfaceExample",
                "0"
            ],
            [
                "addFunction",
                "sayHello",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_Measure": {
        "lines": [
            "interface Measurable {",
            "  int getMeasure();",
            "}",
            "",
            "class BankAccount {",
            "  private double balance;",
            "",
            "  public BankAccount(int initialBalance) {",
            "    balance = initialBalance;",
            "  }",
            "",
            "  public int getMeasure() {",
            "    return balance;",
            "  }",
            "}",
            "",
            "class DataSet {",
            "  private int sum;",
            "  private Measure maximum;",
            "  private int count;",
            "  public DataSet() {",
            "    sum = 0;",
            "    count = 0;",
            "    maximum = null;",
            "  }",
            "",
            "  public void add(Measurable x) {",
            "    sum = sum + x.getMeasure();",
            "    if (count == 0 || maximum.getMeasure() < x.getMeasure())",
            "        maximum = x;",
            "    count++;",
            "  }",
            "  public Measurable getMaximum() {",
            "    return maximum;",
            "  }",
            "}",
            "",
            "public class DataSetTester {",
            "  public static void main(String[] args) {",
            "    DataSet bankData = new DataSet();",
            "    bankData.add(new BankAccount(0));",
            "    bankData.add(new BankAccount(10000));",
            "    bankData.add(new BankAccount(2000));",
            "    Measurable max = bankData.getMaximum();",
            "    System.out.println(\"Highest balance: \" + max.getMeasure());",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "codeWidth": 300,
            "codeHeight": 500
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createInterface",
                "Measurable"
            ],
            [
                "createFunction",
                "getMeasure",
                "getMeasure()",
                "1",
                "@l1",
                "Measurable"
            ],
            [
                "createClass",
                "BankAccount"
            ],
            [
                "createFunction",
                "BankAccount",
                "BankAccount(initialBalance)",
                "1",
                "@l2",
                "BankAccount"
            ],
            [
                "createFunction",
                "getMeasure",
                "getMeasure()",
                "1",
                "@l3",
                "BankAccount"
            ],
            [
                "createClass",
                "DataSet"
            ],
            [
                "createFunction",
                "DataSet",
                "DataSet()",
                "1",
                "@l4",
                "DataSet"
            ],
            [
                "createFunction",
                "add",
                "add(x)",
                "1",
                "@l5",
                "DataSet"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "||",
                "n"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createFunction",
                "getMaximum",
                "getMaximum()",
                "1",
                "@l11",
                "DataSet"
            ],
            [
                "createClass",
                "DataSetTester"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "40"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "createVariable",
                "balance"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "initialBalance"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "initialBalance"
                ]
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "initialBalance",
                "0"
            ],
            [
                "assignField",
                "balance",
                "@this"
            ],
            [
                "addValueFromVariable",
                "this"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "12"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addValueFromField",
                "balance",
                "@this",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "createVariable",
                "maximum"
            ],
            [
                "createVariable",
                "count"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine_",
                "21"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "22"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "sum",
                "@this"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assignField",
                "count",
                "@this"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValue",
                "null",
                "0"
            ],
            [
                "assignField",
                "maximum",
                "@this"
            ],
            [
                "addValueFromVariable",
                "this"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine_",
                "27"
            ],
            [
                "createParameterVariables",
                [
                    "this",
                    "x"
                ]
            ],
            [
                "assignParameters",
                [
                    "this",
                    "x"
                ]
            ],
            [
                "setLine",
                "28"
            ],
            [
                "addValueFromField",
                "sum",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "2"
            ],
            [
                "addFunction",
                "getMeasure",
                "3",
                "0",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Evaluating the method getMeasure - ready."
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "sum",
                "@this"
            ],
            [
                "setLine",
                "29"
            ],
            [
                "addValueFromField",
                "count",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "||",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l10",
                "@l9"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromField",
                "maximum",
                "@this",
                "0"
            ],
            [
                "addFunction",
                "getMeasure",
                "1",
                "0",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Evaluating the method getMeasure - ready."
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "2"
            ],
            [
                "addFunction",
                "getMeasure",
                "3",
                "0",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Evaluating the method getMeasure - ready."
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_conditionalJump",
                "@l6",
                "@l7"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addValueFromVariable",
                "x",
                "0"
            ],
            [
                "assignField",
                "maximum",
                "@this"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "31"
            ],
            [
                "addValueFromField",
                "count",
                "@this",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assignField",
                "count",
                "@this"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine_",
                "33"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "34"
            ],
            [
                "addValueFromField",
                "maximum",
                "@this",
                "0"
            ],
            [
                "returnValue"
            ],
            [
                "_label",
                "l12"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "bankData"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Creating a new DataSet object - ready."
            ],
            [
                "createInstance",
                "DataSet"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "addFunction",
                "DataSet",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "assign",
                "bankData"
            ],
            [
                "setLine",
                "41"
            ],
            [
                "addValueFromVariable",
                "bankData",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Creating a new BankAccount object - ready."
            ],
            [
                "createInstance",
                "BankAccount"
            ],
            [
                "addReference",
                "-1",
                "0/1/0"
            ],
            [
                "addFunction",
                "BankAccount",
                "0/1/1",
                "1",
                "?"
            ],
            [
                "addValue",
                "0",
                "0/1/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "42"
            ],
            [
                "addValueFromVariable",
                "bankData",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Creating a new BankAccount object - ready."
            ],
            [
                "createInstance",
                "BankAccount"
            ],
            [
                "addReference",
                "-1",
                "0/1/0"
            ],
            [
                "addFunction",
                "BankAccount",
                "0/1/1",
                "1",
                "?"
            ],
            [
                "addValue",
                "10000",
                "0/1/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "43"
            ],
            [
                "addValueFromVariable",
                "bankData",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "_disableAnimations"
            ],
            [
                "_disableStepping"
            ],
            [
                "showText",
                "Creating a new BankAccount object - ready."
            ],
            [
                "createInstance",
                "BankAccount"
            ],
            [
                "addReference",
                "-1",
                "0/1/0"
            ],
            [
                "addFunction",
                "BankAccount",
                "0/1/1",
                "1",
                "?"
            ],
            [
                "addValue",
                "2000",
                "0/1/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "enableStepping_"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "44"
            ],
            [
                "createVariable",
                "max"
            ],
            [
                "addValueFromVariable",
                "bankData",
                "0"
            ],
            [
                "addFunction",
                "getMaximum",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "max"
            ],
            [
                "setLine",
                "45"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Highest balance: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "max",
                "0/0/2"
            ],
            [
                "addFunction",
                "getMeasure",
                "0/0/3",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_wrapper_class_v2": {
        "explanations": {
            "line7": "When a primitive value is added to ArrayList, boxing will happen automatically.",
            "line9": "When assigning a boxed value to a variable of type int, the value will be automatically unboxed."
        },
        "lines": [
            "import java.util.ArrayList;",
            "public class Wrapper {",
            "  public static void main(String args[]) {",
            "",
            "    ArrayList<Integer> AL = new ArrayList<Integer>();",
            "    AL.add(new Integer(1));",
            "    AL.add(2);",
            "    for (int i = 0; i < AL.size(); i = i + 1) {",
            "      int x = AL.get(i);",
            "      System.out.println(x);",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "codeWidth": 300
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "Integer"
            ],
            [
                "createFunction",
                "Integer",
                "Integer(value)",
                "1",
                "-1",
                "Integer"
            ],
            [
                "createFunction",
                "intValue",
                "intValue()",
                "0",
                "-1",
                "Integer"
            ],
            [
                "createClass",
                "ArrayList"
            ],
            [
                "createFunction",
                "add",
                "add(element)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "get",
                "get(index)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "size",
                "size()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "setLine",
                "5"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "AL"
            ],
            [
                "createInstance",
                "ArrayList"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "AL"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "createInstance",
                "Integer"
            ],
            [
                "addReference",
                "-1",
                "0/1/0"
            ],
            [
                "addFunction",
                "Integer",
                "0/1/1",
                "1",
                "?"
            ],
            [
                "addValue",
                "1",
                "0/1/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "createInstance",
                "Integer"
            ],
            [
                "addReference",
                "-1",
                "0/1/0"
            ],
            [
                "addFunction",
                "Integer",
                "0/1/1",
                "1",
                "?"
            ],
            [
                "addValue",
                "2",
                "0/1/0/1/0",
                "int"
            ],
            [
                "evaluateFunction",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValueFromVariable",
                "AL",
                "2"
            ],
            [
                "addFunction",
                "size",
                "3",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "createVariable",
                "x"
            ],
            [
                "addValueFromVariable",
                "AL",
                "0"
            ],
            [
                "addFunction",
                "get",
                "1",
                "1",
                "?"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/1/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "addFunction",
                "intValue",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "x"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_exception_v2": {
        "lines": [
            "public class DivisionError {",
            "  public static void main(String args[]) {",
            "",
            "    int numerator = 5;",
            "    int denominator = 0;",
            "",
            "    try {",
            "      System.out.println(numerator / denominator);",
            "    } catch (Exception e) {",
            "      System.out.println(\"Exception : \"+ e.getMessage());",
            "    } finally {",
            "      if (denominator == 0) {",
            "        System.out.println(\"denominator can not be zero!\");",
            "      }",
            "    }",
            "  }",
            "",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "codeWidth": 300,
            "width": "900"
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createClass",
                "ArithmeticException"
            ],
            [
                "createFunction",
                "getMessage",
                "getMessage()",
                "1",
                "-1",
                "ArithmeticException"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "numerator"
            ],
            [
                "addValue",
                "5",
                "0",
                "int"
            ],
            [
                "assign",
                "numerator"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "denominator"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "denominator"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "numerator",
                "0/0/0"
            ],
            [
                "addOperator",
                "/",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "denominator",
                "0/0/2"
            ],
            [
                "flashElement",
                "0/0/1"
            ],
            [
                "clearEvaluationArea_"
            ],
            [
                "createInstance_",
                "ArithmeticException"
            ],
            [
                "addReference_",
                "-1",
                "0"
            ],
            [
                "assign_",
                "e"
            ],
            [
                "setLine_",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Exception : ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "e",
                "0/0/2"
            ],
            [
                "addFunction",
                "getMessage",
                "0/0/3",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "removeVariable_",
                "e"
            ],
            [
                "addValueFromVariable",
                "denominator",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "denominator can not be zero!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_inheritance_polymorphism_2": {
        "lines": [
            "class Pet {",
            "  public void speak() {",
            "    System.out.println(\"\");",
            "  }",
            "}",
            "",
            "class Dog extends Pet {",
            "  public void speak() {",
            "    System.out.println(\"woof! woof!\");",
            "  }",
            "}",
            "",
            "class Cat extends Pet{",
            "  public void speak() {",
            "    System.out.println(\"meow!\");",
            "  }",
            "}",
            "",
            "public class InheritanceAndPolymorphism2 {",
            "  public static void main (String args[]) {",
            "    Pets[] myPets = new Pet[3];",
            "    myPets[0] = new Dog();",
            "    myPets[1] = new Cat();",
            "    myPets[2] = new Dog();",
            "    whoTheyAre(myPets);",
            "  }",
            "",
            "  public static void whoTheyAre(Pet[] pets){",
            "    for (Pet pet : pets){",
            "      pet.speak();",
            "    }",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 400
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "Pet"
            ],
            [
                "createFunction",
                "speak",
                "speak()",
                "1",
                "@l1",
                "Pet"
            ],
            [
                "createClass",
                "Dog"
            ],
            [
                "createFunction",
                "speak",
                "speak()",
                "1",
                "@l2",
                "Dog"
            ],
            [
                "createClass",
                "Cat"
            ],
            [
                "createFunction",
                "speak",
                "speak()",
                "1",
                "@l3",
                "Cat"
            ],
            [
                "createClass",
                "InheritanceAndPolymorphism2"
            ],
            [
                "createOperator",
                "new Pet[]",
                "p",
                "",
                "new Pet #"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createFunction",
                "whoTheyAre",
                "whoTheyAre(pets)",
                "1",
                "@l5",
                "InheritanceAndPolymorphism2",
                "true"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "21"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine_",
                "2"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "3"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine_",
                "8"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "woof! woof!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine_",
                "14"
            ],
            [
                "createParameterVariables",
                [
                    "this"
                ]
            ],
            [
                "assignParameters",
                [
                    "this"
                ]
            ],
            [
                "setLine",
                "15"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "meow!",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "returnVoid"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "myPets"
            ],
            [
                "addOperator",
                "new Pet[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "Pet[]",
                "null",
                "Pet",
                "length"
            ],
            [
                "assign",
                "myPets"
            ],
            [
                "setLine",
                "22"
            ],
            [
                "addValueFromVariable",
                "myPets",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "createInstance",
                "Dog"
            ],
            [
                "addReference",
                "-1",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "23"
            ],
            [
                "addValueFromVariable",
                "myPets",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "createInstance",
                "Cat"
            ],
            [
                "addReference",
                "-1",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "24"
            ],
            [
                "addValueFromVariable",
                "myPets",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "createInstance",
                "Dog"
            ],
            [
                "addReference",
                "-1",
                "0/2/0"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addFunction",
                "whoTheyAre",
                "0",
                "1",
                "InheritanceAndPolymorphism2"
            ],
            [
                "addValueFromVariable",
                "myPets",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine_",
                "28"
            ],
            [
                "createParameterVariables",
                [
                    "pets"
                ]
            ],
            [
                "assignParameters",
                [
                    "pets"
                ]
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "29"
            ],
            [
                "_createIterator",
                "i1",
                "@pets"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_iterate",
                "i1",
                "@l8",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "takeNext",
                "i1",
                "0"
            ],
            [
                "assign",
                "pet"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "30"
            ],
            [
                "addValueFromVariable",
                "pet",
                "0"
            ],
            [
                "addFunction",
                "speak",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "29"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                "31"
            ],
            [
                "returnVoid"
            ]
        ]
    },
    "ae_constant_math_demo": {
        "lines": [
            "public class ConstantMathDemo {",
            "  public static void main(String[] args){",
            "    int diameter = 4;",
            "    double circumference = Math.PI * diameter;",
            "    System.out.println(circumference);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "diameter"
            ],
            [
                "addValue",
                "4",
                "0",
                "int"
            ],
            [
                "assign",
                "diameter"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "circumference"
            ],
            [
                "addValue",
                "3.141592653589793",
                "0",
                "float"
            ],
            [
                "addOperator",
                "*",
                "1"
            ],
            [
                "addValueFromVariable",
                "diameter",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "circumference"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "circumference",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_constant_demo": {
        "lines": [
            "public class ConstantDemo {",
            "  public static void main(String[] args){",
            "    double f = 4.35;",
            "    int n = (int) (100 * f);",
            "    System.out.println(n);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "int",
                "p",
                "",
                "int #"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "f"
            ],
            [
                "addValue",
                "4.35",
                "0",
                "double"
            ],
            [
                "assign",
                "f"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "n"
            ],
            [
                "addOperator",
                "int",
                "0",
                "1"
            ],
            [
                "addValue",
                "100",
                "0/0/0",
                "int"
            ],
            [
                "addOperator",
                "*",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "f",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "n"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "n",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_cash_register_constant_demo": {
        "lines": [
            "public class CashRegisterConstantDemo {",
            "  public static void main(String[] args){",
            "    final double QUARTER_VALUE = 0.25;",
            "    final double DIME_VALUE = 0.1;",
            "    final double NICKEL_VALUE = 0.05;",
            "    final double PENNY_VALUE = 0.01;",
            "",
            "    int dollars = 4;",
            "    int quarters = 1;",
            "    int dimes = 2;",
            "    int nickels = 3;",
            "    int pennies = 6;",
            "",
            "    double payment = dollars + quarters * QUARTER_VALUE + dimes * ",
            "                     DIME_VALUE + nickels * NICKEL_VALUE + pennies * PENNY_VALUE;",
            "    System.out.println(payment);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createVariable",
                "QUARTER_VALUE"
            ],
            [
                "addValue",
                "0.25",
                "0",
                "double"
            ],
            [
                "assign",
                "QUARTER_VALUE"
            ],
            [
                "createVariable",
                "DIME_VALUE"
            ],
            [
                "addValue",
                "0.1",
                "0",
                "double"
            ],
            [
                "assign",
                "DIME_VALUE"
            ],
            [
                "createVariable",
                "NICKEL_VALUE"
            ],
            [
                "addValue",
                "0.05",
                "0",
                "double"
            ],
            [
                "assign",
                "NICKEL_VALUE"
            ],
            [
                "createVariable",
                "PENNY_VALUE"
            ],
            [
                "addValue",
                "0.01",
                "0",
                "double"
            ],
            [
                "assign",
                "PENNY_VALUE"
            ],
            [
                "createVariable",
                "dollars"
            ],
            [
                "addValue",
                "4",
                "0",
                "int"
            ],
            [
                "assign",
                "dollars"
            ],
            [
                "createVariable",
                "quarters"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "quarters"
            ],
            [
                "createVariable",
                "dimes"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "dimes"
            ],
            [
                "createVariable",
                "nickels"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "nickels"
            ],
            [
                "createVariable",
                "pennies"
            ],
            [
                "addValue",
                "6",
                "0",
                "int"
            ],
            [
                "assign",
                "pennies"
            ],
            [
                "setLine",
                "14"
            ]
        ],
        "steps": [
            [
                "createVariable",
                "payment"
            ],
            [
                "addValueFromVariable",
                "dollars",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "quarters",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValueFromVariable",
                "QUARTER_VALUE",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "dimes",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "_setLineHighlight",
                "15"
            ],
            [
                "addValueFromVariable",
                "DIME_VALUE",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "nickels",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValueFromVariable",
                "NICKEL_VALUE",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "pennies",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValueFromVariable",
                "PENNY_VALUE",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "payment"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "payment",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_primitive_datatype_demo": {
        "lines": [
            "public class PrimitiveDataTypeDemo {",
            "  public static void main(String[] args){",
            "    int dollars = 100;",
            "    double balance = dollars;",
            "    System.out.println(balance);",
            "",
            "    short pennies = 10;",
            "    balance = pennies;",
            "    System.out.println(balance);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "double",
                "p",
                "",
                "double #"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "dollars"
            ],
            [
                "addValue",
                "100",
                "0",
                "int"
            ],
            [
                "assign",
                "dollars"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "balance"
            ],
            [
                "addOperator",
                "double",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "dollars",
                "0/0/0"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "balance"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "balance",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "pennies"
            ],
            [
                "addValue",
                "10",
                "0",
                "short"
            ],
            [
                "assign",
                "pennies"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addOperator",
                "double",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "pennies",
                "0/0/0"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "balance"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "balance",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_do_while_demo": {
        "lines": [
            "public class DoWhileDemo {",
            "  public static void main(String[] args){",
            "    int n = 1;",
            "    double x = 0;",
            "    double s;",
            "    do {",
            "      s = 1.0 / (n * n);",
            "      x = x + s;",
            "      n = n + 1;",
            "    } while (s > 0.1);",
            "    System.out.println(x);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "n"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "n"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "x"
            ],
            [
                "addValue",
                "0.0",
                "0",
                "double"
            ],
            [
                "assign",
                "x"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "s"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "7",
                "Calculating the new value for the variable s"
            ],
            [
                "addValue",
                "1.0",
                "0",
                "double"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValueFromVariable",
                "n",
                "2"
            ],
            [
                "addOperator",
                "*",
                "3"
            ],
            [
                "addValueFromVariable",
                "n",
                "4"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Calculating the new value for the variable x"
            ],
            [
                "addValueFromVariable",
                "x",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "s",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "x"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Calculating the new value for the variable n"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "n"
            ],
            [
                "_endBlock"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0.1",
                "2",
                "double"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "x",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_nested_for_demo": {
        "lines": [
            "public class NestedForDemo {",
            "  public static void main(String[] args){",
            "      int width = 3;",
            "      for (var i = 1; i <= width; i++) {",
            "          // Make triangle row",
            "          String r = \"\";",
            "          for (var j = 1; j <= i; j++)",
            "              r = r + \"[]\";",
            "",
            "          System.out.println(r);",
            "      }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "<=",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "width"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "width"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "disableAnimations_"
            ],
            [
                "runForward",
                "4",
                "Checking the test condition"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValueFromVariable",
                "width",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Incrementing the counter"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "r"
            ],
            [
                "addValue",
                "",
                "0",
                "String"
            ],
            [
                "assign",
                "r"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "j"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "j"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "disableAnimations_"
            ],
            [
                "runForward",
                "4",
                "Checking the test condition"
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "addOperator",
                "<=",
                "1"
            ],
            [
                "addValueFromVariable",
                "i",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l9"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Incrementing the counter"
            ],
            [
                "addValueFromVariable",
                "j",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "enableAnimations_"
            ],
            [
                "assign",
                "j"
            ],
            [
                "goto",
                "@l7"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "r",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "[]",
                "2",
                "String"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "r"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "goto",
                "@l8"
            ],
            [
                "_label",
                "l9"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "r",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_while_demo": {
        "lines": [
            "class WhileDemo {",
            " public static void main(String[] args){",
            "    int n = 1729;",
            "    int sum = 0;",
            "    while (n > 0) {",
            "      int digit = n % 10;",
            "      sum = sum + digit;",
            "      n = n / 10;",
            "    }",
            "    System.out.println(sum);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                ">",
                "lr"
            ],
            [
                "createOperator",
                "%",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "/",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "n"
            ],
            [
                "addValue",
                "1729",
                "0",
                "int"
            ],
            [
                "assign",
                "n"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "sum"
            ],
            [
                "addValue",
                "0",
                "0",
                "int"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                ">",
                "1"
            ],
            [
                "addValue",
                "0",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l2",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "digit"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "%",
                "1"
            ],
            [
                "addValue",
                "10",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "digit"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "digit",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "sum"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "n",
                "0"
            ],
            [
                "addOperator",
                "/",
                "1"
            ],
            [
                "addValue",
                "10",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "n"
            ],
            [
                "_endBlock"
            ],
            [
                "goto",
                "@l1"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "sum",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_concat_demo": {
        "lines": [
            "public class ConcatDemo {",
            "  public static void main(String[] args){",
            "    String firstString = \"This is\";",
            "    String secondString = \" a concatenated string.\";",
            "    String thirdString = firstString + secondString;",
            "    System.out.println(thirdString);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "firstString"
            ],
            [
                "addValue",
                "This is",
                "0",
                "String"
            ],
            [
                "assign",
                "firstString"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "secondString"
            ],
            [
                "addValue",
                " a concatenated string.",
                "0",
                "String"
            ],
            [
                "assign",
                "secondString"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "thirdString"
            ],
            [
                "addValueFromVariable",
                "firstString",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValueFromVariable",
                "secondString",
                "2"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "thirdString"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "thirdString",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_conditional_demo1": {
        "lines": [
            "public class ConditionalDemo1 {",
            "  public static void main(String[] args){",
            "    int value1 = 1;",
            "    int value2 = 2;",
            "    if ((value1 == 1) && (value2 == 2))",
            "      System.out.println(\"value1 is 1 AND value2 is 2\");",
            "    if ((value1 == 1) || (value2 == 1))",
            "      System.out.println(\"value1 is 1 OR value2 is 1\");",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "&&",
                "lr"
            ],
            [
                "createOperator",
                "||",
                "n"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "3"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "value1"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "value1"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createVariable",
                "value2"
            ],
            [
                "addValue",
                "2",
                "0",
                "int"
            ],
            [
                "assign",
                "value2"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addValueFromVariable",
                "value1",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "&&",
                "1"
            ],
            [
                "addValueFromVariable",
                "value2",
                "2"
            ],
            [
                "addOperator",
                "==",
                "3"
            ],
            [
                "addValue",
                "2",
                "4",
                "int"
            ],
            [
                "evaluateOperator",
                "3"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "value1 is 1 AND value2 is 2",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "value1",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "addOperator",
                "||",
                "1"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "conditionalJump_",
                "@l8",
                "@l7"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "removeElement_",
                "1",
                "true"
            ],
            [
                "addValueFromVariable",
                "value2",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "value1 is 1 OR value2 is 1",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_switch_demo1": {
        "lines": [
            "public class SwitchDemo {",
            "  public static void main(String[] args) {",
            "",
            "    int month = 3;",
            "    String monthString;",
            "    switch (month) {",
            "      case 1: monthString = \"January\";",
            "        break;",
            "      case 2: monthString = \"February\";",
            "        break;",
            "      case 3: monthString = \"March\";",
            "        break;",
            "      case 4:  monthString = \"April\";",
            "        break;",
            "      case 5:  monthString = \"May\";",
            "        break;",
            "      case 6:  monthString = \"June\";",
            "        break;",
            "      case 7:  monthString = \"July\";",
            "        break;",
            "      case 8:  monthString = \"August\";",
            "        break;",
            "      case 9:  monthString = \"September\";",
            "        break;",
            "      case 10: monthString = \"October\";",
            "        break;",
            "      case 11: monthString = \"November\";",
            "        break;",
            "      case 12: monthString = \"December\";",
            "        break;",
            "      default: monthString = \"Invalid month\";",
            "        break;",
            "    }",
            "    System.out.println(monthString);",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "month"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "month"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "monthString"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "_beginBlock"
            ],
            [
                "addValue",
                "January",
                "0",
                "String"
            ],
            [
                "assign",
                "monthString"
            ],
            [
                "_endBlock"
            ],
            [
                "_goto",
                "@l3"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValue",
                "February",
                "0",
                "String"
            ],
            [
                "assign",
                "monthString"
            ],
            [
                "_endBlock"
            ],
            [
                "_goto",
                "@l6"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "_beginBlock"
            ],
            [
                "_clearEvaluationArea"
            ],
            [
                "addValue",
                "March",
                "0",
                "String"
            ],
            [
                "assign",
                "monthString"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "_endBlock"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "_label",
                "l6"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "setLine",
                "34"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "monthString",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_switch_demo2": {
        "lines": [
            "public class SwitchDemoFallThrough {",
            "",
            " public static void main(String[] args) {",
            "  ArrayList<String> futureMonths = new ArrayList<String>();",
            "",
            "  int month = 3;",
            "",
            "  switch (month) {",
            "    case 1:  futureMonths.add(\"January\");",
            "    case 2:  futureMonths.add(\"February\");",
            "    case 3:  futureMonths.add(\"March\");",
            "    case 4:  futureMonths.add(\"April\");",
            "    case 5:  futureMonths.add(\"May\");",
            "    case 6:  futureMonths.add(\"June\");",
            "    case 7:  futureMonths.add(\"July\");",
            "    case 8:  futureMonths.add(\"August\");",
            "    case 9:  futureMonths.add(\"September\");",
            "    case 10: futureMonths.add(\"October\");",
            "    case 11: futureMonths.add(\"November\");",
            "    case 12: futureMonths.add(\"December\");",
            "    break;",
            "    default: break;",
            "  }",
            "",
            "  if (futureMonths.isEmpty()) {",
            "    System.out.println(\"Invalid month number\");",
            "  } else {",
            "    System.out.println(futureMonths.size() + \" upcoming months.\");",
            "  }",
            " }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 120,
            "stackHeight": 150,
            "width": 950
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createClass",
                "ArrayList"
            ],
            [
                "createFunction",
                "add",
                "add(element)",
                "1",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "isEmpty",
                "isEmpty()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "createFunction",
                "size",
                "size()",
                "0",
                "-1",
                "ArrayList"
            ],
            [
                "createOperator",
                "==",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "futureMonths"
            ],
            [
                "createInstance",
                "ArrayList"
            ],
            [
                "addReference",
                "-1",
                "0"
            ],
            [
                "assign",
                "futureMonths"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "createVariable",
                "month"
            ],
            [
                "addValue",
                "3",
                "0",
                "int"
            ],
            [
                "assign",
                "month"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l1",
                "@l2"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "January",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "2",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l4",
                "@l5"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "February",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "month",
                "0"
            ],
            [
                "addOperator",
                "==",
                "1"
            ],
            [
                "addValue",
                "3",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l7",
                "@l8"
            ],
            [
                "_label",
                "l7"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "March",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_label",
                "l8"
            ],
            [
                "setLine",
                "12",
                "13:99"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "April",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "May",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "14",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "June",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "15",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "July",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "16",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "August",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "17",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "September",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "18",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "October",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "19",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "November",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "20",
                "13:99"
            ],
            [
                "_disableAnimations"
            ],
            [
                "runForward",
                "4",
                "Adding a new month to the collection"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "add",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                "December",
                "0/1/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "enableAnimations_"
            ],
            [
                "setLine",
                "21"
            ],
            [
                "setLine",
                "25"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0"
            ],
            [
                "addFunction",
                "isEmpty",
                "1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_conditionalJump",
                "@l10",
                "@l11"
            ],
            [
                "_label",
                "l10"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "26"
            ],
            [
                "addFunction",
                "println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Invalid month number",
                "0/0/0",
                "String"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "_goto",
                "@l12"
            ],
            [
                "_label",
                "l11"
            ],
            [
                "setLine",
                "28"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "futureMonths",
                "0/0/0"
            ],
            [
                "addFunction",
                "size",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                " upcoming months.",
                "0/0/2",
                "String"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_unary_demo": {
        "lines": [
            "public class UnaryDemo {",
            "  public static void main(String[] args) {",
            "",
            "    int result = +1;",
            "    System.out.println(result);",
            "",
            "    result = result--;",
            "    System.out.println(result);",
            "",
            "    result = result++;",
            "    System.out.println(result);",
            "",
            "    result = -result;",
            "    System.out.println(result);",
            "",
            "    boolean success = false;",
            "    System.out.println(success);",
            "    System.out.println(!success);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 800
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "!",
                "r"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "result"
            ],
            [
                "addOperator",
                "+",
                "0",
                "r"
            ],
            [
                "addValue",
                "1",
                "1",
                "int"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "-",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addValueFromVariable",
                "result",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "13"
            ],
            [
                "addOperator",
                "-",
                "0",
                "r"
            ],
            [
                "addValueFromVariable",
                "result",
                "1"
            ],
            [
                "evaluateOperator",
                "0"
            ],
            [
                "assign",
                "result"
            ],
            [
                "setLine",
                "14"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "result",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "16"
            ],
            [
                "createVariable",
                "success"
            ],
            [
                "addValue",
                "false",
                "0"
            ],
            [
                "assign",
                "success"
            ],
            [
                "setLine",
                "17"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "success",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "18"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addOperator",
                "!",
                "0/0/0",
                "r"
            ],
            [
                "addValueFromVariable",
                "success",
                "0/0/1"
            ],
            [
                "evaluateOperator",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_tostring_demo": {
        "lines": [
            "public class ToStringDemo {",
            "  public static void main(String[] args) {",
            "",
            "    double d = 858.48;",
            "    String s = Double.toString(d);",
            "",
            "    int dot = s.indexOf('.');",
            "",
            "    System.out.println(dot + \" digits \" + \"before decimal point.\");",
            "    System.out.println((s.length() - dot - 1) + \" digits after decimal point.\");",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "createOperator",
                "-",
                "lr"
            ],
            [
                "createClass",
                "Double"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createFunction",
                "toString",
                "Double.toString(d)",
                "1",
                "-1",
                "Double",
                "true"
            ],
            [
                "createClass",
                "String"
            ],
            [
                "createFunction",
                "length",
                "length()",
                "0",
                "-1",
                "String"
            ],
            [
                "createFunction",
                "indexOf",
                "indexOf(c)",
                "1",
                "-1",
                "String"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "d"
            ],
            [
                "addValue",
                "858.48",
                "0",
                "double"
            ],
            [
                "assign",
                "d"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "createVariable",
                "s"
            ],
            [
                "addFunction",
                "toString",
                "0",
                "1",
                "Double"
            ],
            [
                "addValueFromVariable",
                "d",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "s"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "createVariable",
                "dot"
            ],
            [
                "addValueFromVariable",
                "s",
                "0"
            ],
            [
                "addFunction",
                "indexOf",
                "1",
                "1",
                "?"
            ],
            [
                "addValue",
                ".",
                "0/1/0",
                "char"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "assign",
                "dot"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "dot",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                " digits ",
                "0/0/2",
                "String"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                "before decimal point.",
                "0/0/2",
                "String"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "s",
                "0/0/0"
            ],
            [
                "addFunction",
                "length",
                "0/0/1",
                "0",
                "?"
            ],
            [
                "evaluateFunction",
                "0/0/0"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "dot",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addOperator",
                "-",
                "0/0/1"
            ],
            [
                "addValue",
                "1",
                "0/0/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValue",
                " digits after decimal point.",
                "0/0/2",
                "String"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_for_demo": {
        "lines": [
            "public class ForDemo {",
            "  public static void main(String[] args){",
            "",
            "    for(int i = 1; i < 4; i++){",
            "      System.out.println(\"Count is: \" + i);",
            "    }",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 0,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "<",
                "lr"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "_label",
                "l1"
            ],
            [
                "createVariable",
                "i"
            ],
            [
                "addValue",
                "1",
                "0",
                "int"
            ],
            [
                "assign",
                "i"
            ],
            [
                "_label",
                "l2"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "<",
                "1"
            ],
            [
                "addValue",
                "4",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "_conditionalJump",
                "@l5",
                "@l4"
            ],
            [
                "_label",
                "l3"
            ],
            [
                "addValueFromVariable",
                "i",
                "0"
            ],
            [
                "addOperator",
                "+",
                "1"
            ],
            [
                "addValue",
                "1",
                "2",
                "int"
            ],
            [
                "evaluateOperator",
                "1"
            ],
            [
                "assign",
                "i"
            ],
            [
                "goto",
                "@l2"
            ],
            [
                "_label",
                "l5"
            ],
            [
                "_beginBlock"
            ],
            [
                "setLine",
                "5"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValue",
                "Count is: ",
                "0/0/0",
                "String"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "i",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "_endBlock"
            ],
            [
                "setLine",
                "4"
            ],
            [
                "goto",
                "@l3"
            ],
            [
                "_label",
                "l4"
            ],
            [
                "_removeVariable",
                "i"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_multidimarray_demo": {
        "lines": [
            "public class MultiDimArrayDemo {",
            "  public static void main(String[] args) {",
            "",
            "    String[][] names = {{\"Mr. \", \"Mrs. \", \"Ms. \"}, {\"Smith\", \"Jones\"}};",
            "",
            "    // Mr. Smith",
            "    System.out.println(names[0][0] + names[1][0]);",
            "    // Ms. Jones",
            "    System.out.println(names[0][2] + names[1][1]);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "top",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "new String[]",
                "p",
                "",
                "new String #"
            ],
            [
                "createOperator",
                "new String[][]",
                "p",
                "",
                "new String[] #"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "createOperator",
                "+",
                "lr"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "names"
            ],
            [
                "addOperator",
                "new String[][]",
                "0"
            ],
            [
                "addValue",
                "2",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "String[][]",
                "null",
                "String[]",
                "length"
            ],
            [
                "_clearEvaluationArea"
            ],
            [
                "addCollectionInitializer",
                "2",
                "0",
                "2"
            ],
            [
                "addOperator",
                "new String[]",
                "0/1/0"
            ],
            [
                "addValue",
                "3",
                "0/1/0/0/0",
                "int"
            ],
            [
                "createArray",
                "0/1/0",
                "String[]",
                "null",
                "null",
                "length"
            ],
            [
                "_removeElement",
                "0/1/0"
            ],
            [
                "addCollectionInitializer",
                "5",
                "0/1/0",
                "3"
            ],
            [
                "addValue",
                "Mr. ",
                "0/1/0/1/0",
                "String"
            ],
            [
                "addValue",
                "Mrs. ",
                "0/1/0/2/0",
                "String"
            ],
            [
                "addValue",
                "Ms. ",
                "0/1/0/3/0",
                "String"
            ],
            [
                "initializeCollection",
                "0/1/0"
            ],
            [
                "addOperator",
                "new String[]",
                "0/2/0"
            ],
            [
                "addValue",
                "2",
                "0/2/0/0/0",
                "int"
            ],
            [
                "createArray",
                "0/2/0",
                "String[]",
                "null",
                "null",
                "length"
            ],
            [
                "_removeElement",
                "0/2/0"
            ],
            [
                "addCollectionInitializer",
                "10",
                "0/2/0",
                "2"
            ],
            [
                "addValue",
                "Smith",
                "0/2/0/1/0",
                "String"
            ],
            [
                "addValue",
                "Jones",
                "0/2/0/2/0",
                "String"
            ],
            [
                "initializeCollection",
                "0/2/0"
            ],
            [
                "initializeCollection",
                "0"
            ],
            [
                "assign",
                "names"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "names",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "names",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "1",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "0",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "9"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "names",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "2",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "addOperator",
                "+",
                "0/0/1"
            ],
            [
                "addValueFromVariable",
                "names",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "1",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/3"
            ],
            [
                "addValue",
                "1",
                "0/0/2/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/2"
            ],
            [
                "evaluateOperator",
                "0/0/1"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    },
    "ae_array_demo": {
        "lines": [
            "public class ArrayDemo {",
            "  public static void main(String[] args) {",
            "",
            "    int[] values = new int[3];",
            "",
            "    values[0] = 4;",
            "    values[1] = 3;",
            "    values[2] = 9;",
            "",
            "    System.out.println(values[0]);",
            "    values[0] = values[1] * 2;",
            "    System.out.println(values[0]);",
            "",
            "  }",
            "}"
        ],
        "settings": {
            "code": "left",
            "heapHeight": 80,
            "stackHeight": 150,
            "width": 900
        },
        "init": [
            [
                "createFrame"
            ],
            [
                "createOperator",
                "new int[]",
                "p",
                "",
                "new int #"
            ],
            [
                "createOperator",
                "[ ] =",
                "pr",
                "",
                "[ # ] = #"
            ],
            [
                "createOperator",
                "[ ]",
                "pr",
                "",
                " [ # ]"
            ],
            [
                "createOperator",
                "*",
                "lr"
            ],
            [
                "createFunction",
                "System.out.println",
                "System.out.println(text)",
                "1",
                "-1"
            ],
            [
                "setLine",
                "4"
            ]
        ],
        "steps": [
            [
                "goto",
                "@l0"
            ],
            [
                "_label",
                "l0"
            ],
            [
                "createVariable",
                "values"
            ],
            [
                "addOperator",
                "new int[]",
                "0"
            ],
            [
                "addValue",
                "3",
                "0/0/0",
                "int"
            ],
            [
                "createArray",
                "0",
                "int[]",
                "0",
                "int",
                "length"
            ],
            [
                "assign",
                "values"
            ],
            [
                "setLine",
                "6"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "4",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "7"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "1",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "3",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "8"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "2",
                "0/1/0",
                "int"
            ],
            [
                "addValue",
                "9",
                "0/2/0",
                "int"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "10"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "values",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "setLine",
                "11"
            ],
            [
                "addValueFromVariable",
                "values",
                "0"
            ],
            [
                "addOperator",
                "[ ] =",
                "1"
            ],
            [
                "addValue",
                "0",
                "0/1/0",
                "int"
            ],
            [
                "addValueFromVariable",
                "values",
                "0/2/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/2/1"
            ],
            [
                "addValue",
                "1",
                "0/2/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/2/0"
            ],
            [
                "addOperator",
                "*",
                "0/2/1"
            ],
            [
                "addValue",
                "2",
                "0/2/2",
                "int"
            ],
            [
                "evaluateOperator",
                "0/2/1"
            ],
            [
                "setValueAtIndex",
                "0"
            ],
            [
                "setLine",
                "12"
            ],
            [
                "addFunction",
                "System.out.println",
                "0",
                "1"
            ],
            [
                "addValueFromVariable",
                "values",
                "0/0/0"
            ],
            [
                "addOperator",
                "[ ]",
                "0/0/1"
            ],
            [
                "addValue",
                "0",
                "0/0/0/1/0",
                "int"
            ],
            [
                "getValueAtIndex",
                "0/0/0"
            ],
            [
                "evaluateFunction",
                "0"
            ],
            [
                "end"
            ]
        ]
    }
}